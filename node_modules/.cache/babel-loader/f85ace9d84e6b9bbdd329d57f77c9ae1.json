{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/AddProductDialog/AddProductDialog.js\";\nimport React, { Component } from 'react';\nimport './AddProductDialog.style.scss';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../../redux/actions';\nimport { Button, Modal, Form, Input, InputNumber, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport ImageUploader from '../../../../utilities/ImageUploader/ImageUploader';\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n};\n\nclass AddProductDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({\n      isVisible\n    });\n  }\n\n  async onOK() {\n    document.getElementById('product-management-add-product-dialog-btn-submit').click();\n  }\n\n  onFinish(values) {\n    console.log(values);\n  }\n\n  render() {\n    const {\n      selectedCategory\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"product-management__add-product-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Button, {\n      shape: \"circle\",\n      icon: React.createElement(PlusOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }),\n      className: \"product-management__add-product-dialog__btn-open\",\n      onClick: () => this.setDialogVisible(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      title: React.createElement(\"span\", {\n        style: {\n          color: '#ff8220'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, `${selectedCategory.name} | Thêm sản phẩm mới`),\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOK(),\n      onCancel: () => this.setDialogVisible(false),\n      okText: \"Ho\\xE0n t\\u1EA5t\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      okButtonProps: {\n        style: {\n          background: '#ff8220',\n          border: 0\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__add-product-dialog__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__add-product-dialog__content__img-uploading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(ImageUploader, {\n      width: 150,\n      height: 150,\n      onFinish: imageUrl => console.log(imageUrl),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Form, Object.assign({}, layout, {\n      ref: current => {\n        this.formRef.current = current;\n      },\n      className: \"product-management__add-product-dialog__content__form\",\n      onFinish: values => this.onFinish(values),\n      onFinishFailed: message.error('Thông tin sản phẩm chưa đầy đủ, vui lòng kiểm tra lại.'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      name: \"image\",\n      rules: [{\n        required: true\n      }],\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"product-management-add-product-dialog-btn-submit\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"name\",\n      label: \"T\\xEAn s\\u1EA3n ph\\u1EA9m\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập tên sản phẩm'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"T\\u1ED1i \\u0111a 50 k\\xED t\\u1EF1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"supplier\",\n      label: \"Nh\\xE0 cung c\\u1EA5p\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập tên nhà cung cấp'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"T\\u1ED1i \\u0111a 50 k\\xED t\\u1EF1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"price\",\n      label: \"Gi\\xE1 b\\xE1n (VN\\u0110)\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập giá bán'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      placeholder: \"T\\u1ED1i thi\\u1EC3u l\\xE0 0\",\n      formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n      parser: value => value.replace(/\\$\\s?|(,*)/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"availableQuantity\",\n      label: \"S\\u1ED1 l\\u01B0\\u1EE3ng hi\\u1EC7n c\\xF3\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập số lượng hiện có'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      placeholder: \"T\\u1ED1i thi\\u1EC3u l\\xE0 0\",\n      formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n      parser: value => value.replace(/\\$\\s?|(,*)/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(AddProductDialog));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/AddProductDialog/AddProductDialog.js"],"names":["React","Component","withCookies","connect","actions","Button","Modal","Form","Input","InputNumber","message","PlusOutlined","ImageUploader","layout","labelCol","span","wrapperCol","AddProductDialog","constructor","props","state","isVisible","formRef","createRef","setDialogVisible","setState","onOK","document","getElementById","click","onFinish","values","console","log","render","selectedCategory","color","name","style","background","border","imageUrl","current","error","required","display","value","replace"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './AddProductDialog.style.scss';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../../redux/actions';\nimport { Button, Modal, Form, Input, InputNumber, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport ImageUploader from '../../../../utilities/ImageUploader/ImageUploader';\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\n\nclass AddProductDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    }\n\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({ isVisible });\n  }\n\n  async onOK() {\n    document.getElementById('product-management-add-product-dialog-btn-submit').click();\n  }\n\n  onFinish(values) {\n    console.log(values);\n  }\n\n  render() {\n    const { selectedCategory } = this.props;\n    return (\n      <div className=\"product-management__add-product-dialog\">\n        <Button\n          shape=\"circle\"\n          icon={<PlusOutlined />}\n          className=\"product-management__add-product-dialog__btn-open\"\n          onClick={() => this.setDialogVisible(true)}\n        />\n\n        <Modal\n          title={<span style={{ color: '#ff8220' }}>{`${selectedCategory.name} | Thêm sản phẩm mới`}</span>}\n          centered\n          visible={this.state.isVisible}\n          onOk={() => this.onOK()}\n          onCancel={() => this.setDialogVisible(false)}\n          okText=\"Hoàn tất\"\n          cancelText=\"Hủy bỏ\"\n          okButtonProps={{ style: { background: '#ff8220', border: 0 } }}\n        >\n          <div className=\"product-management__add-product-dialog__content\">\n            <div className=\"product-management__add-product-dialog__content__img-uploading\">\n              <ImageUploader\n                width={150}\n                height={150}\n                onFinish={imageUrl => console.log(imageUrl)}\n              />\n            </div>\n            <Form\n              {...layout}\n              ref={current => { this.formRef.current = current; }}\n              className=\"product-management__add-product-dialog__content__form\"\n              onFinish={values => this.onFinish(values)}\n              onFinishFailed={message.error('Thông tin sản phẩm chưa đầy đủ, vui lòng kiểm tra lại.')}\n            >\n              <Form.Item name=\"image\" rules={[{ required: true }]} style={{ display: 'none' }}>\n                <Input />\n              </Form.Item>\n\n              <Form.Item style={{ display: 'none' }}>\n                <Button id=\"product-management-add-product-dialog-btn-submit\" htmlType=\"submit\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"name\"\n                label=\"Tên sản phẩm\"\n                rules={[{ required: true, message: 'Vui lòng nhập tên sản phẩm' }]}\n              >\n                <Input placeholder=\"Tối đa 50 kí tự\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"supplier\"\n                label=\"Nhà cung cấp\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Vui lòng nhập tên nhà cung cấp'\n                  }\n                ]}\n              >\n                <Input placeholder=\"Tối đa 50 kí tự\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"price\"\n                label=\"Giá bán (VNĐ)\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Vui lòng nhập giá bán'\n                  }\n                ]}\n              >\n                <InputNumber\n                  placeholder=\"Tối thiểu là 0\"\n                  formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                  parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"availableQuantity\"\n                label=\"Số lượng hiện có\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Vui lòng nhập số lượng hiện có'\n                  }\n                ]}\n              >\n                <InputNumber\n                  placeholder=\"Tối thiểu là 0\"\n                  formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                  parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n\n            </Form>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(AddProductDialog));\n\n\n"]},"metadata":{},"sourceType":"module"}