{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/BtnAddWorkSchedule/BtnAddWorkSchedule.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Calendar, message } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\nimport './BtnAddWorkSchedule.style.scss';\nimport MONTHS from '../../../../../constants/months.constant';\nimport { API } from '../../../../../constants/api.constant';\nimport { withCookies } from 'react-cookie';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\n\nclass BtnAddWorkSchedule extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onOK = async () => {\n      const {\n        selectedDate\n      } = this.state;\n\n      if (!selectedDate) {\n        message.error('Bạn chưa chọn tháng làm việc');\n        return;\n      }\n\n      const month = selectedDate.getMonth() + 1;\n      const year = selectedDate.getFullYear(); // const res = await (\n      //   await fetch(\n      //     API.Manager.WorkSchedule.addWorkSchedule,\n      //     {\n      //       method: 'POST',\n      //       body: JSON.stringify({ month, year }),\n      //       headers: {\n      //         'Content-type': 'application/json; charset=UTF-8',\n      //         'token': this.props.cookies.get(COOKIE_NAMES.token)\n      //       }\n      //     }\n      //   )\n      // ).json();\n      // if (res.status === 200) {\n      //   const { workSchedule } = res.data;\n      //   console.log(workSchedule);\n      //   message.success(res.messages[0]);\n      // } else {\n      //   message.error(res.errors[0]);\n      // }\n    };\n\n    this.state = {\n      isVisible: false,\n      selectedDate: null\n    };\n  }\n\n  setModalVisible(isVisible) {\n    this.setState({\n      isVisible\n    });\n  }\n\n  onCancel() {\n    console.log('Cancel');\n    this.setModalVisible(false);\n  }\n\n  handleSelectMonth(e) {\n    const selectedDate = new Date(e);\n    this.setState({\n      selectedDate\n    });\n  }\n\n  monthFullCellRender(date) {\n    const {\n      selectedDate\n    } = this.state;\n\n    const _date = new Date(date);\n\n    const monthIndex = _date.getMonth();\n\n    return React.createElement(\"span\", {\n      className: `\n        add-work-schedule__calendar__month \n        ${selectedDate ? _date.getTime() === selectedDate.getTime() ? 'add-work-schedule__calendar__month--selected' : '' : ''}\n      `,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, MONTHS[monthIndex]);\n  }\n\n  render() {\n    const {\n      availableWorkSchedules\n    } = this.props;\n    console.log(availableWorkSchedules);\n    return React.createElement(\"div\", {\n      className: \"add-work-schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"add-work-schedule__btn-add\",\n      icon: React.createElement(PlusCircleFilled, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      type: \"primary\",\n      onClick: () => this.setModalVisible(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Th\\xEAm l\\u1ECBch l\\xE0m vi\\u1EC7c\"), React.createElement(Modal, {\n      title: \"Th\\xEAm l\\u1ECBch l\\xE0m vi\\u1EC7c\",\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOK(),\n      onCancel: () => this.onCancel(),\n      okText: \"Th\\xEAm\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add-work-schedule__calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      mode: \"year\",\n      monthFullCellRender: date => this.monthFullCellRender(date),\n      fullscreen: false,\n      onPanelChange: e => this.handleSelectMonth(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withCookies(BtnAddWorkSchedule);","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/BtnAddWorkSchedule/BtnAddWorkSchedule.js"],"names":["React","Component","Modal","Button","Calendar","message","PlusCircleFilled","MONTHS","API","withCookies","COOKIE_NAMES","BtnAddWorkSchedule","constructor","props","onOK","selectedDate","state","error","month","getMonth","year","getFullYear","isVisible","setModalVisible","setState","onCancel","console","log","handleSelectMonth","e","Date","monthFullCellRender","date","_date","monthIndex","getTime","render","availableWorkSchedules"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button, Calendar, message } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\nimport './BtnAddWorkSchedule.style.scss';\nimport MONTHS from '../../../../../constants/months.constant';\nimport { API } from '../../../../../constants/api.constant';\nimport { withCookies } from 'react-cookie';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\n\nclass BtnAddWorkSchedule extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false,\n      selectedDate: null\n    }\n  }\n\n  setModalVisible(isVisible) {\n    this.setState({ isVisible });\n  }\n\n  onOK = async () => {\n    const { selectedDate } = this.state;\n    if (!selectedDate) {\n      message.error('Bạn chưa chọn tháng làm việc');\n      return;\n    }\n\n    const month = selectedDate.getMonth() + 1;\n    const year = selectedDate.getFullYear();\n    // const res = await (\n    //   await fetch(\n    //     API.Manager.WorkSchedule.addWorkSchedule,\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify({ month, year }),\n    //       headers: {\n    //         'Content-type': 'application/json; charset=UTF-8',\n    //         'token': this.props.cookies.get(COOKIE_NAMES.token)\n    //       }\n    //     }\n    //   )\n    // ).json();\n\n    // if (res.status === 200) {\n    //   const { workSchedule } = res.data;\n    //   console.log(workSchedule);\n    //   message.success(res.messages[0]);\n    // } else {\n    //   message.error(res.errors[0]);\n    // }\n  }\n\n  onCancel() {\n    console.log('Cancel');\n    this.setModalVisible(false);\n  }\n\n  handleSelectMonth(e) {\n    const selectedDate = new Date(e);\n    this.setState({ selectedDate });\n  }\n\n  monthFullCellRender(date) {\n    const { selectedDate } = this.state;\n    const _date = new Date(date);\n    const monthIndex = _date.getMonth();\n    return (\n      <span className={`\n        add-work-schedule__calendar__month \n        ${selectedDate ? _date.getTime() === selectedDate.getTime() ? 'add-work-schedule__calendar__month--selected' : '' : ''}\n      `}>\n        {MONTHS[monthIndex]}\n      </span>\n    );\n  }\n\n  render() {\n    const { availableWorkSchedules } = this.props;\n    console.log(availableWorkSchedules);\n\n    return (\n      <div className=\"add-work-schedule\">\n        <Button\n          className=\"add-work-schedule__btn-add\"\n          icon={<PlusCircleFilled />}\n          type=\"primary\"\n          onClick={() => this.setModalVisible(true)} >\n          Thêm lịch làm việc\n        </Button>\n        <Modal\n          title=\"Thêm lịch làm việc\"\n          centered\n          visible={this.state.isVisible}\n          onOk={() => this.onOK()}\n          onCancel={() => this.onCancel()}\n          okText=\"Thêm\"\n          cancelText=\"Hủy bỏ\"\n        >\n\n          <div className=\"add-work-schedule__calendar\">\n            <Calendar\n              mode=\"year\"\n              monthFullCellRender={date => this.monthFullCellRender(date)}\n              fullscreen={false}\n              onPanelChange={e => this.handleSelectMonth(e)} />\n          </div>\n\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default withCookies(BtnAddWorkSchedule);"]},"metadata":{},"sourceType":"module"}