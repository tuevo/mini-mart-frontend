{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/layout/Sidebar/Sidebar.js\";\nimport React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Sidebar.style.scss';\nimport UserInfo from './UserInfo/UserInfo';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../redux/actions';\nimport links from '../../../constants/sidebar.constant';\nimport USER_ROLE from '../../../constants/user-role.constant';\nconst {\n  Sider\n} = Layout;\n\nclass Sidebar extends Component {\n  componentWillMount() {// const { pagesByUserRole } = this.props;\n    // const href = window.location.href.split('?')[0];\n    // const position = href.split('/');\n    // const currentPath = position[position.length - 1];\n    // pagesByUserRole.forEach((page, index) => {\n    //   if (page.path === `/${currentPath}`) {\n    //     this.pageIndex = index;\n    //     const currentPage = pagesByUserRole[this.pageIndex];\n    //     this.props.setSidebarSelectedIndex(this.pageIndex);\n    //     this.props.setCurrentPageTitle(currentPage.title, currentPage.icon);\n    //   }\n    // });\n    // if (!this.pageIndex) {\n    //   this.pageIndex = 0;\n    //   const { title, icon, path } = pagesByUserRole[this.pageIndex];\n    //   this.props.setSidebarSelectedIndex(this.pageIndex);\n    //   this.props.setCurrentPageTitle(title, icon);\n    //   this.props.history.push(path);\n    // }\n  }\n\n  isCommonPage(path) {\n    const page = links.find(link => link.role === USER_ROLE.USER.type).pages.find(page => page.path === path);\n    if (page) return true;\n    return false;\n  }\n\n  render() {\n    const {\n      user,\n      pagesByUserRole\n    } = this.props;\n    const {\n      sidebarSelectedIndex\n    } = this.props.app;\n    return React.createElement(Sider, {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"sidebar__header__company-logo\",\n      src: require('../../../assets/images/app-logo.png'),\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebar__header__company-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar__header__company-brand__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Mini Mart\")), React.createElement(\"div\", {\n      className: \"sidebar__header__company-brand__slogan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Ti\\u1EC7n L\\u1EE3i m\\xE0 Ch\\u1EA5t L\\u01B0\\u1EE3ng\")))), React.createElement(UserInfo, {\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      theme: \"light\",\n      mode: \"inline\",\n      selectedKeys: [sidebarSelectedIndex ? sidebarSelectedIndex.toString() : '0'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, pagesByUserRole.map((page, pageIndex) => {\n      const Page = {\n        Icon: page.icon\n      };\n      return React.createElement(Menu.Item, {\n        key: pageIndex,\n        className: \"animated slideInLeft\",\n        onClick: () => {\n          this.props.setCurrentPageTitle(page.title, page.icon);\n          this.props.setSidebarSelectedIndex(pageIndex);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Page.Icon, {\n        style: {\n          color: '#ff8220'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"sidebar__nav-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, page.title), React.createElement(Link, {\n        to: page.path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  app: state.app\n});\n\nexport default connect(mapStateToProps, actions)(withRouter(Sidebar));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/layout/Sidebar/Sidebar.js"],"names":["React","Component","Layout","Menu","Link","withRouter","UserInfo","connect","actions","links","USER_ROLE","Sider","Sidebar","componentWillMount","isCommonPage","path","page","find","link","role","USER","type","pages","render","user","pagesByUserRole","props","sidebarSelectedIndex","app","require","toString","map","pageIndex","Page","Icon","icon","setCurrentPageTitle","title","setSidebarSelectedIndex","color","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Sidebar.style.scss';\nimport UserInfo from './UserInfo/UserInfo';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../redux/actions';\nimport links from '../../../constants/sidebar.constant';\nimport USER_ROLE from '../../../constants/user-role.constant';\n\nconst { Sider } = Layout;\n\nclass Sidebar extends Component {\n  pageIndex;\n\n  componentWillMount() {\n    // const { pagesByUserRole } = this.props;\n    // const href = window.location.href.split('?')[0];\n    // const position = href.split('/');\n    // const currentPath = position[position.length - 1];\n\n    // pagesByUserRole.forEach((page, index) => {\n    //   if (page.path === `/${currentPath}`) {\n    //     this.pageIndex = index;\n    //     const currentPage = pagesByUserRole[this.pageIndex];\n    //     this.props.setSidebarSelectedIndex(this.pageIndex);\n    //     this.props.setCurrentPageTitle(currentPage.title, currentPage.icon);\n    //   }\n    // });\n\n    // if (!this.pageIndex) {\n    //   this.pageIndex = 0;\n    //   const { title, icon, path } = pagesByUserRole[this.pageIndex];\n    //   this.props.setSidebarSelectedIndex(this.pageIndex);\n    //   this.props.setCurrentPageTitle(title, icon);\n    //   this.props.history.push(path);\n    // }\n  }\n\n  isCommonPage(path) {\n    const page = links.find(link => link.role === USER_ROLE.USER.type).pages.find(page => page.path === path);\n    if (page)\n      return true;\n    return false;\n  }\n\n  render() {\n    const { user, pagesByUserRole } = this.props;\n    const { sidebarSelectedIndex } = this.props.app;\n\n    return (\n      <Sider className=\"sidebar\">\n        <div className=\"sidebar__header\">\n          <img className=\"sidebar__header__company-logo\" src={require('../../../assets/images/app-logo.png')} alt=\"logo\" />\n          <div className=\"sidebar__header__company-brand\">\n            <div className=\"sidebar__header__company-brand__name\"><span>Mini Mart</span></div>\n            <div className=\"sidebar__header__company-brand__slogan\"><span>Tiện Lợi mà Chất Lượng</span></div>\n          </div>\n        </div>\n        <UserInfo user={user} />\n        <Menu\n          theme='light'\n          mode='inline'\n          selectedKeys={[sidebarSelectedIndex ? sidebarSelectedIndex.toString() : '0']}>\n          {pagesByUserRole.map((page, pageIndex) => {\n            const Page = { Icon: page.icon };\n            return (\n              <Menu.Item key={pageIndex} className=\"animated slideInLeft\"\n                onClick={() => {\n                  this.props.setCurrentPageTitle(page.title, page.icon);\n                  this.props.setSidebarSelectedIndex(pageIndex);\n                }}>\n                <Page.Icon style={{ color: '#ff8220' }} />\n                <span className=\"sidebar__nav-title\">{page.title}</span>\n                <Link to={page.path} />\n              </Menu.Item>\n            )\n          })}\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  app: state.app\n});\n\nexport default connect(mapStateToProps, actions)(withRouter(Sidebar));"]},"metadata":{},"sourceType":"module"}