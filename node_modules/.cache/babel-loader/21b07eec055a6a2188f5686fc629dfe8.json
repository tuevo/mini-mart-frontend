{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/StaffManagement/UpdateStaffDialog/UpdateStaffDialog.js\";\nimport React from 'react';\nimport { withCookies } from 'react-cookie';\nimport { EditOutlined } from '@ant-design/icons';\nimport { Skeleton, Row, Col, Select, Form, Modal, Input, message, DatePicker, Button, Avatar } from 'antd';\nimport './UpdateStaffDialog.style.scss';\nimport USER_ROLES from '../../../../../constants/user-role.constant';\nimport USER_SEX from '../../../../../constants/user-sex';\nimport moment from 'moment';\nimport * as _ from 'lodash';\nimport { API } from '../../../../../constants/api.constant';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\nimport ImageUploader from '../../../../utilities/ImageUploader/ImageUploader';\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n};\n\nclass UpdateStaffDialog extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.onFinish = async values => {\n      let params = { ...values\n      };\n      params.dateOfBirth = moment(params.dateOfBirth).format('DD-MM-YYYY');\n      params.sex = _.find(USER_SEX, s => s.name === params.sex).type;\n      const res = await (await fetch(API.Manager.StaffManagement.updateStaffProfile.replace('{updatedUserID}', this.props.selectedStaff._id), {\n        method: 'PUT',\n        body: JSON.stringify(params),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        },\n        signal: this.abortController.signal\n      })).json();\n\n      if (res.status !== 200) {\n        message.error(res.errors[0]);\n        return;\n      }\n\n      this.props.reloadStaffs(res.data.user);\n      this.setDialogVisible(false);\n      message.success(res.messages[0]);\n    };\n\n    this.state = {\n      isVisible: false\n    };\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({\n      isVisible\n    });\n  }\n\n  loadSelectedStaffProfile() {\n    const {\n      selectedStaff\n    } = this.props;\n    let formInitialValues = {};\n\n    if (selectedStaff) {\n      const keys = Object.keys(selectedStaff).filter(k => ['fullname', 'role', 'sex', 'dateOfBirth', 'username', 'email', 'phone', 'address', 'avatar'].includes(k));\n\n      for (const k of keys) {\n        let value = selectedStaff[k];\n\n        if (k === 'dateOfBirth') {\n          value = value.split('-');\n          const date = new Date(Number(value[2]), Number(value[1]) - 1, Number(value[0]));\n          value = moment(date);\n        }\n\n        formInitialValues[k] = value;\n      }\n    }\n\n    if (this.formRef.current) {\n      this.formRef.current.setFieldsValue({ ...formInitialValues\n      });\n    }\n  }\n\n  onOk() {\n    document.getElementById('update-staff-dialog-btn-submit').click();\n  }\n\n  onCancel() {\n    this.setDialogVisible(false);\n  }\n\n  render() {\n    const {\n      selectedStaff\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, selectedStaff ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Row, {\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(EditOutlined, {\n      className: \"staff-management__body__staffs__sidebar__staff-features__feature__icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 22,\n      className: \"staff-management__body__staffs__sidebar__staff-features__feature__info\",\n      onClick: () => this.setDialogVisible(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"staff-management__body__staffs__sidebar__staff-features__feature__info__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Ch\\u1EC9nh s\\u1EEDa th\\xF4ng tin\"))), React.createElement(Modal, {\n      className: \"staff-management__body__staffs__content__list-staffs__header__dialogs__update-staff-dialog__content\",\n      title: React.createElement(\"span\", {\n        style: {\n          color: '#ff8220',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, selectedStaff.fullname, \" | Th\\xF4ng tin c\\xE1 nh\\xE2n\"),\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOk(),\n      onCancel: () => this.onCancel(),\n      okText: \"L\\u01B0u thay \\u0111\\u1ED5i\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      okButtonProps: {\n        style: {\n          background: '#ff8220',\n          border: 0,\n          fontWeight: 'bold'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, layout, {\n      ref: ref => {\n        this.formRef.current = ref;\n        this.loadSelectedStaffProfile();\n      },\n      className: \"staff-management__body__staffs__content__list-staffs__header__dialogs__update-staff-dialog__form\",\n      onFinish: e => this.onFinish(e),\n      onFinishFailed: () => {\n        message.error('Vui lòng kiểm tra lại thông tin');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      id: \"update-staff-dialog-btn-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"staff-management__body__staffs__content__list-staffs__header__dialogs__update-staff-dialog__form__img-uploader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(ImageUploader, {\n      width: 100,\n      height: 100,\n      onFinish: imageUrl => {\n        if (this.formRef.current) {\n          this.formRef.current.setFieldsValue({\n            avatar: imageUrl\n          });\n        }\n      },\n      defaultImageUrl: selectedStaff.avatar,\n      tooltipTitle: \"Nh\\u1EA5p \\u0111\\u1EC3 t\\u1EA3i \\u1EA3nh l\\xEAn\",\n      tooltipPlacement: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"H\\u1ECD v\\xE0 t\\xEAn\",\n      name: \"fullname\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập họ và tên'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"T\\u1ED1i \\u0111a 30 k\\xED t\\u1EF1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"T\\xEAn t\\xE0i kho\\u1EA3n\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập tên tài khoản'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"T\\u1ED1i \\u0111a 30 k\\xED t\\u1EF1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Ch\\u1EE9c v\\u1EE5\",\n      name: \"role\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng chọn chức vụ'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Select, {\n      placeholder: \"Ch\\u1ECDn ch\\u1EE9c v\\u1EE5\",\n      allowClear: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: USER_ROLES.CASHIER.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, USER_ROLES.CASHIER.name), React.createElement(Option, {\n      value: USER_ROLES.IMPORTER.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, USER_ROLES.IMPORTER.name), React.createElement(Option, {\n      value: USER_ROLES.MANAGER.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, USER_ROLES.MANAGER.name))), React.createElement(Form.Item, {\n      label: \"Gi\\u1EDBi t\\xEDnh\",\n      name: \"sex\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng chọn giới tính'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Select, {\n      placeholder: \"Ch\\u1ECDn gi\\u1EDBi t\\xEDnh\",\n      allowClear: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: USER_SEX.MALE.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, USER_SEX.MALE.name), React.createElement(Option, {\n      value: USER_SEX.FEMALE.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, USER_SEX.FEMALE.name))), React.createElement(Form.Item, {\n      label: \"Ng\\xE0y sinh\",\n      name: \"dateOfBirth\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng chọn ngày sinh'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      placeholder: \"Ch\\u1ECDn ng\\xE0y sinh\",\n      format: \"DD-MM-YYYY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập địa chỉ email'\n      }, {\n        type: \"email\",\n        message: 'Địa chỉ email không hợp lệ'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"abc@gmail.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"\\u0110i\\u1EC7n tho\\u1EA1i\",\n      name: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Input, {\n      maxLength: 11,\n      placeholder: \"G\\u1ED3m 10 ho\\u1EB7c 11 s\\u1ED1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n      name: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Input.TextArea, {\n      placeholder: \"227 Nguy\\u1EC5n V\\u0103n C\\u1EEB, Qu\\u1EADn 5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"\\u1EA2nh \\u0111\\u1EA1i di\\u1EC7n\",\n      name: \"avatar\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"D\\xE1n \\u0111\\u01B0\\u1EDDng d\\u1EABn \\u1EA3nh v\\xE0o \\u0111\\xE2y\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }))))) : React.createElement(Skeleton.Input, {\n      style: {\n        width: '100%',\n        height: 20\n      },\n      active: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withCookies(UpdateStaffDialog);","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/StaffManagement/UpdateStaffDialog/UpdateStaffDialog.js"],"names":["React","withCookies","EditOutlined","Skeleton","Row","Col","Select","Form","Modal","Input","message","DatePicker","Button","Avatar","USER_ROLES","USER_SEX","moment","_","API","PageBase","COOKIE_NAMES","ImageUploader","Option","layout","labelCol","span","wrapperCol","UpdateStaffDialog","constructor","props","onFinish","values","params","dateOfBirth","format","sex","find","s","name","type","res","fetch","Manager","StaffManagement","updateStaffProfile","replace","selectedStaff","_id","method","body","JSON","stringify","headers","cookies","get","token","signal","abortController","json","status","error","errors","reloadStaffs","data","user","setDialogVisible","success","messages","state","isVisible","formRef","createRef","setState","loadSelectedStaffProfile","formInitialValues","keys","Object","filter","k","includes","value","split","date","Date","Number","current","setFieldsValue","onOk","document","getElementById","click","onCancel","render","color","fontWeight","fullname","style","background","border","ref","e","display","imageUrl","avatar","required","CASHIER","IMPORTER","MANAGER","MALE","FEMALE","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withCookies } from 'react-cookie';\nimport { EditOutlined } from '@ant-design/icons';\nimport { Skeleton, Row, Col, Select, Form, Modal, Input, message, DatePicker, Button, Avatar } from 'antd';\nimport './UpdateStaffDialog.style.scss';\nimport USER_ROLES from '../../../../../constants/user-role.constant';\nimport USER_SEX from '../../../../../constants/user-sex';\nimport moment from 'moment';\nimport * as _ from 'lodash';\nimport { API } from '../../../../../constants/api.constant';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\nimport ImageUploader from '../../../../utilities/ImageUploader/ImageUploader';\n\nconst { Option } = Select;\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\n\nclass UpdateStaffDialog extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    }\n\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({ isVisible });\n  }\n\n  loadSelectedStaffProfile() {\n    const { selectedStaff } = this.props;\n    let formInitialValues = {};\n    if (selectedStaff) {\n      const keys = Object.keys(selectedStaff)\n        .filter(k => ['fullname', 'role', 'sex', 'dateOfBirth', 'username', 'email', 'phone', 'address', 'avatar'].includes(k));\n\n      for (const k of keys) {\n        let value = selectedStaff[k];\n\n        if (k === 'dateOfBirth') {\n          value = value.split('-');\n          const date = new Date(Number(value[2]), Number(value[1]) - 1, Number(value[0]));\n          value = moment(date);\n        }\n\n        formInitialValues[k] = value;\n      }\n    }\n\n    if (this.formRef.current) {\n      this.formRef.current.setFieldsValue({ ...formInitialValues });\n    }\n  }\n\n  onOk() {\n    document.getElementById('update-staff-dialog-btn-submit').click();\n  }\n\n  onCancel() {\n    this.setDialogVisible(false);\n  }\n\n  onFinish = async (values) => {\n    let params = { ...values };\n    params.dateOfBirth = moment(params.dateOfBirth).format('DD-MM-YYYY');\n    params.sex = _.find(USER_SEX, s => s.name === params.sex).type;\n\n    const res = await (\n      await fetch(\n        API.Manager.StaffManagement.updateStaffProfile.replace('{updatedUserID}', this.props.selectedStaff._id),\n        {\n          method: 'PUT',\n          body: JSON.stringify(params),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': this.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: this.abortController.signal\n        }\n      )\n    ).json();\n\n    if (res.status !== 200) {\n      message.error(res.errors[0]);\n      return;\n    }\n\n    this.props.reloadStaffs(res.data.user);\n    this.setDialogVisible(false);\n    message.success(res.messages[0]);\n  }\n\n  render() {\n    const { selectedStaff } = this.props;\n    return (\n      <div>\n        {selectedStaff ? (\n          <div>\n            <Row align=\"middle\">\n              <Col span={2}>\n                <EditOutlined className=\"staff-management__body__staffs__sidebar__staff-features__feature__icon\" />\n              </Col>\n              <Col\n                span={22}\n                className=\"staff-management__body__staffs__sidebar__staff-features__feature__info\"\n                onClick={() => this.setDialogVisible(true)}\n              >\n                <span className=\"staff-management__body__staffs__sidebar__staff-features__feature__info__name\">\n                  Chỉnh sửa thông tin</span>\n              </Col>\n            </Row>\n\n            <Modal\n              className=\"staff-management__body__staffs__content__list-staffs__header__dialogs__update-staff-dialog__content\"\n              title={<span style={{ color: '#ff8220', fontWeight: 'bold' }}>{selectedStaff.fullname} | Thông tin cá nhân</span>}\n              centered\n              visible={this.state.isVisible}\n              onOk={() => this.onOk()}\n              onCancel={() => this.onCancel()}\n              okText=\"Lưu thay đổi\"\n              cancelText=\"Hủy bỏ\"\n              okButtonProps={{ style: { background: '#ff8220', border: 0, fontWeight: 'bold' } }}\n            >\n\n              <Form\n                {...layout}\n                ref={ref => {\n                  this.formRef.current = ref;\n                  this.loadSelectedStaffProfile();\n                }}\n                className=\"staff-management__body__staffs__content__list-staffs__header__dialogs__update-staff-dialog__form\"\n                onFinish={e => this.onFinish(e)}\n                onFinishFailed={() => { message.error('Vui lòng kiểm tra lại thông tin'); }}\n              >\n                <Form.Item style={{ display: 'none' }}>\n                  <Button type=\"primary\" htmlType=\"submit\" id=\"update-staff-dialog-btn-submit\" />\n                </Form.Item>\n\n                <div className=\"staff-management__body__staffs__content__list-staffs__header__dialogs__update-staff-dialog__form__img-uploader\">\n                  <ImageUploader\n                    width={100}\n                    height={100}\n                    onFinish={imageUrl => {\n                      if (this.formRef.current) {\n                        this.formRef.current.setFieldsValue({ avatar: imageUrl });\n                      }\n                    }}\n                    defaultImageUrl={selectedStaff.avatar}\n                    tooltipTitle=\"Nhấp để tải ảnh lên\"\n                    tooltipPlacement=\"bottom\"\n                  />\n                </div>\n\n\n                <Form.Item\n                  label=\"Họ và tên\"\n                  name=\"fullname\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Vui lòng nhập họ và tên'\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"Tối đa 30 kí tự\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Tên tài khoản\"\n                  name=\"username\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Vui lòng nhập tên tài khoản'\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"Tối đa 30 kí tự\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Chức vụ\"\n                  name=\"role\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Vui lòng chọn chức vụ'\n                    }\n                  ]}\n                >\n                  <Select\n                    placeholder=\"Chọn chức vụ\"\n                    allowClear\n                  >\n                    <Option value={USER_ROLES.CASHIER.type}>{USER_ROLES.CASHIER.name}</Option>\n                    <Option value={USER_ROLES.IMPORTER.type}>{USER_ROLES.IMPORTER.name}</Option>\n                    <Option value={USER_ROLES.MANAGER.type}>{USER_ROLES.MANAGER.name}</Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Giới tính\"\n                  name=\"sex\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Vui lòng chọn giới tính'\n                    }\n                  ]}\n                >\n                  <Select\n                    placeholder=\"Chọn giới tính\"\n                    allowClear\n                  >\n                    <Option value={USER_SEX.MALE.name}>{USER_SEX.MALE.name}</Option>\n                    <Option value={USER_SEX.FEMALE.name}>{USER_SEX.FEMALE.name}</Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Ngày sinh\"\n                  name=\"dateOfBirth\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Vui lòng chọn ngày sinh'\n                    }\n                  ]}\n                >\n                  <DatePicker placeholder=\"Chọn ngày sinh\" format=\"DD-MM-YYYY\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"E-mail\"\n                  name=\"email\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Vui lòng nhập địa chỉ email'\n                    },\n                    {\n                      type: \"email\",\n                      message: 'Địa chỉ email không hợp lệ'\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"abc@gmail.com\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Điện thoại\"\n                  name=\"phone\"\n                >\n                  <Input maxLength={11} placeholder=\"Gồm 10 hoặc 11 số\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Địa chỉ\"\n                  name=\"address\"\n                >\n                  <Input.TextArea placeholder=\"227 Nguyễn Văn Cừ, Quận 5\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Ảnh đại diện\"\n                  name=\"avatar\"\n                  style={{ display: 'none' }}\n                >\n                  <Input placeholder=\"Dán đường dẫn ảnh vào đây\" />\n                </Form.Item>\n\n              </Form>\n\n            </Modal>\n\n          </div>\n        ) : (<Skeleton.Input style={{ width: '100%', height: 20 }} active={true} size=\"small\" />)}\n      </div>\n    )\n  }\n}\nexport default withCookies(UpdateStaffDialog);"]},"metadata":{},"sourceType":"module"}