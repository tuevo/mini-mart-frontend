{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/ProductManagement.js\";\nimport React from 'react';\nimport './ProductManagement.style.scss';\nimport { Row, Col, Input, List, Button, Table, Badge, Form, message, InputNumber, Modal, Empty, Dropdown, Menu, Select } from 'antd';\nimport { SearchOutlined, CloseOutlined, BellFilled, ExclamationCircleOutlined, EditOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport NumberFormat from 'react-number-format';\nimport ImageUploader from '../../../utilities/ImageUploader/ImageUploader';\nimport * as _ from 'lodash';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport AddProductDialog from './AddProductDialog/AddProductDialog';\nimport AddCategoryDialog from './AddCategoryDialog/AddCategoryDialog';\nimport { API } from '../../../../constants/api.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport { sortByCreatedAt } from '../../../../services/collection-sorting.service';\nimport EditCategoryDialog from './EditCategoryDialog/EditCategoryDialog';\nimport SupplierDialog from './SupplierDialog/SupplierDialog';\nconst {\n  confirm\n} = Modal;\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 9\n  },\n  wrapperCol: {\n    span: 15\n  }\n};\n\nclass ProductManagement extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isProductDetailsPanelShown: false,\n      selectedProduct: {},\n      selectedCategory: {},\n      products: [],\n      productSearchText: '',\n      filteredProducts: [],\n      categories: [],\n      categorySearchText: '',\n      filteredCategories: [],\n      suppliers: [],\n      selectedSupplier: {}\n    };\n    this.productDetailsFormRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    const results = await Promise.all([this.loadCategories(), this.loadSuppliers()]);\n    const categories = results[0];\n    const suppliers = results[1];\n    let {\n      selectedCategory\n    } = this.state;\n    selectedCategory = categories.length > 0 ? { ...categories[0]\n    } : {};\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      categories,\n      filteredCategories: categories,\n      selectedCategory,\n      suppliers,\n      selectedSupplier: suppliers.length > 0 ? { ...suppliers[0]\n      } : {}\n    });\n  }\n\n  async loadSuppliers() {\n    this.props.setAppLoading(true);\n    const res = await (await fetch(API.Importer.ProductManagement.getSuppliers, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        'token': this.props.cookies.get(COOKIE_NAMES.token)\n      },\n      signal: this.abortController.signal\n    })).json();\n    this.props.setAppLoading(false);\n\n    if (res.status !== 200) {\n      return Promise.reject(res.errors[0]);\n    }\n\n    return Promise.resolve(res.data.suppliers);\n  }\n\n  async loadCategories() {\n    this.props.setAppLoading(true);\n    const res = await (await fetch(API.Importer.ProductManagement.getCategories, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        'token': this.props.cookies.get(COOKIE_NAMES.token)\n      },\n      signal: this.abortController.signal\n    })).json();\n    this.props.setAppLoading(false);\n\n    if (res.status !== 200) {\n      return Promise.reject(res.errors[0]);\n    }\n\n    return Promise.resolve(res.data.categories);\n  }\n\n  loadCategoryProducts(category) {\n    this.onProductSearchInputChange(this.state.productSearchText, category.products);\n    this.setState({\n      products: category.products,\n      selectedCategory: { ...category\n      }\n    });\n  }\n\n  toggleProductDetailsPanel(isToggled) {\n    this.setState({\n      isProductDetailsPanelShown: isToggled\n    });\n  }\n\n  handleSelectProduct(product) {\n    this.setState({\n      selectedProduct: this.state.products.find(p => p._id === product._id)\n    });\n    this.toggleProductDetailsPanel(true);\n  }\n\n  handleSelectCategory(category) {\n    if (category._id !== this.state.selectedCategory._id) {\n      this.loadCategoryProducts(category);\n      this.setState({\n        selectedCategory: category\n      });\n    }\n  }\n\n  updateCategoryInList(category) {\n    const {\n      categories\n    } = this.state;\n\n    const index = _.findIndex(categories, p => p._id === category._id);\n\n    categories[index] = { ...category\n    };\n    const text = this.state.categorySearchText;\n    let {\n      filteredCategories,\n      selectedCategory\n    } = this.state;\n\n    if (!text) {\n      filteredCategories = [...categories];\n    } else {\n      filteredCategories = categories.filter(c => c.name.toLowerCase().includes(text.toLowerCase()));\n    }\n\n    selectedCategory = { ...category\n    };\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      filteredCategories,\n      selectedCategory,\n      categories\n    });\n  }\n\n  updateProductDetails(values) {\n    this.props.setAppLoading(true);\n    const params = { ...values\n    };\n    params.supplier = this.state.suppliers.find(s => s._id === params.supplier); //product was updated\n\n    this.props.setAppLoading(false);\n    let {\n      products,\n      selectedProduct,\n      selectedCategory\n    } = this.state;\n\n    for (const key in params) {\n      selectedProduct[key] = params[key];\n    }\n\n    const index = _.findIndex(products, p => p._id === selectedProduct._id);\n\n    if (index >= 0) {\n      products[index] = { ...selectedProduct\n      };\n    }\n\n    selectedCategory.products = products;\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      selectedProduct\n    });\n    this.toggleProductDetailsPanel(false);\n    message.success('Cập nhật sản phẩm thành công');\n  }\n\n  openRemoveProductDialog() {\n    const that = this;\n    const {\n      selectedProduct\n    } = this.state;\n    confirm({\n      title: `Bạn muốn xóa sản phẩm ${selectedProduct.name}?`,\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }),\n      content: '',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n\n      onOk() {\n        that.props.setAppLoading(true); //Product was removed\n\n        that.props.setAppLoading(false);\n        let {\n          products,\n          selectedCategory\n        } = that.state;\n        products = products.filter(p => p._id !== selectedProduct._id);\n        selectedCategory.products = products;\n        that.loadCategoryProducts(selectedCategory);\n        that.toggleProductDetailsPanel(false);\n        message.success('SUCCESS');\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  addToListProducts(product) {\n    let {\n      products,\n      selectedCategory\n    } = this.state;\n    products.push(product);\n    selectedCategory.products = products;\n    this.loadCategoryProducts(selectedCategory);\n  }\n\n  addToListCategories(category) {\n    let {\n      filteredCategories,\n      selectedCategory\n    } = this.state;\n    filteredCategories.push({ ...category\n    });\n    sortByCreatedAt(filteredCategories);\n    selectedCategory = filteredCategories.length > 0 ? filteredCategories[filteredCategories.length - 1] : {};\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      filteredCategories,\n      selectedCategory\n    });\n  }\n\n  onCategorySearchInputChange(text, categories) {\n    let {\n      filteredCategories,\n      selectedCategory\n    } = this.state;\n\n    if (!text) {\n      filteredCategories = [...categories];\n    } else {\n      filteredCategories = categories.filter(c => c.name.toLowerCase().includes(text.toLowerCase()));\n    }\n\n    selectedCategory = filteredCategories.length > 0 ? filteredCategories[0] : {};\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      filteredCategories,\n      selectedCategory,\n      categorySearchText: text\n    });\n  }\n\n  onProductSearchInputChange(text, products) {\n    let {\n      filteredProducts,\n      selectedProduct\n    } = this.state;\n\n    if (!text) {\n      filteredProducts = [...(products || [])];\n    } else {\n      filteredProducts = (products || []).filter(p => {\n        const keys = [...Object.keys(p)].filter(k => ['name'].includes(k));\n\n        for (const k of keys) {\n          if (p[k].toLowerCase().includes(text.toLowerCase())) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n    }\n\n    filteredProducts = (filteredProducts || []).map(p => ({ ...p,\n      key: p._id\n    }));\n\n    if (filteredProducts.length > 0) {\n      const index = _.findIndex(filteredProducts, p => p._id === selectedProduct._id);\n\n      if (index >= 0) {\n        selectedProduct = { ...filteredProducts[index]\n        };\n      } else {\n        selectedProduct = { ...filteredProducts[0]\n        };\n      }\n    } else {\n      selectedProduct = {};\n    }\n\n    this.setState({\n      filteredProducts,\n      selectedProduct,\n      productSearchText: text\n    });\n  }\n\n  handleSelectCategoryMenu(e) {\n    const {\n      key\n    } = e;\n\n    if (key === 'REMOVE') {\n      this.openRemoveCategoryDialog();\n    }\n  }\n\n  openRemoveCategoryDialog() {\n    const that = this;\n    const {\n      selectedCategory\n    } = this.state;\n    confirm({\n      title: `Bạn muốn xóa danh mục ${selectedCategory.name}?`,\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }),\n      content: '',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n\n      async onOk() {\n        that.props.setAppLoading(true);\n        const res = await (await fetch(API.Importer.ProductManagement.removeCategory.replace('{categoryID}', selectedCategory._id), {\n          method: 'DELETE',\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': that.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: that.abortController.signal\n        })).json();\n        that.props.setAppLoading(false);\n\n        if (res.status !== 200) {\n          message.error(res.errors[0]);\n          return;\n        }\n\n        let {\n          categories\n        } = that.state;\n        categories = categories.filter(c => c._id !== selectedCategory._id);\n        that.setState({\n          categories\n        });\n        that.onCategorySearchInputChange(that.state.categorySearchText, categories);\n        message.success(res.messages[0]);\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  render() {\n    let {\n      selectedProduct,\n      suppliers\n    } = this.state;\n    console.log(this.state.selectedSupplier);\n    const columns = [{\n      title: '',\n      dataIndex: 'image',\n      key: 'image',\n      width: 40,\n      render: text => React.createElement(\"img\", {\n        className: \"product-management__container__content__list-products__product-img\",\n        src: text,\n        alt: \"product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      })\n    }, {\n      title: 'Sản phẩm',\n      dataIndex: 'name',\n      key: 'name',\n      width: 200\n    }, {\n      title: 'Nhà cung cấp',\n      dataIndex: 'supplier',\n      key: 'supplier',\n      width: 150,\n      render: (text, record) => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, record.supplier.name)\n    }, {\n      title: 'Giá bán',\n      dataIndex: 'price',\n      key: 'price',\n      width: 100,\n      render: text => React.createElement(NumberFormat, {\n        value: Number(text),\n        displayType: \"text\",\n        thousandSeparator: true,\n        suffix: \" VN\\u0110\",\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      })\n    }, {\n      title: 'SL hiện có',\n      dataIndex: 'availableQuantity',\n      key: 'availableQuantity',\n      width: 120,\n      render: text => React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, text)\n    }, {\n      title: 'Cập nhật lần cuối',\n      dataIndex: 'updatedAt',\n      key: 'updatedAt',\n      width: 150,\n      render: text => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"L\\xFAc \", moment(text).format('HH:mm DD-MM-YYYY'))\n    }, {\n      title: 'Trạng thái',\n      dataIndex: 'status',\n      key: 'status',\n      width: 150,\n      render: (text, record) => React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, record.availableQuantity === 0 ? 'SOLD_OUT' : 'AVAILABLE')\n    }];\n    return React.createElement(\"div\", {\n      className: \"product-management animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__left-sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(Row, {\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"product-management__container__left-sidebar__title__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"Danh m\\u1EE5c s\\u1EA3n ph\\u1EA9m\")), React.createElement(Col, {\n      span: 4,\n      style: {\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(AddCategoryDialog, {\n      addToListCategories: category => this.addToListCategories(category),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"product-management__container__left-sidebar__search-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(Input, {\n      prefix: React.createElement(SearchOutlined, {\n        style: {\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }),\n      placeholder: \"T\\xECm ki\\u1EBFm danh m\\u1EE5c...\",\n      onChange: e => this.onCategorySearchInputChange(e.target.value, this.state.categories),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"product-management__container__left-sidebar__categories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__left-sidebar__categories__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(List, {\n      size: \"small\",\n      dataSource: this.state.filteredCategories,\n      renderItem: item => React.createElement(List.Item, {\n        onClick: () => this.handleSelectCategory(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: `\n                            product-management__container__left-sidebar__categories__item \n                            ${item._id === this.state.selectedCategory._id ? 'product-management__container__left-sidebar__categories__item--selected' : ''}\n                          `,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, item.name), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, item._id === this.state.selectedCategory._id ? React.createElement(Dropdown, {\n        overlay: React.createElement(Menu, {\n          onClick: e => this.handleSelectCategoryMenu(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          },\n          __self: this\n        }, React.createElement(Menu.Item, {\n          key: \"EDIT\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448\n          },\n          __self: this\n        }, React.createElement(EditCategoryDialog, {\n          category: this.state.selectedCategory,\n          updateCategoryInList: category => this.updateCategoryInList(category),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449\n          },\n          __self: this\n        })), React.createElement(Menu.Item, {\n          key: \"REMOVE\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454\n          },\n          __self: this\n        }, \"X\\xF3a\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(EditOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      })) : React.createElement(React.Fragment, null))))),\n      locale: {\n        emptyText: React.createElement(Empty, {\n          image: Empty.PRESENTED_IMAGE_SIMPLE,\n          description: \"Kh\\xF4ng t\\xECm th\\u1EA5y\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465\n          },\n          __self: this\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(Row, {\n      align: \"middle\",\n      gutter: 40,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"product-management__container__topbar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, this.state.selectedCategory.name)), React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__topbar__supplier-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"product-management__container__topbar__supplier-select__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, \"Nh\\xE0 cung c\\u1EA5p\"), React.createElement(Select, {\n      onChange: e => console.log(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, suppliers.map(s => React.createElement(Option, {\n      value: s._id,\n      key: s._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, s.name))))), React.createElement(Col, {\n      span: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__topbar__features\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__topbar__features__feature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      count: 100,\n      overflowCount: 99,\n      className: \"product-management__container__topbar__features__feature__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(BellFilled, {\n      className: \"product-management__container__topbar__features__feature__icon product-management__container__topbar__features__feature__icon--bell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      span: 7,\n      style: {\n        paddingRight: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__topbar__search-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(Input, {\n      prefix: React.createElement(SearchOutlined, {\n        style: {\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }),\n      placeholder: \"T\\xECm ki\\u1EBFm s\\u1EA3n ph\\u1EA9m...\",\n      onChange: e => this.onProductSearchInputChange(e.target.value, this.state.selectedCategory.products),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"product-management__container__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, this.state.isProductDetailsPanelShown && Object.keys(selectedProduct).length > 0 ? React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel animated slideInRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, React.createElement(Button, {\n      shape: \"circle\",\n      icon: React.createElement(CloseOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }),\n      className: \"product-management__container__content__product-details__panel__header__btn-close\",\n      onClick: () => this.toggleProductDetailsPanel(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    })), React.createElement(Col, {\n      align: \"end\",\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      className: \"product-management__container__content__product-details__panel__header__btn-remove-product\",\n      onClick: () => this.openRemoveProductDialog(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, \"X\\xF3a s\\u1EA3n ph\\u1EA9m\")))), React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel__product-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel__product-details__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(ImageUploader, {\n      defaultImageUrl: selectedProduct.image,\n      width: 150,\n      height: 150,\n      tooltipTitle: \"Nh\\u1EA5n \\u0111\\u1EC3 thay \\u0111\\u1ED5i \\u1EA3nh\",\n      tooltipPlacement: \"bottom\",\n      onFinish: imageUrl => {\n        this.productDetailsFormRef.current.setFieldsValue({\n          image: imageUrl\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel__product-details__info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, layout, {\n      ref: current => {\n        this.productDetailsFormRef.current = current;\n\n        if (this.productDetailsFormRef.current) {\n          this.productDetailsFormRef.current.setFieldsValue({\n            image: selectedProduct.image,\n            name: selectedProduct.name,\n            supplier: selectedProduct.supplier._id,\n            price: selectedProduct.price,\n            availableQuantity: selectedProduct.availableQuantity\n          });\n        }\n      },\n      onFinish: values => this.updateProductDetails(values),\n      onFinishFailed: () => message.error('Thông tin sản phẩm chưa đầy đủ'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      name: \"image\",\n      rules: [{\n        required: true\n      }],\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"name\",\n      label: \"T\\xEAn s\\u1EA3n ph\\u1EA9m\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập tên sản phẩm'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"supplier\",\n      label: \"Nh\\xE0 cung c\\u1EA5p\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(Select, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, suppliers.map(s => React.createElement(Select.Option, {\n      value: s._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, s.name)))), React.createElement(Form.Item, {\n      name: \"price\",\n      label: \"Gi\\xE1 b\\xE1n (VN\\u0110)\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập giá bán'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n      parser: value => value.replace(/\\$\\s?|(,*)/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"availableQuantity\",\n      label: \"S\\u1ED1 l\\u01B0\\u1EE3ng hi\\u1EC7n c\\xF3\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập số lượng hiện có'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n      parser: value => value.replace(/\\$\\s?|(,*)/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel__product-details__btn-update__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"product-management__container__content__product-details__panel__product-details__btn-update__wrapper__btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }, \"C\\u1EADp nh\\u1EADt s\\u1EA3n ph\\u1EA9m\")))))))) : React.createElement(React.Fragment, null), React.createElement(\"div\", {\n      className: \"product-management__container__content__list-products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, React.createElement(Table, {\n      dataSource: [...this.state.filteredProducts],\n      columns: columns,\n      scroll: {\n        y: 545\n      },\n      pagination: false,\n      onRow: record => {\n        return {\n          onClick: () => this.handleSelectProduct(record)\n        };\n      },\n      rowClassName: record => record._id === selectedProduct._id ? 'product-management__container__content__list-products__selected-row' : '',\n      locale: {\n        emptyText: React.createElement(Empty, {\n          image: Empty.PRESENTED_IMAGE_SIMPLE,\n          description: \"Kh\\xF4ng t\\xECm th\\u1EA5y s\\u1EA3n ph\\u1EA9m\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660\n          },\n          __self: this\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"product-management__container__content__list-products__bottom-toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    })), React.createElement(AddProductDialog, {\n      selectedCategory: { ...this.state.selectedCategory\n      },\n      addToListProducts: product => this.addToListProducts(product),\n      suppliers: [...suppliers],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(ProductManagement));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/ProductManagement.js"],"names":["React","Row","Col","Input","List","Button","Table","Badge","Form","message","InputNumber","Modal","Empty","Dropdown","Menu","Select","SearchOutlined","CloseOutlined","BellFilled","ExclamationCircleOutlined","EditOutlined","moment","NumberFormat","ImageUploader","_","withCookies","connect","actions","AddProductDialog","AddCategoryDialog","API","PageBase","COOKIE_NAMES","sortByCreatedAt","EditCategoryDialog","SupplierDialog","confirm","Option","layout","labelCol","span","wrapperCol","ProductManagement","constructor","props","state","isProductDetailsPanelShown","selectedProduct","selectedCategory","products","productSearchText","filteredProducts","categories","categorySearchText","filteredCategories","suppliers","selectedSupplier","productDetailsFormRef","createRef","componentDidMount","results","Promise","all","loadCategories","loadSuppliers","length","loadCategoryProducts","setState","setAppLoading","res","fetch","Importer","getSuppliers","method","headers","cookies","get","token","signal","abortController","json","status","reject","errors","resolve","data","getCategories","category","onProductSearchInputChange","toggleProductDetailsPanel","isToggled","handleSelectProduct","product","find","p","_id","handleSelectCategory","updateCategoryInList","index","findIndex","text","filter","c","name","toLowerCase","includes","updateProductDetails","values","params","supplier","s","key","success","openRemoveProductDialog","that","title","icon","content","okText","okType","cancelText","onOk","onCancel","addToListProducts","push","addToListCategories","onCategorySearchInputChange","keys","Object","k","map","handleSelectCategoryMenu","e","openRemoveCategoryDialog","removeCategory","replace","error","messages","render","console","log","columns","dataIndex","width","record","Number","fontWeight","format","availableQuantity","textAlign","marginRight","target","value","item","emptyText","PRESENTED_IMAGE_SIMPLE","paddingRight","image","imageUrl","current","setFieldsValue","price","required","display","y","onClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gCAAP;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,MAAhC,EAAwCC,KAAxC,EAA+CC,KAA/C,EAAsDC,IAAtD,EAA4DC,OAA5D,EAAqEC,WAArE,EAAkFC,KAAlF,EAAyFC,KAAzF,EAAgGC,QAAhG,EAA0GC,IAA1G,EAAgHC,MAAhH,QAA8H,MAA9H;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,UAAxC,EAAoDC,yBAApD,EAA+EC,YAA/E,QAAmG,mBAAnG;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,SAASC,GAAT,QAAoB,oCAApB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,YAAT,QAA6B,4CAA7B;AACA,SAASC,eAAT,QAAgC,iDAAhC;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAczB,KAApB;AACA,MAAM;AAAE0B,EAAAA;AAAF,IAAatB,MAAnB;AAEA,MAAMuB,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADG;AAEbC,EAAAA,UAAU,EAAE;AAAED,IAAAA,IAAI,EAAE;AAAR;AAFC,CAAf;;AAKA,MAAME,iBAAN,SAAgCX,QAAhC,CAAyC;AACvCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,0BAA0B,EAAE,KADjB;AAEXC,MAAAA,eAAe,EAAE,EAFN;AAGXC,MAAAA,gBAAgB,EAAE,EAHP;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,iBAAiB,EAAE,EALR;AAMXC,MAAAA,gBAAgB,EAAE,EANP;AAOXC,MAAAA,UAAU,EAAE,EAPD;AAQXC,MAAAA,kBAAkB,EAAE,EART;AASXC,MAAAA,kBAAkB,EAAE,EATT;AAUXC,MAAAA,SAAS,EAAE,EAVA;AAWXC,MAAAA,gBAAgB,EAAE;AAXP,KAAb;AAcA,SAAKC,qBAAL,GAA6BzD,KAAK,CAAC0D,SAAN,EAA7B;AACD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,CAChC,KAAKC,cAAL,EADgC,EAEhC,KAAKC,aAAL,EAFgC,CAAZ,CAAtB;AAKA,UAAMZ,UAAU,GAAGQ,OAAO,CAAC,CAAD,CAA1B;AACA,UAAML,SAAS,GAAGK,OAAO,CAAC,CAAD,CAAzB;AACA,QAAI;AAAEZ,MAAAA;AAAF,QAAuB,KAAKH,KAAhC;AACAG,IAAAA,gBAAgB,GAAGI,UAAU,CAACa,MAAX,GAAoB,CAApB,GAAwB,EAAE,GAAGb,UAAU,CAAC,CAAD;AAAf,KAAxB,GAA+C,EAAlE;AACA,SAAKc,oBAAL,CAA0BlB,gBAA1B;AAEA,SAAKmB,QAAL,CAAc;AACZf,MAAAA,UADY;AAEZE,MAAAA,kBAAkB,EAAEF,UAFR;AAGZJ,MAAAA,gBAHY;AAIZO,MAAAA,SAJY;AAKZC,MAAAA,gBAAgB,EAAED,SAAS,CAACU,MAAV,GAAmB,CAAnB,GAAuB,EAAE,GAAGV,SAAS,CAAC,CAAD;AAAd,OAAvB,GAA6C;AALnD,KAAd;AAOD;;AAED,QAAMS,aAAN,GAAsB;AACpB,SAAKpB,KAAL,CAAWwB,aAAX,CAAyB,IAAzB;AACA,UAAMC,GAAG,GAAG,MAAM,CAChB,MAAMC,KAAK,CACTxC,GAAG,CAACyC,QAAJ,CAAa7B,iBAAb,CAA+B8B,YADtB,EAET;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,iCADT;AAEP,iBAAS,KAAK9B,KAAL,CAAW+B,OAAX,CAAmBC,GAAnB,CAAuB5C,YAAY,CAAC6C,KAApC;AAFF,OAFX;AAMEC,MAAAA,MAAM,EAAE,KAAKC,eAAL,CAAqBD;AAN/B,KAFS,CADK,EAYhBE,IAZgB,EAAlB;AAcA,SAAKpC,KAAL,CAAWwB,aAAX,CAAyB,KAAzB;;AACA,QAAIC,GAAG,CAACY,MAAJ,KAAe,GAAnB,EAAwB;AACtB,aAAOpB,OAAO,CAACqB,MAAR,CAAeb,GAAG,CAACc,MAAJ,CAAW,CAAX,CAAf,CAAP;AACD;;AAED,WAAOtB,OAAO,CAACuB,OAAR,CAAgBf,GAAG,CAACgB,IAAJ,CAAS9B,SAAzB,CAAP;AACD;;AAED,QAAMQ,cAAN,GAAuB;AACrB,SAAKnB,KAAL,CAAWwB,aAAX,CAAyB,IAAzB;AACA,UAAMC,GAAG,GAAG,MAAM,CAChB,MAAMC,KAAK,CACTxC,GAAG,CAACyC,QAAJ,CAAa7B,iBAAb,CAA+B4C,aADtB,EAET;AACEb,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,iCADT;AAEP,iBAAS,KAAK9B,KAAL,CAAW+B,OAAX,CAAmBC,GAAnB,CAAuB5C,YAAY,CAAC6C,KAApC;AAFF,OAFX;AAMEC,MAAAA,MAAM,EAAE,KAAKC,eAAL,CAAqBD;AAN/B,KAFS,CADK,EAYhBE,IAZgB,EAAlB;AAcA,SAAKpC,KAAL,CAAWwB,aAAX,CAAyB,KAAzB;;AACA,QAAIC,GAAG,CAACY,MAAJ,KAAe,GAAnB,EAAwB;AACtB,aAAOpB,OAAO,CAACqB,MAAR,CAAeb,GAAG,CAACc,MAAJ,CAAW,CAAX,CAAf,CAAP;AACD;;AAED,WAAOtB,OAAO,CAACuB,OAAR,CAAgBf,GAAG,CAACgB,IAAJ,CAASjC,UAAzB,CAAP;AACD;;AAEDc,EAAAA,oBAAoB,CAACqB,QAAD,EAAW;AAC7B,SAAKC,0BAAL,CAAgC,KAAK3C,KAAL,CAAWK,iBAA3C,EAA8DqC,QAAQ,CAACtC,QAAvE;AACA,SAAKkB,QAAL,CAAc;AAAElB,MAAAA,QAAQ,EAAEsC,QAAQ,CAACtC,QAArB;AAA+BD,MAAAA,gBAAgB,EAAE,EAAE,GAAGuC;AAAL;AAAjD,KAAd;AACD;;AAEDE,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,SAAKvB,QAAL,CAAc;AAAErB,MAAAA,0BAA0B,EAAE4C;AAA9B,KAAd;AACD;;AAEDC,EAAAA,mBAAmB,CAACC,OAAD,EAAU;AAC3B,SAAKzB,QAAL,CAAc;AAAEpB,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWI,QAAX,CAAoB4C,IAApB,CAAyBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUH,OAAO,CAACG,GAAhD;AAAnB,KAAd;AACA,SAAKN,yBAAL,CAA+B,IAA/B;AACD;;AAEDO,EAAAA,oBAAoB,CAACT,QAAD,EAAW;AAC7B,QAAIA,QAAQ,CAACQ,GAAT,KAAiB,KAAKlD,KAAL,CAAWG,gBAAX,CAA4B+C,GAAjD,EAAsD;AACpD,WAAK7B,oBAAL,CAA0BqB,QAA1B;AACA,WAAKpB,QAAL,CAAc;AAAEnB,QAAAA,gBAAgB,EAAEuC;AAApB,OAAd;AACD;AACF;;AAEDU,EAAAA,oBAAoB,CAACV,QAAD,EAAW;AAC7B,UAAM;AAAEnC,MAAAA;AAAF,QAAiB,KAAKP,KAA5B;;AACA,UAAMqD,KAAK,GAAG1E,CAAC,CAAC2E,SAAF,CAAY/C,UAAZ,EAAwB0C,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUR,QAAQ,CAACQ,GAAhD,CAAd;;AACA3C,IAAAA,UAAU,CAAC8C,KAAD,CAAV,GAAoB,EAAE,GAAGX;AAAL,KAApB;AAEA,UAAMa,IAAI,GAAG,KAAKvD,KAAL,CAAWQ,kBAAxB;AACA,QAAI;AAAEC,MAAAA,kBAAF;AAAsBN,MAAAA;AAAtB,QAA2C,KAAKH,KAApD;;AACA,QAAI,CAACuD,IAAL,EAAW;AACT9C,MAAAA,kBAAkB,GAAG,CAAC,GAAGF,UAAJ,CAArB;AACD,KAFD,MAEO;AACLE,MAAAA,kBAAkB,GAAGF,UAAU,CAACiD,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8BL,IAAI,CAACI,WAAL,EAA9B,CAAvB,CAArB;AACD;;AAEDxD,IAAAA,gBAAgB,GAAG,EAAE,GAAGuC;AAAL,KAAnB;AACA,SAAKrB,oBAAL,CAA0BlB,gBAA1B;AAEA,SAAKmB,QAAL,CAAc;AACZb,MAAAA,kBADY;AAEZN,MAAAA,gBAFY;AAGZI,MAAAA;AAHY,KAAd;AAKD;;AAEDsD,EAAAA,oBAAoB,CAACC,MAAD,EAAS;AAC3B,SAAK/D,KAAL,CAAWwB,aAAX,CAAyB,IAAzB;AACA,UAAMwC,MAAM,GAAG,EAAE,GAAGD;AAAL,KAAf;AACAC,IAAAA,MAAM,CAACC,QAAP,GAAkB,KAAKhE,KAAL,CAAWU,SAAX,CAAqBsC,IAArB,CAA0BiB,CAAC,IAAIA,CAAC,CAACf,GAAF,KAAUa,MAAM,CAACC,QAAhD,CAAlB,CAH2B,CAK3B;;AACA,SAAKjE,KAAL,CAAWwB,aAAX,CAAyB,KAAzB;AACA,QAAI;AAAEnB,MAAAA,QAAF;AAAYF,MAAAA,eAAZ;AAA6BC,MAAAA;AAA7B,QAAkD,KAAKH,KAA3D;;AACA,SAAK,MAAMkE,GAAX,IAAkBH,MAAlB,EAA0B;AACxB7D,MAAAA,eAAe,CAACgE,GAAD,CAAf,GAAuBH,MAAM,CAACG,GAAD,CAA7B;AACD;;AAED,UAAMb,KAAK,GAAG1E,CAAC,CAAC2E,SAAF,CAAYlD,QAAZ,EAAsB6C,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUhD,eAAe,CAACgD,GAArD,CAAd;;AACA,QAAIG,KAAK,IAAI,CAAb,EAAgB;AACdjD,MAAAA,QAAQ,CAACiD,KAAD,CAAR,GAAkB,EAAE,GAAGnD;AAAL,OAAlB;AACD;;AAEDC,IAAAA,gBAAgB,CAACC,QAAjB,GAA4BA,QAA5B;AACA,SAAKiB,oBAAL,CAA0BlB,gBAA1B;AACA,SAAKmB,QAAL,CAAc;AAAEpB,MAAAA;AAAF,KAAd;AACA,SAAK0C,yBAAL,CAA+B,KAA/B;AACAhF,IAAAA,OAAO,CAACuG,OAAR,CAAgB,8BAAhB;AACD;;AAEDC,EAAAA,uBAAuB,GAAG;AACxB,UAAMC,IAAI,GAAG,IAAb;AACA,UAAM;AAAEnE,MAAAA;AAAF,QAAsB,KAAKF,KAAjC;AACAT,IAAAA,OAAO,CAAC;AACN+E,MAAAA,KAAK,EAAG,yBAAwBpE,eAAe,CAACwD,IAAK,GAD/C;AAENa,MAAAA,IAAI,EAAE,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,MAAM,EAAE,QAJF;AAKNC,MAAAA,MAAM,EAAE,QALF;AAMNC,MAAAA,UAAU,EAAE,eANN;;AAONC,MAAAA,IAAI,GAAG;AACLP,QAAAA,IAAI,CAACtE,KAAL,CAAWwB,aAAX,CAAyB,IAAzB,EADK,CAGL;;AACA8C,QAAAA,IAAI,CAACtE,KAAL,CAAWwB,aAAX,CAAyB,KAAzB;AACA,YAAI;AAAEnB,UAAAA,QAAF;AAAYD,UAAAA;AAAZ,YAAiCkE,IAAI,CAACrE,KAA1C;AACAI,QAAAA,QAAQ,GAAGA,QAAQ,CAACoD,MAAT,CAAgBP,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUhD,eAAe,CAACgD,GAA/C,CAAX;AAEA/C,QAAAA,gBAAgB,CAACC,QAAjB,GAA4BA,QAA5B;AACAiE,QAAAA,IAAI,CAAChD,oBAAL,CAA0BlB,gBAA1B;AAEAkE,QAAAA,IAAI,CAACzB,yBAAL,CAA+B,KAA/B;AACAhF,QAAAA,OAAO,CAACuG,OAAR,CAAgB,SAAhB;AACD,OApBK;;AAqBNU,MAAAA,QAAQ,GAAG,CAAG;;AArBR,KAAD,CAAP;AAuBD;;AAEDC,EAAAA,iBAAiB,CAAC/B,OAAD,EAAU;AACzB,QAAI;AAAE3C,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAiC,KAAKH,KAA1C;AACAI,IAAAA,QAAQ,CAAC2E,IAAT,CAAchC,OAAd;AACA5C,IAAAA,gBAAgB,CAACC,QAAjB,GAA4BA,QAA5B;AACA,SAAKiB,oBAAL,CAA0BlB,gBAA1B;AACD;;AAED6E,EAAAA,mBAAmB,CAACtC,QAAD,EAAW;AAC5B,QAAI;AAAEjC,MAAAA,kBAAF;AAAsBN,MAAAA;AAAtB,QAA2C,KAAKH,KAApD;AACAS,IAAAA,kBAAkB,CAACsE,IAAnB,CAAwB,EAAE,GAAGrC;AAAL,KAAxB;AACAtD,IAAAA,eAAe,CAACqB,kBAAD,CAAf;AACAN,IAAAA,gBAAgB,GAAGM,kBAAkB,CAACW,MAAnB,GAA4B,CAA5B,GAAgCX,kBAAkB,CAACA,kBAAkB,CAACW,MAAnB,GAA4B,CAA7B,CAAlD,GAAoF,EAAvG;AACA,SAAKC,oBAAL,CAA0BlB,gBAA1B;AACA,SAAKmB,QAAL,CAAc;AACZb,MAAAA,kBADY;AAEZN,MAAAA;AAFY,KAAd;AAID;;AAED8E,EAAAA,2BAA2B,CAAC1B,IAAD,EAAOhD,UAAP,EAAmB;AAC5C,QAAI;AAAEE,MAAAA,kBAAF;AAAsBN,MAAAA;AAAtB,QAA2C,KAAKH,KAApD;;AACA,QAAI,CAACuD,IAAL,EAAW;AACT9C,MAAAA,kBAAkB,GAAG,CAAC,GAAGF,UAAJ,CAArB;AACD,KAFD,MAEO;AACLE,MAAAA,kBAAkB,GAAGF,UAAU,CAACiD,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8BL,IAAI,CAACI,WAAL,EAA9B,CAAvB,CAArB;AACD;;AAEDxD,IAAAA,gBAAgB,GAAGM,kBAAkB,CAACW,MAAnB,GAA4B,CAA5B,GAAgCX,kBAAkB,CAAC,CAAD,CAAlD,GAAwD,EAA3E;AACA,SAAKY,oBAAL,CAA0BlB,gBAA1B;AAEA,SAAKmB,QAAL,CAAc;AACZb,MAAAA,kBADY;AAEZN,MAAAA,gBAFY;AAGZK,MAAAA,kBAAkB,EAAE+C;AAHR,KAAd;AAKD;;AAEDZ,EAAAA,0BAA0B,CAACY,IAAD,EAAOnD,QAAP,EAAiB;AACzC,QAAI;AAAEE,MAAAA,gBAAF;AAAoBJ,MAAAA;AAApB,QAAwC,KAAKF,KAAjD;;AACA,QAAI,CAACuD,IAAL,EAAW;AACTjD,MAAAA,gBAAgB,GAAG,CAAC,IAAIF,QAAQ,IAAI,EAAhB,CAAD,CAAnB;AACD,KAFD,MAEO;AACLE,MAAAA,gBAAgB,GAAG,CAACF,QAAQ,IAAI,EAAb,EAAiBoD,MAAjB,CAAwBP,CAAC,IAAI;AAC9C,cAAMiC,IAAI,GAAG,CAAC,GAAGC,MAAM,CAACD,IAAP,CAAYjC,CAAZ,CAAJ,EAAoBO,MAApB,CAA2B4B,CAAC,IAAI,CAAC,MAAD,EAASxB,QAAT,CAAkBwB,CAAlB,CAAhC,CAAb;;AACA,aAAK,MAAMA,CAAX,IAAgBF,IAAhB,EAAsB;AACpB,cAAIjC,CAAC,CAACmC,CAAD,CAAD,CAAKzB,WAAL,GAAmBC,QAAnB,CAA4BL,IAAI,CAACI,WAAL,EAA5B,CAAJ,EAAqD;AACnD,mBAAO,IAAP;AACD;AACF;;AACD,eAAO,KAAP;AACD,OARkB,CAAnB;AASD;;AAEDrD,IAAAA,gBAAgB,GAAG,CAACA,gBAAgB,IAAI,EAArB,EAAyB+E,GAAzB,CAA6BpC,CAAC,KAAK,EAAE,GAAGA,CAAL;AAAQiB,MAAAA,GAAG,EAAEjB,CAAC,CAACC;AAAf,KAAL,CAA9B,CAAnB;;AAEA,QAAI5C,gBAAgB,CAACc,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,YAAMiC,KAAK,GAAG1E,CAAC,CAAC2E,SAAF,CAAYhD,gBAAZ,EAA8B2C,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUhD,eAAe,CAACgD,GAA7D,CAAd;;AACA,UAAIG,KAAK,IAAI,CAAb,EAAgB;AACdnD,QAAAA,eAAe,GAAG,EAAE,GAAGI,gBAAgB,CAAC+C,KAAD;AAArB,SAAlB;AACD,OAFD,MAEO;AACLnD,QAAAA,eAAe,GAAG,EAAE,GAAGI,gBAAgB,CAAC,CAAD;AAArB,SAAlB;AACD;AACF,KAPD,MAOO;AACLJ,MAAAA,eAAe,GAAG,EAAlB;AACD;;AAED,SAAKoB,QAAL,CAAc;AACZhB,MAAAA,gBADY;AAEZJ,MAAAA,eAFY;AAGZG,MAAAA,iBAAiB,EAAEkD;AAHP,KAAd;AAKD;;AAED+B,EAAAA,wBAAwB,CAACC,CAAD,EAAI;AAC1B,UAAM;AAAErB,MAAAA;AAAF,QAAUqB,CAAhB;;AACA,QAAIrB,GAAG,KAAK,QAAZ,EAAsB;AACpB,WAAKsB,wBAAL;AACD;AACF;;AAEDA,EAAAA,wBAAwB,GAAG;AACzB,UAAMnB,IAAI,GAAG,IAAb;AACA,UAAM;AAAElE,MAAAA;AAAF,QAAuB,KAAKH,KAAlC;AACAT,IAAAA,OAAO,CAAC;AACN+E,MAAAA,KAAK,EAAG,yBAAwBnE,gBAAgB,CAACuD,IAAK,GADhD;AAENa,MAAAA,IAAI,EAAE,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,MAAM,EAAE,QAJF;AAKNC,MAAAA,MAAM,EAAE,QALF;AAMNC,MAAAA,UAAU,EAAE,eANN;;AAON,YAAMC,IAAN,GAAa;AACXP,QAAAA,IAAI,CAACtE,KAAL,CAAWwB,aAAX,CAAyB,IAAzB;AACA,cAAMC,GAAG,GAAG,MAAM,CAChB,MAAMC,KAAK,CACTxC,GAAG,CAACyC,QAAJ,CAAa7B,iBAAb,CAA+B4F,cAA/B,CAA8CC,OAA9C,CAAsD,cAAtD,EAAsEvF,gBAAgB,CAAC+C,GAAvF,CADS,EAET;AACEtB,UAAAA,MAAM,EAAE,QADV;AAEEC,UAAAA,OAAO,EAAE;AACP,4BAAgB,iCADT;AAEP,qBAASwC,IAAI,CAACtE,KAAL,CAAW+B,OAAX,CAAmBC,GAAnB,CAAuB5C,YAAY,CAAC6C,KAApC;AAFF,WAFX;AAMEC,UAAAA,MAAM,EAAEoC,IAAI,CAACnC,eAAL,CAAqBD;AAN/B,SAFS,CADK,EAYhBE,IAZgB,EAAlB;AAcAkC,QAAAA,IAAI,CAACtE,KAAL,CAAWwB,aAAX,CAAyB,KAAzB;;AACA,YAAIC,GAAG,CAACY,MAAJ,KAAe,GAAnB,EAAwB;AACtBxE,UAAAA,OAAO,CAAC+H,KAAR,CAAcnE,GAAG,CAACc,MAAJ,CAAW,CAAX,CAAd;AACA;AACD;;AAED,YAAI;AAAE/B,UAAAA;AAAF,YAAiB8D,IAAI,CAACrE,KAA1B;AACAO,QAAAA,UAAU,GAAGA,UAAU,CAACiD,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACP,GAAF,KAAU/C,gBAAgB,CAAC+C,GAAlD,CAAb;AACAmB,QAAAA,IAAI,CAAC/C,QAAL,CAAc;AAAEf,UAAAA;AAAF,SAAd;AACA8D,QAAAA,IAAI,CAACY,2BAAL,CAAiCZ,IAAI,CAACrE,KAAL,CAAWQ,kBAA5C,EAAgED,UAAhE;AACA3C,QAAAA,OAAO,CAACuG,OAAR,CAAgB3C,GAAG,CAACoE,QAAJ,CAAa,CAAb,CAAhB;AACD,OAlCK;;AAmCNf,MAAAA,QAAQ,GAAG,CAAG;;AAnCR,KAAD,CAAP;AAqCD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,QAAI;AAAE3F,MAAAA,eAAF;AAAmBQ,MAAAA;AAAnB,QAAiC,KAAKV,KAA1C;AACA8F,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK/F,KAAL,CAAWW,gBAAvB;AACA,UAAMqF,OAAO,GAAG,CACd;AACE1B,MAAAA,KAAK,EAAE,EADT;AAEE2B,MAAAA,SAAS,EAAE,OAFb;AAGE/B,MAAAA,GAAG,EAAE,OAHP;AAIEgC,MAAAA,KAAK,EAAE,EAJT;AAKEL,MAAAA,MAAM,EAAGtC,IAAD,IACN;AACE,QAAA,SAAS,EAAC,oEADZ;AAEE,QAAA,GAAG,EAAEA,IAFP;AAGE,QAAA,GAAG,EAAC,SAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,KADc,EAad;AACEe,MAAAA,KAAK,EAAE,UADT;AAEE2B,MAAAA,SAAS,EAAE,MAFb;AAGE/B,MAAAA,GAAG,EAAE,MAHP;AAIEgC,MAAAA,KAAK,EAAE;AAJT,KAbc,EAmBd;AACE5B,MAAAA,KAAK,EAAE,cADT;AAEE2B,MAAAA,SAAS,EAAE,UAFb;AAGE/B,MAAAA,GAAG,EAAE,UAHP;AAIEgC,MAAAA,KAAK,EAAE,GAJT;AAKEL,MAAAA,MAAM,EAAE,CAACtC,IAAD,EAAO4C,MAAP,KAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,MAAM,CAACnC,QAAP,CAAgBN,IAAvB;AAL7B,KAnBc,EA0Bd;AACEY,MAAAA,KAAK,EAAE,SADT;AAEE2B,MAAAA,SAAS,EAAE,OAFb;AAGE/B,MAAAA,GAAG,EAAE,OAHP;AAIEgC,MAAAA,KAAK,EAAE,GAJT;AAKEL,MAAAA,MAAM,EAAGtC,IAAD,IACN,oBAAC,YAAD;AACE,QAAA,KAAK,EAAE6C,MAAM,CAAC7C,IAAD,CADf;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,iBAAiB,EAAE,IAHrB;AAIE,QAAA,MAAM,EAAC,WAJT;AAKE,QAAA,KAAK,EAAE;AAAE8C,UAAAA,UAAU,EAAE;AAAd,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,KA1Bc,EAyCd;AACE/B,MAAAA,KAAK,EAAE,YADT;AAEE2B,MAAAA,SAAS,EAAE,mBAFb;AAGE/B,MAAAA,GAAG,EAAE,mBAHP;AAIEgC,MAAAA,KAAK,EAAE,GAJT;AAKEL,MAAAA,MAAM,EAAGtC,IAAD,IAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASA,IAAT;AALrB,KAzCc,EAgDd;AACEe,MAAAA,KAAK,EAAE,mBADT;AAEE2B,MAAAA,SAAS,EAAE,WAFb;AAGE/B,MAAAA,GAAG,EAAE,WAHP;AAIEgC,MAAAA,KAAK,EAAE,GAJT;AAKEL,MAAAA,MAAM,EAAGtC,IAAD,IAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW/E,MAAM,CAAC+E,IAAD,CAAN,CAAa+C,MAAb,CAAoB,kBAApB,CAAX;AALrB,KAhDc,EAuDd;AACEhC,MAAAA,KAAK,EAAE,YADT;AAEE2B,MAAAA,SAAS,EAAE,QAFb;AAGE/B,MAAAA,GAAG,EAAE,QAHP;AAIEgC,MAAAA,KAAK,EAAE,GAJT;AAKEL,MAAAA,MAAM,EAAE,CAACtC,IAAD,EAAO4C,MAAP,KAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASA,MAAM,CAACI,iBAAP,KAA6B,CAA7B,GAAiC,UAAjC,GAA8C,WAAvD;AAL7B,KAvDc,CAAhB;AAgEA,WACE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,0DAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CADF,EAME,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AACE,MAAA,mBAAmB,EAAE9D,QAAQ,IAAI,KAAKsC,mBAAL,CAAyBtC,QAAzB,CADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CADF,CADF,EAeE;AAAK,MAAA,SAAS,EAAC,yDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAE;AAAE+D,UAAAA,WAAW,EAAE;AAAf,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,WAAW,EAAC,mCAFd;AAGE,MAAA,QAAQ,EAAElB,CAAC,IAAI,KAAKN,2BAAL,CAAiCM,CAAC,CAACmB,MAAF,CAASC,KAA1C,EAAiD,KAAK3G,KAAL,CAAWO,UAA5D,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfF,EAsBE;AAAK,MAAA,SAAS,EAAC,yDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,UAAU,EAAE,KAAKP,KAAL,CAAWS,kBAFzB;AAGE,MAAA,UAAU,EAAGmG,IAAD,IACV,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,OAAO,EAAE,MAAM,KAAKzD,oBAAL,CAA0ByD,IAA1B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAG;;8BAEbA,IAAI,CAAC1D,GAAL,KAAa,KAAKlD,KAAL,CAAWG,gBAAX,CAA4B+C,GAAzC,GAA+C,yEAA/C,GAA2H,EAAG;2BAFlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB0D,IAAI,CAAClD,IAArB,CADF,EAEE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAekD,IAAI,CAAC1D,GAAL,KAAa,KAAKlD,KAAL,CAAWG,gBAAX,CAA4B+C,GAAzC,GACb,oBAAC,QAAD;AAAU,QAAA,OAAO,EACf,oBAAC,IAAD;AAAM,UAAA,OAAO,EAAEqC,CAAC,IAAI,KAAKD,wBAAL,CAA8BC,CAA9B,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,kBAAD;AACE,UAAA,QAAQ,EAAE,KAAKvF,KAAL,CAAWG,gBADvB;AAEE,UAAA,oBAAoB,EAAEuC,QAAQ,IAAI,KAAKU,oBAAL,CAA0BV,QAA1B,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAOE,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADa,GAcX,yCAdJ,CAFF,CAJF,CADF,CAJJ;AA+BE,MAAA,MAAM,EAAE;AAAEmE,QAAAA,SAAS,EAAG,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAE9I,KAAK,CAAC+I,sBAApB;AAA4C,UAAA,WAAW,EAAC,2BAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd,OA/BV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAtBF,CADF,CADF,EA+DE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,QAAX;AAAoB,MAAA,MAAM,EAAE,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,8CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9G,KAAL,CAAWG,gBAAX,CAA4BuD,IAD/B,CADF,CADF,EAME,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,wDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,+DAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE6B,CAAC,IAAIO,OAAO,CAACC,GAAR,CAAYR,CAAZ,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG7E,SAAS,CAAC2E,GAAV,CAAcpB,CAAC,IACd,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,CAAC,CAACf,GAAjB;AAAsB,MAAA,GAAG,EAAEe,CAAC,CAACf,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCe,CAAC,CAACP,IAArC,CADD,CAHH,CAFF,CADF,CANF,EAkBE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,0DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,GAAd;AAAmB,MAAA,aAAa,EAAE,EAAlC;AAAsC,MAAA,SAAS,EAAC,iEAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,qIAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF,CAlBF,EA2BE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE;AAAEqD,QAAAA,YAAY,EAAE;AAAhB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAE;AAAEN,UAAAA,WAAW,EAAE;AAAf,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,WAAW,EAAC,wCAFd;AAGE,MAAA,QAAQ,EAAElB,CAAC,IAAI,KAAK5C,0BAAL,CAAgC4C,CAAC,CAACmB,MAAF,CAASC,KAAzC,EAAgD,KAAK3G,KAAL,CAAWG,gBAAX,CAA4BC,QAA5E,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CA3BF,CADF,CADF,EAwCE;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWC,0BAAX,IAAyCkF,MAAM,CAACD,IAAP,CAAYhF,eAAZ,EAA6BkB,MAA7B,GAAsC,CAA/E,GACC;AAAK,MAAA,SAAS,EAAC,yDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,wEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,IAAI,EAAE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAGE,MAAA,SAAS,EAAC,mFAHZ;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKwB,yBAAL,CAA+B,KAA/B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EASE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,IAAI,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,4FAFZ;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKwB,uBAAL,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CATF,CADF,CADF,EAsBE;AAAK,MAAA,SAAS,EAAC,iFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,eAAe,EAAElE,eAAe,CAAC8G,KADnC;AAEE,MAAA,KAAK,EAAE,GAFT;AAGE,MAAA,MAAM,EAAE,GAHV;AAIE,MAAA,YAAY,EAAC,oDAJf;AAKE,MAAA,gBAAgB,EAAC,QALnB;AAME,MAAA,QAAQ,EAAEC,QAAQ,IAAI;AACpB,aAAKrG,qBAAL,CAA2BsG,OAA3B,CAAmCC,cAAnC,CAAkD;AAChDH,UAAAA,KAAK,EAAEC;AADyC,SAAlD;AAGD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAeE;AAAK,MAAA,SAAS,EAAC,uFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,oBACMxH,MADN;AAEE,MAAA,GAAG,EAAEyH,OAAO,IAAI;AACd,aAAKtG,qBAAL,CAA2BsG,OAA3B,GAAqCA,OAArC;;AACA,YAAI,KAAKtG,qBAAL,CAA2BsG,OAA/B,EAAwC;AACtC,eAAKtG,qBAAL,CAA2BsG,OAA3B,CAAmCC,cAAnC,CAAkD;AAChDH,YAAAA,KAAK,EAAE9G,eAAe,CAAC8G,KADyB;AAEhDtD,YAAAA,IAAI,EAAExD,eAAe,CAACwD,IAF0B;AAGhDM,YAAAA,QAAQ,EAAE9D,eAAe,CAAC8D,QAAhB,CAAyBd,GAHa;AAIhDkE,YAAAA,KAAK,EAAElH,eAAe,CAACkH,KAJyB;AAKhDb,YAAAA,iBAAiB,EAAErG,eAAe,CAACqG;AALa,WAAlD;AAOD;AACF,OAbH;AAcE,MAAA,QAAQ,EAAEzC,MAAM,IAAI,KAAKD,oBAAL,CAA0BC,MAA1B,CAdtB;AAeE,MAAA,cAAc,EAAE,MAAMlG,OAAO,CAAC+H,KAAR,CAAc,gCAAd,CAfxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAkBE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,KAAK,EAAE,CAAC;AAAE0B,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAA/B;AAAqD,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBF,EAsBE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAC,2BAFR;AAGE,MAAA,KAAK,EAAE,CACL;AACED,QAAAA,QAAQ,EAAE,IADZ;AAEEzJ,QAAAA,OAAO,EAAE;AAFX,OADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CAtBF,EAmCE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,sBAFR;AAGE,MAAA,KAAK,EAAE,CAAC;AAAEyJ,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG3G,SAAS,CAAC2E,GAAV,CAAcpB,CAAC,IAAK,oBAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,KAAK,EAAEA,CAAC,CAACf,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8Be,CAAC,CAACP,IAAhC,CAApB,CADH,CALF,CAnCF,EA6CE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,0BAFR;AAGE,MAAA,KAAK,EAAE,CACL;AACE2D,QAAAA,QAAQ,EAAE,IADZ;AAEEzJ,QAAAA,OAAO,EAAE;AAFX,OADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAE+I,KAAK,IAAK,GAAEA,KAAM,EAAT,CAAWjB,OAAX,CAAmB,uBAAnB,EAA4C,GAA5C,CADtB;AAEE,MAAA,MAAM,EAAEiB,KAAK,IAAIA,KAAK,CAACjB,OAAN,CAAc,aAAd,EAA6B,EAA7B,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CA7CF,EA6DE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,mBADP;AAEE,MAAA,KAAK,EAAC,yCAFR;AAGE,MAAA,KAAK,EAAE,CACL;AACE2B,QAAAA,QAAQ,EAAE,IADZ;AAEEzJ,QAAAA,OAAO,EAAE;AAFX,OADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAE+I,KAAK,IAAK,GAAEA,KAAM,EAAT,CAAWjB,OAAX,CAAmB,uBAAnB,EAA4C,GAA5C,CADtB;AAEE,MAAA,MAAM,EAAEiB,KAAK,IAAIA,KAAK,CAACjB,OAAN,CAAc,aAAd,EAA6B,EAA7B,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CA7DF,EA6EE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sGAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,QAAQ,EAAC,QAFX;AAGE,MAAA,SAAS,EAAC,2GAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,CADF,CA7EF,CADF,CAfF,CAtBF,CADF,CADD,GAsIG,yCAvIN,EAwIE;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,UAAU,EAAE,CAAC,GAAG,KAAK1F,KAAL,CAAWM,gBAAf,CADd;AAEE,MAAA,OAAO,EAAE0F,OAFX;AAGE,MAAA,MAAM,EAAE;AAAEuB,QAAAA,CAAC,EAAE;AAAL,OAHV;AAIE,MAAA,UAAU,EAAE,KAJd;AAKE,MAAA,KAAK,EAAGpB,MAAD,IAAY;AACjB,eAAO;AACLqB,UAAAA,OAAO,EAAE,MAAM,KAAK1E,mBAAL,CAAyBqD,MAAzB;AADV,SAAP;AAGD,OATH;AAUE,MAAA,YAAY,EAAEA,MAAM,IAAIA,MAAM,CAACjD,GAAP,KAAehD,eAAe,CAACgD,GAA/B,GACtB,qEADsB,GACkD,EAX5E;AAYE,MAAA,MAAM,EAAE;AAAE2D,QAAAA,SAAS,EAAG,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAE9I,KAAK,CAAC+I,sBAApB;AAA4C,UAAA,WAAW,EAAC,8CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd,OAZV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAeE;AAAK,MAAA,SAAS,EAAC,uEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CAxIF,EA0JE,oBAAC,gBAAD;AACE,MAAA,gBAAgB,EAAE,EAAE,GAAG,KAAK9G,KAAL,CAAWG;AAAhB,OADpB;AAEE,MAAA,iBAAiB,EAAE4C,OAAO,IAAI,KAAK+B,iBAAL,CAAuB/B,OAAvB,CAFhC;AAGE,MAAA,SAAS,EAAE,CAAC,GAAGrC,SAAJ,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1JF,CAxCF,CA/DF,CADF,CAFF,CADF;AAsRD;;AA7oBsC;;AA+oBzC,eAAe7B,OAAO,CAAC,IAAD,EAAOC,OAAP,CAAP,CAAuBF,WAAW,CAACiB,iBAAD,CAAlC,CAAf","sourcesContent":["import React from 'react';\nimport './ProductManagement.style.scss';\nimport { Row, Col, Input, List, Button, Table, Badge, Form, message, InputNumber, Modal, Empty, Dropdown, Menu, Select } from 'antd';\nimport { SearchOutlined, CloseOutlined, BellFilled, ExclamationCircleOutlined, EditOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport NumberFormat from 'react-number-format';\nimport ImageUploader from '../../../utilities/ImageUploader/ImageUploader';\nimport * as _ from 'lodash';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport AddProductDialog from './AddProductDialog/AddProductDialog';\nimport AddCategoryDialog from './AddCategoryDialog/AddCategoryDialog';\nimport { API } from '../../../../constants/api.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport { sortByCreatedAt } from '../../../../services/collection-sorting.service';\nimport EditCategoryDialog from './EditCategoryDialog/EditCategoryDialog';\nimport SupplierDialog from './SupplierDialog/SupplierDialog';\n\nconst { confirm } = Modal;\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: { span: 9 },\n  wrapperCol: { span: 15 },\n};\n\nclass ProductManagement extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isProductDetailsPanelShown: false,\n      selectedProduct: {},\n      selectedCategory: {},\n      products: [],\n      productSearchText: '',\n      filteredProducts: [],\n      categories: [],\n      categorySearchText: '',\n      filteredCategories: [],\n      suppliers: [],\n      selectedSupplier: {}\n    }\n\n    this.productDetailsFormRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    const results = await Promise.all([\n      this.loadCategories(),\n      this.loadSuppliers()\n    ]);\n\n    const categories = results[0];\n    const suppliers = results[1];\n    let { selectedCategory } = this.state;\n    selectedCategory = categories.length > 0 ? { ...categories[0] } : {};\n    this.loadCategoryProducts(selectedCategory);\n\n    this.setState({\n      categories,\n      filteredCategories: categories,\n      selectedCategory,\n      suppliers,\n      selectedSupplier: suppliers.length > 0 ? { ...suppliers[0] } : {}\n    });\n  }\n\n  async loadSuppliers() {\n    this.props.setAppLoading(true);\n    const res = await (\n      await fetch(\n        API.Importer.ProductManagement.getSuppliers,\n        {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': this.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: this.abortController.signal\n        }\n      )\n    ).json();\n\n    this.props.setAppLoading(false);\n    if (res.status !== 200) {\n      return Promise.reject(res.errors[0]);\n    }\n\n    return Promise.resolve(res.data.suppliers);\n  }\n\n  async loadCategories() {\n    this.props.setAppLoading(true);\n    const res = await (\n      await fetch(\n        API.Importer.ProductManagement.getCategories,\n        {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': this.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: this.abortController.signal\n        }\n      )\n    ).json();\n\n    this.props.setAppLoading(false);\n    if (res.status !== 200) {\n      return Promise.reject(res.errors[0]);\n    }\n\n    return Promise.resolve(res.data.categories);\n  }\n\n  loadCategoryProducts(category) {\n    this.onProductSearchInputChange(this.state.productSearchText, category.products);\n    this.setState({ products: category.products, selectedCategory: { ...category } });\n  }\n\n  toggleProductDetailsPanel(isToggled) {\n    this.setState({ isProductDetailsPanelShown: isToggled });\n  }\n\n  handleSelectProduct(product) {\n    this.setState({ selectedProduct: this.state.products.find(p => p._id === product._id) });\n    this.toggleProductDetailsPanel(true);\n  }\n\n  handleSelectCategory(category) {\n    if (category._id !== this.state.selectedCategory._id) {\n      this.loadCategoryProducts(category);\n      this.setState({ selectedCategory: category });\n    }\n  }\n\n  updateCategoryInList(category) {\n    const { categories } = this.state;\n    const index = _.findIndex(categories, p => p._id === category._id);\n    categories[index] = { ...category };\n\n    const text = this.state.categorySearchText;\n    let { filteredCategories, selectedCategory } = this.state;\n    if (!text) {\n      filteredCategories = [...categories];\n    } else {\n      filteredCategories = categories.filter(c => c.name.toLowerCase().includes(text.toLowerCase()));\n    }\n\n    selectedCategory = { ...category }\n    this.loadCategoryProducts(selectedCategory);\n\n    this.setState({\n      filteredCategories,\n      selectedCategory,\n      categories\n    });\n  }\n\n  updateProductDetails(values) {\n    this.props.setAppLoading(true);\n    const params = { ...values };\n    params.supplier = this.state.suppliers.find(s => s._id === params.supplier);\n\n    //product was updated\n    this.props.setAppLoading(false);\n    let { products, selectedProduct, selectedCategory } = this.state;\n    for (const key in params) {\n      selectedProduct[key] = params[key];\n    }\n\n    const index = _.findIndex(products, p => p._id === selectedProduct._id);\n    if (index >= 0) {\n      products[index] = { ...selectedProduct };\n    }\n\n    selectedCategory.products = products;\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({ selectedProduct });\n    this.toggleProductDetailsPanel(false);\n    message.success('Cập nhật sản phẩm thành công');\n  }\n\n  openRemoveProductDialog() {\n    const that = this;\n    const { selectedProduct } = this.state;\n    confirm({\n      title: `Bạn muốn xóa sản phẩm ${selectedProduct.name}?`,\n      icon: <ExclamationCircleOutlined />,\n      content: '',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n      onOk() {\n        that.props.setAppLoading(true);\n\n        //Product was removed\n        that.props.setAppLoading(false);\n        let { products, selectedCategory } = that.state;\n        products = products.filter(p => p._id !== selectedProduct._id);\n\n        selectedCategory.products = products;\n        that.loadCategoryProducts(selectedCategory);\n\n        that.toggleProductDetailsPanel(false);\n        message.success('SUCCESS');\n      },\n      onCancel() { },\n    });\n  }\n\n  addToListProducts(product) {\n    let { products, selectedCategory } = this.state;\n    products.push(product);\n    selectedCategory.products = products;\n    this.loadCategoryProducts(selectedCategory);\n  }\n\n  addToListCategories(category) {\n    let { filteredCategories, selectedCategory } = this.state;\n    filteredCategories.push({ ...category });\n    sortByCreatedAt(filteredCategories);\n    selectedCategory = filteredCategories.length > 0 ? filteredCategories[filteredCategories.length - 1] : {};\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      filteredCategories,\n      selectedCategory\n    });\n  }\n\n  onCategorySearchInputChange(text, categories) {\n    let { filteredCategories, selectedCategory } = this.state;\n    if (!text) {\n      filteredCategories = [...categories];\n    } else {\n      filteredCategories = categories.filter(c => c.name.toLowerCase().includes(text.toLowerCase()));\n    }\n\n    selectedCategory = filteredCategories.length > 0 ? filteredCategories[0] : {};\n    this.loadCategoryProducts(selectedCategory);\n\n    this.setState({\n      filteredCategories,\n      selectedCategory,\n      categorySearchText: text\n    });\n  }\n\n  onProductSearchInputChange(text, products) {\n    let { filteredProducts, selectedProduct } = this.state;\n    if (!text) {\n      filteredProducts = [...(products || [])];\n    } else {\n      filteredProducts = (products || []).filter(p => {\n        const keys = [...Object.keys(p)].filter(k => ['name'].includes(k));\n        for (const k of keys) {\n          if (p[k].toLowerCase().includes(text.toLowerCase())) {\n            return true;\n          }\n        }\n        return false;\n      });\n    }\n\n    filteredProducts = (filteredProducts || []).map(p => ({ ...p, key: p._id }));\n\n    if (filteredProducts.length > 0) {\n      const index = _.findIndex(filteredProducts, p => p._id === selectedProduct._id);\n      if (index >= 0) {\n        selectedProduct = { ...filteredProducts[index] };\n      } else {\n        selectedProduct = { ...filteredProducts[0] };\n      }\n    } else {\n      selectedProduct = {};\n    }\n\n    this.setState({\n      filteredProducts,\n      selectedProduct,\n      productSearchText: text\n    });\n  }\n\n  handleSelectCategoryMenu(e) {\n    const { key } = e;\n    if (key === 'REMOVE') {\n      this.openRemoveCategoryDialog();\n    }\n  }\n\n  openRemoveCategoryDialog() {\n    const that = this;\n    const { selectedCategory } = this.state;\n    confirm({\n      title: `Bạn muốn xóa danh mục ${selectedCategory.name}?`,\n      icon: <ExclamationCircleOutlined />,\n      content: '',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n      async onOk() {\n        that.props.setAppLoading(true);\n        const res = await (\n          await fetch(\n            API.Importer.ProductManagement.removeCategory.replace('{categoryID}', selectedCategory._id),\n            {\n              method: 'DELETE',\n              headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'token': that.props.cookies.get(COOKIE_NAMES.token)\n              },\n              signal: that.abortController.signal\n            }\n          )\n        ).json();\n\n        that.props.setAppLoading(false);\n        if (res.status !== 200) {\n          message.error(res.errors[0]);\n          return;\n        }\n\n        let { categories } = that.state;\n        categories = categories.filter(c => c._id !== selectedCategory._id);\n        that.setState({ categories });\n        that.onCategorySearchInputChange(that.state.categorySearchText, categories);\n        message.success(res.messages[0]);\n      },\n      onCancel() { },\n    });\n  }\n\n  render() {\n    let { selectedProduct, suppliers } = this.state;\n    console.log(this.state.selectedSupplier);\n    const columns = [\n      {\n        title: '',\n        dataIndex: 'image',\n        key: 'image',\n        width: 40,\n        render: (text) => (\n          <img\n            className=\"product-management__container__content__list-products__product-img\"\n            src={text}\n            alt=\"product\" />\n        )\n      },\n      {\n        title: 'Sản phẩm',\n        dataIndex: 'name',\n        key: 'name',\n        width: 200\n      },\n      {\n        title: 'Nhà cung cấp',\n        dataIndex: 'supplier',\n        key: 'supplier',\n        width: 150,\n        render: (text, record) => (<span>{record.supplier.name}</span>)\n      },\n      {\n        title: 'Giá bán',\n        dataIndex: 'price',\n        key: 'price',\n        width: 100,\n        render: (text) => (\n          <NumberFormat\n            value={Number(text)}\n            displayType=\"text\"\n            thousandSeparator={true}\n            suffix=\" VNĐ\"\n            style={{ fontWeight: 'bold' }}\n          />\n        )\n      },\n      {\n        title: 'SL hiện có',\n        dataIndex: 'availableQuantity',\n        key: 'availableQuantity',\n        width: 120,\n        render: (text) => (<center>{text}</center>),\n      },\n      {\n        title: 'Cập nhật lần cuối',\n        dataIndex: 'updatedAt',\n        key: 'updatedAt',\n        width: 150,\n        render: (text) => (<span>Lúc {moment(text).format('HH:mm DD-MM-YYYY')}</span>)\n      },\n      {\n        title: 'Trạng thái',\n        dataIndex: 'status',\n        key: 'status',\n        width: 150,\n        render: (text, record) => (<center>{record.availableQuantity === 0 ? 'SOLD_OUT' : 'AVAILABLE'}</center>),\n      }\n    ];\n\n    return (\n      <div className=\"product-management animated fadeIn\">\n\n        <div className=\"product-management__container\">\n          <Row>\n            <Col span={4}>\n              <div className=\"product-management__container__left-sidebar\">\n                <div className=\"product-management__container__left-sidebar__title\">\n                  <Row align=\"middle\">\n                    <Col span={20}>\n                      <span className=\"product-management__container__left-sidebar__title__text\">\n                        Danh mục sản phẩm\n                      </span>\n                    </Col>\n                    <Col span={4} style={{ textAlign: 'right' }}>\n                      <AddCategoryDialog\n                        addToListCategories={category => this.addToListCategories(category)}\n                      />\n                    </Col>\n                  </Row>\n                </div>\n                <div className=\"product-management__container__left-sidebar__search-box\">\n                  <Input\n                    prefix={<SearchOutlined style={{ marginRight: 5 }} />}\n                    placeholder=\"Tìm kiếm danh mục...\"\n                    onChange={e => this.onCategorySearchInputChange(e.target.value, this.state.categories)}\n                  />\n                </div>\n                <div className=\"product-management__container__left-sidebar__categories\">\n                  <div className=\"product-management__container__left-sidebar__categories__wrapper\">\n                    <List\n                      size=\"small\"\n                      dataSource={this.state.filteredCategories}\n                      renderItem={(item) => (\n                        <List.Item onClick={() => this.handleSelectCategory(item)}>\n                          <div className={`\n                            product-management__container__left-sidebar__categories__item \n                            ${item._id === this.state.selectedCategory._id ? 'product-management__container__left-sidebar__categories__item--selected' : ''}\n                          `}>\n                            <Row>\n                              <Col span={22}>{item.name}</Col>\n                              <Col span={2}>{item._id === this.state.selectedCategory._id ? (\n                                <Dropdown overlay={\n                                  <Menu onClick={e => this.handleSelectCategoryMenu(e)}>\n                                    <Menu.Item key=\"EDIT\">\n                                      <EditCategoryDialog\n                                        category={this.state.selectedCategory}\n                                        updateCategoryInList={category => this.updateCategoryInList(category)}\n                                      />\n                                    </Menu.Item>\n                                    <Menu.Item key=\"REMOVE\">Xóa</Menu.Item>\n                                  </Menu>\n                                }>\n                                  <EditOutlined />\n                                </Dropdown>\n                              ) : <></>}\n                              </Col>\n                            </Row>\n                          </div>\n                        </List.Item>\n                      )}\n                      locale={{ emptyText: (<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Không tìm thấy\" />) }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Col>\n            <Col span={20}>\n              <div className=\"product-management__container__topbar\">\n                <Row align=\"middle\" gutter={40}>\n                  <Col span={8}>\n                    <h3 className=\"product-management__container__topbar__title\">\n                      {this.state.selectedCategory.name}\n                    </h3>\n                  </Col>\n                  <Col span={8}>\n                    <div className=\"product-management__container__topbar__supplier-select\">\n                      <span className=\"product-management__container__topbar__supplier-select__label\">Nhà cung cấp</span>\n                      <Select\n                        onChange={e => console.log(e)}\n                      >\n                        {suppliers.map(s => (\n                          <Option value={s._id} key={s._id}>{s.name}</Option>\n                        ))}\n                      </Select>\n                    </div>\n                  </Col>\n                  <Col span={1}>\n                    <div className=\"product-management__container__topbar__features\">\n                      <div className=\"product-management__container__topbar__features__feature\">\n                        <Badge count={100} overflowCount={99} className=\"product-management__container__topbar__features__feature__label\">\n                          <BellFilled className=\"product-management__container__topbar__features__feature__icon product-management__container__topbar__features__feature__icon--bell\" />\n                        </Badge>\n                      </div>\n                    </div>\n                  </Col>\n                  <Col span={7} style={{ paddingRight: 0 }}>\n                    <div className=\"product-management__container__topbar__search-box\">\n                      <Input\n                        prefix={<SearchOutlined style={{ marginRight: 5 }} />}\n                        placeholder=\"Tìm kiếm sản phẩm...\"\n                        onChange={e => this.onProductSearchInputChange(e.target.value, this.state.selectedCategory.products)}\n                      />\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n              <div className=\"product-management__container__content\">\n                {this.state.isProductDetailsPanelShown && Object.keys(selectedProduct).length > 0 ? (\n                  <div className=\"product-management__container__content__product-details\">\n                    <div className=\"product-management__container__content__product-details__panel animated slideInRight\">\n                      <div className=\"product-management__container__content__product-details__panel__header\">\n                        <Row>\n                          <Col span={4}>\n                            <Button\n                              shape=\"circle\"\n                              icon={<CloseOutlined />}\n                              className=\"product-management__container__content__product-details__panel__header__btn-close\"\n                              onClick={() => this.toggleProductDetailsPanel(false)}\n                            />\n                          </Col>\n                          <Col align=\"end\" span={20}>\n                            <Button\n                              type=\"link\"\n                              className=\"product-management__container__content__product-details__panel__header__btn-remove-product\"\n                              onClick={() => this.openRemoveProductDialog()}\n                            >\n                              Xóa sản phẩm\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                      <div className=\"product-management__container__content__product-details__panel__product-details\">\n                        <div className=\"product-management__container__content__product-details__panel__product-details__img\">\n                          <ImageUploader\n                            defaultImageUrl={selectedProduct.image}\n                            width={150}\n                            height={150}\n                            tooltipTitle=\"Nhấn để thay đổi ảnh\"\n                            tooltipPlacement=\"bottom\"\n                            onFinish={imageUrl => {\n                              this.productDetailsFormRef.current.setFieldsValue({\n                                image: imageUrl\n                              });\n                            }}\n                          />\n                        </div>\n                        <div className=\"product-management__container__content__product-details__panel__product-details__info\">\n                          <Form\n                            {...layout}\n                            ref={current => {\n                              this.productDetailsFormRef.current = current;\n                              if (this.productDetailsFormRef.current) {\n                                this.productDetailsFormRef.current.setFieldsValue({\n                                  image: selectedProduct.image,\n                                  name: selectedProduct.name,\n                                  supplier: selectedProduct.supplier._id,\n                                  price: selectedProduct.price,\n                                  availableQuantity: selectedProduct.availableQuantity\n                                });\n                              }\n                            }}\n                            onFinish={values => this.updateProductDetails(values)}\n                            onFinishFailed={() => message.error('Thông tin sản phẩm chưa đầy đủ')}\n                          >\n\n                            <Form.Item name=\"image\" rules={[{ required: true }]} style={{ display: 'none' }}>\n                              <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                              name=\"name\"\n                              label=\"Tên sản phẩm\"\n                              rules={[\n                                {\n                                  required: true,\n                                  message: 'Vui lòng nhập tên sản phẩm'\n                                }\n                              ]}\n                            >\n                              <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                              name=\"supplier\"\n                              label=\"Nhà cung cấp\"\n                              rules={[{ required: true }]}\n                            >\n                              <Select>\n                                {suppliers.map(s => (<Select.Option value={s._id}>{s.name}</Select.Option>))}\n                              </Select>\n                            </Form.Item>\n\n                            <Form.Item\n                              name=\"price\"\n                              label=\"Giá bán (VNĐ)\"\n                              rules={[\n                                {\n                                  required: true,\n                                  message: 'Vui lòng nhập giá bán'\n                                }\n                              ]}\n                            >\n                              <InputNumber\n                                formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                              />\n                            </Form.Item>\n\n                            <Form.Item\n                              name=\"availableQuantity\"\n                              label=\"Số lượng hiện có\"\n                              rules={[\n                                {\n                                  required: true,\n                                  message: 'Vui lòng nhập số lượng hiện có'\n                                }\n                              ]}\n                            >\n                              <InputNumber\n                                formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                              />\n                            </Form.Item>\n\n                            <Form.Item>\n                              <div className=\"product-management__container__content__product-details__panel__product-details__btn-update__wrapper\">\n                                <Button\n                                  type=\"primary\"\n                                  htmlType=\"submit\"\n                                  className=\"product-management__container__content__product-details__panel__product-details__btn-update__wrapper__btn\"\n                                >\n                                  Cập nhật sản phẩm\n                                </Button>\n                              </div>\n                            </Form.Item>\n\n                          </Form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : <></>}\n                <div className=\"product-management__container__content__list-products\">\n                  <Table\n                    dataSource={[...this.state.filteredProducts]}\n                    columns={columns}\n                    scroll={{ y: 545 }}\n                    pagination={false}\n                    onRow={(record) => {\n                      return {\n                        onClick: () => this.handleSelectProduct(record)\n                      }\n                    }}\n                    rowClassName={record => record._id === selectedProduct._id ?\n                      'product-management__container__content__list-products__selected-row' : ''}\n                    locale={{ emptyText: (<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Không tìm thấy sản phẩm\" />) }}\n                  />\n                  <div className=\"product-management__container__content__list-products__bottom-toolbar\"></div>\n                </div>\n\n                <AddProductDialog\n                  selectedCategory={{ ...this.state.selectedCategory }}\n                  addToListProducts={product => this.addToListProducts(product)}\n                  suppliers={[...suppliers]}\n                />\n\n                {/* <SupplierDialog\n                  suppliers={[...suppliers]}\n                /> */}\n\n              </div>\n            </Col>\n          </Row>\n        </div>\n\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(ProductManagement));\n"]},"metadata":{},"sourceType":"module"}