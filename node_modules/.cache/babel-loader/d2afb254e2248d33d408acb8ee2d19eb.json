{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/StaffManagement/UpdateStaffDialog/UpdateStaffDialog.js\";\nimport React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nimport { EditOutlined } from '@ant-design/icons';\nimport { Skeleton, Row, Col, Select, Form, Modal, Input, message, DatePicker, Button, Avatar } from 'antd';\nimport './UpdateStaffDialog.style.scss';\nimport USER_ROLES from '../../../../../constants/user-role.constant';\nimport USER_SEX from '../../../../../constants/user-sex';\nimport moment from 'moment';\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n};\n\nclass UpdateStaffDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFinish = async values => {};\n\n    this.formRef = React.createRef();\n    this.state = {\n      isVisible: false\n    };\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({\n      isVisible\n    });\n  }\n\n  loadSelectedStaffProfile() {\n    const {\n      selectedStaff\n    } = this.props;\n    let formInitialValues = {};\n\n    if (selectedStaff) {\n      const keys = Object.keys(selectedStaff).filter(k => ['fullname', 'role', 'sex', 'dateOfBirth', 'email', 'phone', 'address', 'avatar'].includes(k));\n\n      for (const k of keys) {\n        let value = selectedStaff[k];\n\n        if (k === 'dateOfBirth') {\n          value = value.split('-');\n          const date = new Date(Number(value[2]), Number(value[1]) - 1, Number(value[0]));\n          value = moment(date);\n        }\n\n        formInitialValues[k] = value;\n      }\n    }\n\n    this.formRef.current.setFieldsValue({ ...formInitialValues\n    });\n  }\n\n  onOk() {\n    document.getElementById('btn-submit').click();\n  }\n\n  onCancel() {\n    this.setDialogVisible(false);\n  }\n\n  render() {\n    const {\n      selectedStaff\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, selectedStaff ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Row, {\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(EditOutlined, {\n      className: \"staff-management__body__staffs__sidebar__staff-features__feature__icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 22,\n      className: \"staff-management__body__staffs__sidebar__staff-features__feature__info\",\n      onClick: () => {\n        console.log(this.formRef);\n        this.setDialogVisible(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"staff-management__body__staffs__sidebar__staff-features__feature__info__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Ch\\u1EC9nh s\\u1EEDa th\\xF4ng tin\"))), React.createElement(Modal, {\n      className: \"staff-management__body__staffs__content__list-staffs__header__dialogs__update-staff-dialog__content\",\n      title: React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        size: 28,\n        src: selectedStaff.avatar,\n        style: {\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: '#ff8220'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, selectedStaff.fullname, \" | Th\\xF4ng tin c\\xE1 nh\\xE2n\")),\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOk(),\n      onCancel: () => this.onCancel(),\n      okText: \"C\\u1EADp nh\\u1EADt\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      okButtonProps: {\n        style: {\n          background: '#ff8220',\n          borderColor: '#ff8220'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, layout, {\n      ref: this.formRef,\n      className: \"staff-management__body__staffs__content__list-staffs__header__dialogs__update-staff-dialog__form\",\n      onFinish: e => this.onFinish(e),\n      onFinishFailed: () => {\n        message.error('Thông tin cung cấp chưa đầy đủ. Vui lòng kiểm tra lại !');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      id: \"btn-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"H\\u1ECD v\\xE0 t\\xEAn\",\n      name: \"fullname\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập họ và tên'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"T\\u1ED1i \\u0111a 30 k\\xED t\\u1EF1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Ch\\u1EE9c v\\u1EE5\",\n      name: \"role\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng chọn chức vụ'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Select, {\n      placeholder: \"Ch\\u1ECDn ch\\u1EE9c v\\u1EE5\",\n      allowClear: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: USER_ROLES.CASHIER.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, USER_ROLES.CASHIER.name), React.createElement(Option, {\n      value: USER_ROLES.IMPORTER.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, USER_ROLES.IMPORTER.name), React.createElement(Option, {\n      value: USER_ROLES.MANAGER.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, USER_ROLES.MANAGER.name))), React.createElement(Form.Item, {\n      label: \"Gi\\u1EDBi t\\xEDnh\",\n      name: \"sex\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng chọn giới tính'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Select, {\n      placeholder: \"Ch\\u1ECDn gi\\u1EDBi t\\xEDnh\",\n      allowClear: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: USER_SEX.MALE.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, USER_SEX.MALE.name), React.createElement(Option, {\n      value: USER_SEX.FEMALE.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, USER_SEX.FEMALE.name))), React.createElement(Form.Item, {\n      label: \"Ng\\xE0y sinh\",\n      name: \"dateOfBirth\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng chọn ngày sinh'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      placeholder: \"Ch\\u1ECDn ng\\xE0y sinh\",\n      format: \"DD-MM-YYYY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập địa chỉ email'\n      }, {\n        type: \"email\",\n        message: 'Địa chỉ email không hợp lệ'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"abc@gmail.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"\\u0110i\\u1EC7n tho\\u1EA1i\",\n      name: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Input, {\n      maxLength: 11,\n      placeholder: \"G\\u1ED3m 10 ho\\u1EB7c 11 s\\u1ED1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n      name: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Input.TextArea, {\n      placeholder: \"227 Nguy\\u1EC5n V\\u0103n C\\u1EEB, Qu\\u1EADn 5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"\\u1EA2nh \\u0111\\u1EA1i di\\u1EC7n\",\n      name: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"D\\xE1n \\u0111\\u01B0\\u1EDDng d\\u1EABn \\u1EA3nh v\\xE0o \\u0111\\xE2y\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }))))) : React.createElement(Skeleton.Input, {\n      style: {\n        width: '88%',\n        height: 20\n      },\n      active: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withCookies(UpdateStaffDialog);","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/StaffManagement/UpdateStaffDialog/UpdateStaffDialog.js"],"names":["React","Component","withCookies","EditOutlined","Skeleton","Row","Col","Select","Form","Modal","Input","message","DatePicker","Button","Avatar","USER_ROLES","USER_SEX","moment","Option","layout","labelCol","span","wrapperCol","UpdateStaffDialog","constructor","props","onFinish","values","formRef","createRef","state","isVisible","setDialogVisible","setState","loadSelectedStaffProfile","selectedStaff","formInitialValues","keys","Object","filter","k","includes","value","split","date","Date","Number","current","setFieldsValue","onOk","document","getElementById","click","onCancel","render","console","log","display","alignItems","avatar","marginRight","color","fullname","style","background","borderColor","e","error","required","CASHIER","type","name","IMPORTER","MANAGER","MALE","FEMALE","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nimport { EditOutlined } from '@ant-design/icons';\nimport { Skeleton, Row, Col, Select, Form, Modal, Input, message, DatePicker, Button, Avatar } from 'antd';\nimport './UpdateStaffDialog.style.scss';\nimport USER_ROLES from '../../../../../constants/user-role.constant';\nimport USER_SEX from '../../../../../constants/user-sex';\nimport moment from 'moment';\n\nconst { Option } = Select;\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\n\nclass UpdateStaffDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n\n    this.state = {\n      isVisible: false\n    }\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({ isVisible });\n  }\n\n  loadSelectedStaffProfile() {\n      const { selectedStaff } = this.props;\n      let formInitialValues = {};\n      if (selectedStaff) {\n        const keys = Object.keys(selectedStaff)\n          .filter(k => ['fullname', 'role', 'sex', 'dateOfBirth', 'email', 'phone', 'address', 'avatar'].includes(k));\n\n        for (const k of keys) {\n          let value = selectedStaff[k];\n\n          if (k === 'dateOfBirth') {\n            value = value.split('-');\n            const date = new Date(Number(value[2]), Number(value[1]) - 1, Number(value[0]));\n            value = moment(date);\n          }\n\n          formInitialValues[k] = value;\n        }\n      }\n      this.formRef.current.setFieldsValue({ ...formInitialValues });\n  }\n\n  onOk() {\n    document.getElementById('btn-submit').click();\n  }\n\n  onCancel() {\n    this.setDialogVisible(false);\n  }\n\n  onFinish = async (values) => {\n  }\n\n  render() {\n    const { selectedStaff } = this.props;\n\n    return (\n      <div>\n        {selectedStaff ? (\n          <div>\n            <Row align=\"middle\">\n              <Col span={2}>\n                <EditOutlined className=\"staff-management__body__staffs__sidebar__staff-features__feature__icon\" />\n              </Col>\n              <Col\n                span={22}\n                className=\"staff-management__body__staffs__sidebar__staff-features__feature__info\"\n                onClick={() => {\n                  console.log(this.formRef);\n                  this.setDialogVisible(true);\n                }}\n              >\n                <span className=\"staff-management__body__staffs__sidebar__staff-features__feature__info__name\">\n                  Chỉnh sửa thông tin</span>\n              </Col>\n            </Row>\n\n            <Modal\n              className=\"staff-management__body__staffs__content__list-staffs__header__dialogs__update-staff-dialog__content\"\n              title={\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <Avatar size={28} src={selectedStaff.avatar} style={{ marginRight: 8 }} />\n                  <span style={{ color: '#ff8220' }}>{selectedStaff.fullname} | Thông tin cá nhân</span>\n                </div>\n              }\n              centered\n              visible={this.state.isVisible}\n              onOk={() => this.onOk()}\n              onCancel={() => this.onCancel()}\n              okText=\"Cập nhật\"\n              cancelText=\"Hủy bỏ\"\n              okButtonProps={{ style: { background: '#ff8220', borderColor: '#ff8220' } }}\n            >\n\n              <Form\n                {...layout}\n                ref={this.formRef}\n                className=\"staff-management__body__staffs__content__list-staffs__header__dialogs__update-staff-dialog__form\"\n                onFinish={e => this.onFinish(e)}\n                onFinishFailed={() => { message.error('Thông tin cung cấp chưa đầy đủ. Vui lòng kiểm tra lại !'); }}\n              >\n                <Form.Item style={{ display: 'none' }}>\n                  <Button type=\"primary\" htmlType=\"submit\" id=\"btn-submit\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Họ và tên\"\n                  name=\"fullname\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Vui lòng nhập họ và tên'\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"Tối đa 30 kí tự\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Chức vụ\"\n                  name=\"role\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Vui lòng chọn chức vụ'\n                    }\n                  ]}\n                >\n                  <Select\n                    placeholder=\"Chọn chức vụ\"\n                    allowClear\n                  >\n                    <Option value={USER_ROLES.CASHIER.type}>{USER_ROLES.CASHIER.name}</Option>\n                    <Option value={USER_ROLES.IMPORTER.type}>{USER_ROLES.IMPORTER.name}</Option>\n                    <Option value={USER_ROLES.MANAGER.type}>{USER_ROLES.MANAGER.name}</Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Giới tính\"\n                  name=\"sex\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Vui lòng chọn giới tính'\n                    }\n                  ]}\n                >\n                  <Select\n                    placeholder=\"Chọn giới tính\"\n                    allowClear\n                  >\n                    <Option value={USER_SEX.MALE.type}>{USER_SEX.MALE.name}</Option>\n                    <Option value={USER_SEX.FEMALE.type}>{USER_SEX.FEMALE.name}</Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Ngày sinh\"\n                  name=\"dateOfBirth\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Vui lòng chọn ngày sinh'\n                    }\n                  ]}\n                >\n                  <DatePicker placeholder=\"Chọn ngày sinh\" format=\"DD-MM-YYYY\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"E-mail\"\n                  name=\"email\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Vui lòng nhập địa chỉ email'\n                    },\n                    {\n                      type: \"email\",\n                      message: 'Địa chỉ email không hợp lệ'\n                    }\n                  ]}\n                >\n                  <Input placeholder=\"abc@gmail.com\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Điện thoại\"\n                  name=\"phone\"\n                >\n                  <Input maxLength={11} placeholder=\"Gồm 10 hoặc 11 số\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Địa chỉ\"\n                  name=\"address\"\n                >\n                  <Input.TextArea placeholder=\"227 Nguyễn Văn Cừ, Quận 5\" />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Ảnh đại diện\"\n                  name=\"avatar\"\n                >\n                  <Input placeholder=\"Dán đường dẫn ảnh vào đây\" />\n                </Form.Item>\n\n              </Form>\n\n            </Modal>\n\n          </div>\n        ) : (<Skeleton.Input style={{ width: '88%', height: 20 }} active={true} size=\"small\" />)}\n      </div>\n    )\n  }\n}\nexport default withCookies(UpdateStaffDialog);"]},"metadata":{},"sourceType":"module"}