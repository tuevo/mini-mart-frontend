{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/BtnAddWorkShift/BtnAddWorkShift.js\";\nimport React from 'react';\nimport { withCookies } from 'react-cookie';\nimport { Modal, Button, Tooltip, TimePicker, Row, Col, message } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\nimport './BtnAddWorkShift.style.scss';\nimport moment from 'moment';\nimport * as _ from 'lodash';\nimport { API } from '../../../../../constants/api.constant';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\nconst format = 'HH:mm';\n\nclass BtnAddWorkShift extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.onOK = async () => {\n      const {\n        startTime,\n        endTime\n      } = this.state;\n\n      if (!(startTime && endTime)) {\n        message.error('Vui lòng chọn đầy đủ các mốc thời gian');\n        return;\n      }\n\n      if (startTime >= endTime) {\n        message.error('Khoảng thời gian đã chọn không hợp lệ');\n        return;\n      }\n\n      let {\n        workSchedules,\n        selectedWorkSchedule,\n        selectedWorkDay,\n        selectedWorkShift\n      } = this.props;\n      const res = await (await fetch(API.Manager.WorkShift.addWorkShift, {\n        method: 'POST',\n        body: JSON.stringify({\n          workScheduleID: selectedWorkSchedule._id,\n          startTime,\n          endTime\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        },\n        signal: this.abortController.signal\n      })).json();\n\n      if (res.status === 200) {\n        this.setModalVisible(false);\n        message.success(res.messages[0]);\n        const {\n          workShift\n        } = res.data;\n        selectedWorkDay.workShifts.push(workShift);\n        this.sortWorkShiftsByStartTime(selectedWorkDay.workShifts);\n        const selectedWorkShiftIndex = selectedWorkDay.workShifts.findIndex(ws => ws._id === workShift._id);\n\n        if (selectedWorkShiftIndex >= 0) {\n          selectedWorkShift = selectedWorkDay.workShifts[selectedWorkShiftIndex];\n          selectedWorkShift.index = selectedWorkShiftIndex;\n        }\n\n        for (const week of selectedWorkSchedule.workDays) {\n          const day = _.find(week, d => selectedWorkDay.workDayInMonth === d.workDayInMonth);\n\n          if (day) {\n            day.workShifts.push(workShift);\n            this.sortWorkShiftsByStartTime(day.workShifts);\n            break;\n          }\n        }\n\n        for (let wsc of workSchedules) {\n          if (wsc._id === selectedWorkSchedule._id) {\n            wsc.workShifts.push(workShift);\n            this.sortWorkShiftsByStartTime(wsc.workShifts);\n            break;\n          }\n        }\n\n        this.props.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n      } else {\n        message.error(res.errors[0]);\n      }\n    };\n\n    this.state = {\n      isVisible: false,\n      startTime: null,\n      endTime: null\n    };\n  }\n\n  setModalVisible(isVisible) {\n    if (!isVisible) {\n      this.setState({\n        startTime: null,\n        endTime: null\n      });\n    }\n\n    this.setState({\n      isVisible\n    });\n  }\n\n  sortWorkShiftsByStartTime(workShifts) {\n    workShifts.sort((a, b) => {\n      const time1 = new Date(a.startTime).getTime();\n      const time2 = new Date(b.startTime).getTime();\n      return time1 - time2;\n    });\n  }\n\n  onCancel() {\n    this.setModalVisible(false);\n  }\n\n  onChangeTimePicker(fieldName, e) {\n    const {\n      selectedWorkDay\n    } = this.props;\n    const selectedTime = new Date(e);\n    const hours = selectedTime.getHours();\n    const mins = selectedTime.getMinutes();\n    const {\n      workDayInMonth,\n      workMonth,\n      workYear\n    } = selectedWorkDay;\n    const workShiftTime = new Date(workYear, workMonth - 1, workDayInMonth, hours, mins);\n\n    switch (fieldName) {\n      case 'startTime':\n        this.setState({\n          startTime: workShiftTime.getTime()\n        });\n        break;\n\n      case 'endTime':\n        this.setState({\n          endTime: workShiftTime.getTime()\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      selectedWorkDay\n    } = this.props;\n    const {\n      startTime,\n      endTime\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"add-work-shift-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm ca l\\xE0m vi\\u1EC7c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setModalVisible(true),\n      className: \"add-work-shift-dialog__btn-open\",\n      type: \"link\",\n      icon: React.createElement(PlusCircleFilled, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      title: React.createElement(\"span\", {\n        style: {\n          color: '#ff8220'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? moment(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') + ' | Thêm ca làm việc trong ngày' : ''}`),\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOK(),\n      onCancel: () => this.onCancel(),\n      okText: \"Th\\xEAm\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      okButtonProps: {\n        style: {\n          background: '#ff8220',\n          borderColor: '#ff8220'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add-work-shift-dialog__time-picker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Row, {\n      align: \"center\",\n      className: \"add-work-shift-dialog__time-picker__time-selection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      className: \"add-work-shift-dialog__time-picker__time-selection__label\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"B\\u1EAFt \\u0111\\u1EA7u\")), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(TimePicker, {\n      value: startTime ? moment(new Date(startTime)) : null,\n      placeholder: \"Ch\\u1ECDn m\\u1ED1c th\\u1EDDi gian\",\n      format: format,\n      onChange: e => this.onChangeTimePicker('startTime', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      align: \"center\",\n      className: \"add-work-shift-dialog__time-picker__time-selection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      className: \"add-work-shift-dialog__time-picker__time-selection__label\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"K\\u1EBFt th\\xFAc\")), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(TimePicker, {\n      value: endTime ? moment(new Date(endTime)) : null,\n      placeholder: \"Ch\\u1ECDn m\\u1ED1c th\\u1EDDi gian\",\n      format: format,\n      onChange: e => this.onChangeTimePicker('endTime', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withCookies(BtnAddWorkShift);","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/BtnAddWorkShift/BtnAddWorkShift.js"],"names":["React","withCookies","Modal","Button","Tooltip","TimePicker","Row","Col","message","PlusCircleFilled","COOKIE_NAMES","moment","_","API","PageBase","format","BtnAddWorkShift","constructor","props","onOK","startTime","endTime","state","error","workSchedules","selectedWorkSchedule","selectedWorkDay","selectedWorkShift","res","fetch","Manager","WorkShift","addWorkShift","method","body","JSON","stringify","workScheduleID","_id","headers","cookies","get","token","signal","abortController","json","status","setModalVisible","success","messages","workShift","data","workShifts","push","sortWorkShiftsByStartTime","selectedWorkShiftIndex","findIndex","ws","index","week","workDays","day","find","d","workDayInMonth","wsc","reloadWorkSchedules","errors","isVisible","setState","sort","a","b","time1","Date","getTime","time2","onCancel","onChangeTimePicker","fieldName","e","selectedTime","hours","getHours","mins","getMinutes","workMonth","workYear","workShiftTime","render","color","workWeekDay","style","background","borderColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withCookies } from 'react-cookie';\nimport { Modal, Button, Tooltip, TimePicker, Row, Col, message } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\nimport './BtnAddWorkShift.style.scss';\nimport moment from 'moment';\nimport * as _ from 'lodash';\nimport { API } from '../../../../../constants/api.constant';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\n\nconst format = 'HH:mm';\n\nclass BtnAddWorkShift extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false,\n      startTime: null,\n      endTime: null\n    }\n  }\n\n  setModalVisible(isVisible) {\n    if (!isVisible) {\n      this.setState({\n        startTime: null,\n        endTime: null\n      })\n    }\n    this.setState({ isVisible });\n  }\n\n  sortWorkShiftsByStartTime(workShifts) {\n    workShifts.sort((a, b) => {\n      const time1 = new Date(a.startTime).getTime();\n      const time2 = new Date(b.startTime).getTime();\n      return time1 - time2;\n    });\n  }\n\n  onOK = async () => {\n    const { startTime, endTime } = this.state;\n    if (!(startTime && endTime)) {\n      message.error('Vui lòng chọn đầy đủ các mốc thời gian');\n      return;\n    }\n\n    if (startTime >= endTime) {\n      message.error('Khoảng thời gian đã chọn không hợp lệ');\n      return;\n    }\n\n    let {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift\n    } = this.props;\n\n    const res = await (\n      await fetch(\n        API.Manager.WorkShift.addWorkShift,\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            workScheduleID: selectedWorkSchedule._id,\n            startTime,\n            endTime\n          }),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': this.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: this.abortController.signal\n        }\n      )\n    ).json();\n\n    if (res.status === 200) {\n      this.setModalVisible(false);\n      message.success(res.messages[0]);\n\n      const { workShift } = res.data;\n      selectedWorkDay.workShifts.push(workShift);\n      this.sortWorkShiftsByStartTime(selectedWorkDay.workShifts);\n\n      const selectedWorkShiftIndex = selectedWorkDay.workShifts.findIndex(ws => ws._id === workShift._id);\n      if (selectedWorkShiftIndex >= 0) {\n        selectedWorkShift = selectedWorkDay.workShifts[selectedWorkShiftIndex];\n        selectedWorkShift.index = selectedWorkShiftIndex;\n      }\n\n      for (const week of selectedWorkSchedule.workDays) {\n        const day = _.find(week, d => selectedWorkDay.workDayInMonth === d.workDayInMonth);\n        if (day) {\n          day.workShifts.push(workShift);\n          this.sortWorkShiftsByStartTime(day.workShifts);\n          break;\n        }\n      }\n\n      for (let wsc of workSchedules) {\n        if (wsc._id === selectedWorkSchedule._id) {\n          wsc.workShifts.push(workShift);\n          this.sortWorkShiftsByStartTime(wsc.workShifts);\n          break;\n        }\n      }\n\n      this.props.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n    } else {\n      message.error(res.errors[0]);\n    }\n  }\n\n  onCancel() {\n    this.setModalVisible(false);\n  }\n\n  onChangeTimePicker(fieldName, e) {\n    const { selectedWorkDay } = this.props;\n\n    const selectedTime = new Date(e);\n    const hours = selectedTime.getHours();\n    const mins = selectedTime.getMinutes();\n    const { workDayInMonth, workMonth, workYear } = selectedWorkDay;\n    const workShiftTime = new Date(workYear, workMonth - 1, workDayInMonth, hours, mins);\n\n    switch (fieldName) {\n      case 'startTime':\n        this.setState({ startTime: workShiftTime.getTime() })\n        break;\n      case 'endTime':\n        this.setState({ endTime: workShiftTime.getTime() })\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { selectedWorkDay } = this.props;\n    const { startTime, endTime } = this.state;\n\n    return (\n      <div className=\"add-work-shift-dialog\">\n        <Tooltip placement=\"bottom\" title=\"Thêm ca làm việc\">\n          <Button\n            onClick={() => this.setModalVisible(true)}\n            className=\"add-work-shift-dialog__btn-open\"\n            type=\"link\"\n            icon={<PlusCircleFilled />} />\n        </Tooltip>\n        <Modal\n          title={<span style={{ color: '#ff8220' }}>{`${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? moment(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') + ' | Thêm ca làm việc trong ngày' : ''}`}</span>}\n          centered\n          visible={this.state.isVisible}\n          onOk={() => this.onOK()}\n          onCancel={() => this.onCancel()}\n          okText=\"Thêm\"\n          cancelText=\"Hủy bỏ\"\n          okButtonProps={{ style: { background: '#ff8220', borderColor: '#ff8220' } }}\n        >\n\n          <div className=\"add-work-shift-dialog__time-picker\">\n            <Row align=\"center\" className=\"add-work-shift-dialog__time-picker__time-selection\">\n              <Col span={8} className=\"add-work-shift-dialog__time-picker__time-selection__label\" align=\"center\">\n                <span>Bắt đầu</span>\n              </Col>\n              <Col span={16}>\n                <TimePicker\n                  value={startTime ? moment(new Date(startTime)) : null}\n                  placeholder=\"Chọn mốc thời gian\"\n                  format={format}\n                  onChange={e => this.onChangeTimePicker('startTime', e)}\n                />\n              </Col>\n            </Row>\n\n            <Row align=\"center\" className=\"add-work-shift-dialog__time-picker__time-selection\">\n              <Col span={8} className=\"add-work-shift-dialog__time-picker__time-selection__label\" align=\"center\">\n                <span>Kết thúc</span>\n              </Col>\n              <Col span={16}>\n                <TimePicker\n                  value={endTime ? moment(new Date(endTime)) : null}\n                  placeholder=\"Chọn mốc thời gian\"\n                  format={format}\n                  onChange={e => this.onChangeTimePicker('endTime', e)}\n                />\n              </Col>\n            </Row>\n          </div>\n\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default withCookies(BtnAddWorkShift);\n"]},"metadata":{},"sourceType":"module"}