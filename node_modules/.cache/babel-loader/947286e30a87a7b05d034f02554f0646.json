{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/WorkAssignment.js\";\nimport React from 'react';\nimport { Row, Col, Tabs, Select, List, Avatar, Button, Tooltip, Modal } from 'antd';\nimport { PlusCircleOutlined, UsergroupAddOutlined, MoreOutlined, CloseCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport USER_ROLE from '../../../../constants/user-role.constant';\nimport './WorkAssignment.style.scss';\nimport * as monent from 'moment';\nimport * as _ from 'lodash';\nimport WEEK_DAY from '../../../../constants/week-day.constant';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport { API } from '../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\nimport BtnAddWorkSchedule from './BtnAddWorkSchedule/BtnAddWorkSchedule';\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Option\n} = Select;\nconst {\n  confirm\n} = Modal;\n\nclass WorkAssignment extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.loadWorkSchedules = async year => {\n      this.props.setAppLoading(true);\n      const url = API.Manager.WorkSchedule.getWorkSchedules.replace('{year}', year);\n      const res = await (await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        },\n        signal: this.abortController.signal\n      })).json();\n      this.props.setAppLoading(false);\n      const _workSchedules = res.data.workSchedules;\n      const {\n        availableYears\n      } = res.data;\n      let {\n        selectedWorkSchedule,\n        workSchedules\n      } = this.state;\n      selectedWorkSchedule = { ...selectedWorkSchedule,\n        ..._workSchedules[0]\n      };\n      workSchedules = [..._workSchedules];\n      this.setState({\n        selectedWorkSchedule,\n        workSchedules,\n        listYears: availableYears\n      });\n      let isWorkShiftFound = false;\n\n      for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n        for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n          if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n            let {\n              selectedWorkShift\n            } = this.state;\n            const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n            selectedWorkShift = selectedWorkDay.workShifts[0];\n            selectedWorkShift.index = 0;\n            isWorkShiftFound = true;\n            this.setState({\n              selectedWorkDay,\n              selectedWorkShift\n            });\n            break;\n          }\n        }\n      }\n\n      if (!isWorkShiftFound) {\n        const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n        const selectedWorkShift = {};\n        this.setState({\n          selectedWorkDay,\n          selectedWorkShift\n        });\n      }\n    };\n\n    this.state = {\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      workSchedules: [],\n      listYears: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadWorkSchedules(null);\n  }\n\n  toggleTaskWorkDayPanel() {\n    const {\n      isTaskWorkDayPanelShown\n    } = this.state;\n    this.setState({\n      isTaskWorkDayPanelShown: !isTaskWorkDayPanelShown\n    });\n  }\n\n  filterWorkShiftsByDay(workShifts, day) {\n    return workShifts.filter(ws => {\n      const wsDay = new Date(ws.startTime).getDate();\n      return day === wsDay;\n    });\n  }\n\n  generateWorkDays(workSchedule) {\n    const {\n      month,\n      year,\n      workShifts\n    } = workSchedule;\n    const workDaysLength = monent(`${month}-${year}`, 'M-YYYY').daysInMonth();\n    let workDays = [];\n    let temp = [];\n    let assigners = [];\n\n    for (let i = 1; i <= workDaysLength; i++) {\n      assigners.length = 0;\n      assigners = [];\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments) assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n\n      if (i % 7 === 0) {\n        workDays.push([...temp]);\n        temp.length = 0;\n      }\n    }\n\n    temp.length = 0;\n    temp = [];\n\n    for (let i = 29; i <= workDaysLength; i++) {\n      assigners = [];\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments) assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n    }\n\n    workDays.push([...temp]);\n    return workDays;\n  }\n\n  getWeekDay(day, month, year) {\n    const weekDayNumber = monent(`${day}-${month}-${year}`, 'DD-MM-YYYY').day();\n\n    switch (weekDayNumber) {\n      case 1:\n        return WEEK_DAY.MONDAY;\n\n      case 2:\n        return WEEK_DAY.TUESDAY;\n\n      case 3:\n        return WEEK_DAY.WEDNESDAY;\n\n      case 4:\n        return WEEK_DAY.THURSDAY;\n\n      case 5:\n        return WEEK_DAY.FRIDAY;\n\n      case 6:\n        return WEEK_DAY.SATURDAY;\n\n      case 0:\n        return WEEK_DAY.SUNDAY;\n\n      default:\n        return null;\n    }\n  }\n\n  getListMonths() {\n    let months = [];\n\n    for (let i = 1; i <= 12; i++) months.push({\n      text: 'Tháng ' + i,\n      value: i\n    });\n\n    return months;\n  }\n\n  getListYears() {\n    const {\n      workSchedules\n    } = this.state;\n    return _.uniqBy(workSchedules, w => w.year).map(w => ({\n      text: 'Năm ' + w.year,\n      value: w.year\n    }));\n  }\n\n  handleSelectWorkSchedule(selectedWorkSchedule, index) {\n    selectedWorkSchedule.index = index;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n    let isWorkShiftFound = false;\n\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let {\n            selectedWorkShift\n          } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n          selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n          isWorkShiftFound = true;\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n          break;\n        }\n      }\n    }\n\n    if (!isWorkShiftFound) {\n      const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n      const selectedWorkShift = {};\n      this.setState({\n        selectedWorkDay,\n        selectedWorkShift\n      });\n    }\n\n    this.setState({\n      selectedWorkSchedule\n    });\n  }\n\n  handleSelectWorkDay(row, col) {\n    const {\n      selectedWorkSchedule\n    } = this.state;\n    let {\n      selectedWorkShift\n    } = this.state;\n    const selectedWorkDay = selectedWorkSchedule.workDays[row][col];\n\n    if (selectedWorkDay.workShifts.length > 0) {\n      selectedWorkShift = selectedWorkDay.workShifts[0];\n      selectedWorkShift.index = 0;\n    } else {\n      selectedWorkShift = {};\n    }\n\n    this.setState({\n      selectedWorkDay,\n      selectedWorkShift\n    });\n  }\n\n  handleSelectWorkShift(workShift, index) {\n    workShift.index = index;\n    this.setState({\n      selectedWorkShift: workShift\n    });\n  }\n\n  removeWorkShift(workShiftID) {\n    console.log(workShiftID);\n  }\n\n  removeWorkSchedule(workScheduleID) {\n    console.log(workScheduleID);\n  }\n\n  openRemoveWorkShiftConfirm(workShiftID) {\n    confirm({\n      title: 'Bạn có muốn hủy ca làm việc này?',\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }),\n      content: 'Toàn bộ nhân viên được phân công sẽ bị hủy.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n\n      onOk() {\n        console.log(workShiftID);\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  openRemoveWorkScheduleConfirm(workScheduleID) {\n    confirm({\n      title: 'Bạn có muốn hủy lịch làm việc này?',\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }),\n      content: 'Toàn bộ ca làm việc và nhân viên được phân công sẽ bị hủy.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n\n      onOk() {\n        console.log(workScheduleID);\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  handleSelectYear(e) {\n    console.log(e);\n  }\n\n  render() {\n    let {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift,\n      listYears\n    } = this.state;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n    return React.createElement(\"div\", {\n      className: \"work-assignment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"work-assignment__left-sidebar\",\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(BtnAddWorkSchedule, {\n      reloadWorkSchedules: () => this.loadWorkSchedules(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__year-selection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"N\\u0103m l\\xE0m vi\\u1EC7c\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, (listYears || []).length > 0 ? React.createElement(Select, {\n      defaultValue: listYears[0].value,\n      onChange: e => this.hanleSelectYear(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, listYears.map((y, i) => React.createElement(Option, {\n      key: i,\n      value: y.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, y.text))) : React.createElement(React.Fragment, null))), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__list-tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Th\\xE1ng l\\xE0m vi\\u1EC7c\")), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__list-tasks__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(List, {\n      size: \"small\",\n      dataSource: workSchedules,\n      renderItem: (item, index) => {\n        return React.createElement(List.Item, {\n          className: `work-assignment__left-sidebar__list-tasks__item animated fadeIn\n                          ${index === selectedWorkSchedule.index ? 'work-assignment__left-sidebar__list-tasks__item--selected' : ''}`,\n          onClick: () => this.handleSelectWorkSchedule(item, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, React.createElement(Col, {\n          span: 22,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"work-assignment__left-sidebar__list-tasks__item__task-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, \"Th\\xE1ng \", item.month)), React.createElement(Col, {\n          span: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: () => this.openRemoveWorkScheduleConfirm(item._id),\n          className: \"work-assignment__left-sidebar__list-tasks__item__btn-remove\",\n          type: \"link\",\n          icon: React.createElement(CloseCircleOutlined, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      className: \"work-assignment__content\",\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? monent(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') : ''}`), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs work-assignment__content__task-work-day-panel__panel__main__list-work-shifts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"Ca l\\xE0m vi\\u1EC7c trong ng\\xE0y\")), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm ca l\\xE0m vi\\u1EC7c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\",\n      type: \"link\",\n      icon: React.createElement(PlusCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: selectedWorkDay.workShifts,\n      renderItem: (ws, index) => React.createElement(List.Item, {\n        onClick: () => this.handleSelectWorkShift(ws, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: `\n                                animated fadeIn\n                                ${index === selectedWorkShift.index ? 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item--selected' : 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item'}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, \"T\\u1EEB \", monent(ws.startTime).format('HH:mm'), \" \\u0111\\u1EBFn \", monent(ws.endTime).format('HH:mm'))), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-close\",\n        type: \"link\",\n        onClick: () => this.openRemoveWorkShiftConfirm(ws._id),\n        icon: React.createElement(CloseCircleOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Chi ti\\u1EBFt ca l\\xE0m vi\\u1EC7c\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, \"B\\u1EAFt \\u0111\\u1EA7u\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, \"K\\u1EBFt th\\xFAc\"))), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, selectedWorkShift.startTime ? monent(selectedWorkShift.startTime).format('HH:mm') : ''), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, selectedWorkShift.endTime ? monent(selectedWorkShift.endTime).format('HH:mm') : '')))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"Nh\\xE2n vi\\xEAn ph\\u1EE5 tr\\xE1ch (\", selectedWorkShift.workAssignments ? selectedWorkShift.workAssignments.length : 0, \")\")), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm nh\\xE2n vi\\xEAn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\",\n      type: \"link\",\n      icon: React.createElement(UsergroupAddOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: selectedWorkShift.workAssignments,\n      renderItem: wa => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__staff animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: wa.assigner.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473\n          },\n          __self: this\n        }),\n        title: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          },\n          __self: this\n        }, wa.assigner.fullname),\n        description: USER_ROLE[wa.assigner.role].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-more\",\n        type: \"link\",\n        icon: React.createElement(MoreOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, wa.description))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"work-assignment__content__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__header__dark-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"work-assignment__content__header__task-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, \"Th\\xE1ng \", selectedWorkSchedule.month, \" n\\u0103m \", selectedWorkSchedule.year))), React.createElement(\"div\", {\n      className: \"work-assignment__content__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"1\",\n      tabBarGutter: 50,\n      className: \"work-assignment__content__body__tabs\",\n      onChange: e => console.log(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: \"L\\u1ECBch l\\xE0m vi\\u1EC7c\",\n      key: \"1\",\n      className: \"work-assignment__content__body__tabs__work-schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, selectedWorkSchedule.workDays.map((row, iRow) => React.createElement(Row, {\n      key: iRow + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, row.map((col, iCol) => React.createElement(Col, {\n      key: `${iRow + 1}_${iCol}`,\n      span: 2,\n      className: `\n                            animated fadeIn\n                            work-assignment__content__body__tabs__work-schedule__work-day \n                            ${col.workDayInMonth === selectedWorkDay.workDayInMonth ? 'work-assignment__content__body__tabs__work-schedule__work-day--selected' : ''}\n                          `,\n      onClick: () => this.handleSelectWorkDay(iRow, iCol),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: `\n                              work-assignment__content__body__tabs__work-schedule__work-day__day-in-month\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__day-in-month--sunday' : ''}\n                            `,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, col.workDayInMonth), React.createElement(\"span\", {\n      className: `\n                              work-assignment__content__body__tabs__work-schedule__work-day__week-day\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__week-day--sunday' : ''}\n                            `,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, col.workWeekDay), React.createElement(\"div\", {\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, col.staffs.slice(0, 2).map(staff => React.createElement(Avatar, {\n      key: staff._id,\n      size: 16,\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar\",\n      src: staff.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    })), col.staffs.length > 2 ? React.createElement(\"div\", {\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar--plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, \"+\", col.staffs.slice(2).length)) : React.createElement(React.Fragment, null))))))))))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(WorkAssignment));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/WorkAssignment.js"],"names":["React","Row","Col","Tabs","Select","List","Avatar","Button","Tooltip","Modal","PlusCircleOutlined","UsergroupAddOutlined","MoreOutlined","CloseCircleOutlined","ExclamationCircleOutlined","USER_ROLE","monent","_","WEEK_DAY","withCookies","connect","actions","API","COOKIE_NAMES","PageBase","BtnAddWorkSchedule","TabPane","Option","confirm","WorkAssignment","constructor","props","loadWorkSchedules","year","setAppLoading","url","Manager","WorkSchedule","getWorkSchedules","replace","res","fetch","method","headers","cookies","get","token","signal","abortController","json","_workSchedules","data","workSchedules","availableYears","selectedWorkSchedule","state","setState","listYears","isWorkShiftFound","i","workDays","length","j","staffs","selectedWorkShift","selectedWorkDay","workShifts","index","componentDidMount","toggleTaskWorkDayPanel","isTaskWorkDayPanelShown","filterWorkShiftsByDay","day","filter","ws","wsDay","Date","startTime","getDate","generateWorkDays","workSchedule","month","workDaysLength","daysInMonth","temp","assigners","filteredWorkShifts","wa","workAssignments","push","assigner","uniqBy","a","_id","workWeekDay","getWeekDay","workDayInMonth","workMonth","workYear","weekDayNumber","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","getListMonths","months","text","value","getListYears","w","map","handleSelectWorkSchedule","handleSelectWorkDay","row","col","handleSelectWorkShift","workShift","removeWorkShift","workShiftID","console","log","removeWorkSchedule","workScheduleID","openRemoveWorkShiftConfirm","title","icon","content","okText","okType","cancelText","onOk","onCancel","openRemoveWorkScheduleConfirm","handleSelectYear","e","render","hanleSelectYear","y","item","format","endTime","width","avatar","fullname","role","name","description","iRow","iCol","slice","staff"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col, Tabs, Select, List, Avatar, Button, Tooltip, Modal } from 'antd';\nimport { PlusCircleOutlined, UsergroupAddOutlined, MoreOutlined, CloseCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport USER_ROLE from '../../../../constants/user-role.constant';\nimport './WorkAssignment.style.scss';\nimport * as monent from 'moment';\nimport * as _ from 'lodash';\nimport WEEK_DAY from '../../../../constants/week-day.constant';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport { API } from '../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\nimport BtnAddWorkSchedule from './BtnAddWorkSchedule/BtnAddWorkSchedule';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nclass WorkAssignment extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      workSchedules: [],\n      listYears: []\n    }\n  }\n\n  componentDidMount() {\n    this.loadWorkSchedules(null);\n  }\n\n  loadWorkSchedules = async (year) => {\n    this.props.setAppLoading(true);\n\n    const url = API.Manager.WorkSchedule.getWorkSchedules.replace('{year}', year);\n    const res = await (\n      await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        },\n        signal: this.abortController.signal\n      })\n    ).json();\n\n    this.props.setAppLoading(false);\n    const _workSchedules = res.data.workSchedules;\n    const { availableYears } = res.data;\n    let { selectedWorkSchedule, workSchedules } = this.state;\n    selectedWorkSchedule = { ...selectedWorkSchedule, ..._workSchedules[0] };\n    workSchedules = [..._workSchedules];\n\n    this.setState({\n      selectedWorkSchedule,\n      workSchedules,\n      listYears: availableYears\n    });\n\n    let isWorkShiftFound = false;\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let { selectedWorkShift } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n\n          selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n          isWorkShiftFound = true;\n\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n\n          break;\n        }\n      }\n    }\n\n    if (!isWorkShiftFound) {\n      const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n      const selectedWorkShift = {};\n      this.setState({\n        selectedWorkDay,\n        selectedWorkShift\n      })\n    }\n  }\n\n  toggleTaskWorkDayPanel() {\n    const { isTaskWorkDayPanelShown } = this.state;\n    this.setState({ isTaskWorkDayPanelShown: !isTaskWorkDayPanelShown });\n  }\n\n  filterWorkShiftsByDay(workShifts, day) {\n    return workShifts.filter(ws => {\n      const wsDay = new Date(ws.startTime).getDate();\n      return day === wsDay;\n    });\n  }\n\n  generateWorkDays(workSchedule) {\n    const { month, year, workShifts } = workSchedule;\n    const workDaysLength = monent(`${month}-${year}`, 'M-YYYY').daysInMonth();\n    let workDays = [];\n    let temp = [];\n    let assigners = [];\n\n    for (let i = 1; i <= workDaysLength; i++) {\n      assigners.length = 0;\n      assigners = [];\n\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments)\n          assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n\n      if (i % 7 === 0) {\n        workDays.push([...temp]);\n        temp.length = 0;\n      }\n    }\n\n    temp.length = 0;\n    temp = [];\n\n    for (let i = 29; i <= workDaysLength; i++) {\n      assigners = [];\n\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments)\n          assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n    }\n    workDays.push([...temp]);\n\n    return workDays;\n  }\n\n  getWeekDay(day, month, year) {\n    const weekDayNumber = monent(`${day}-${month}-${year}`, 'DD-MM-YYYY').day();\n    switch (weekDayNumber) {\n      case 1: return WEEK_DAY.MONDAY;\n      case 2: return WEEK_DAY.TUESDAY;\n      case 3: return WEEK_DAY.WEDNESDAY;\n      case 4: return WEEK_DAY.THURSDAY;\n      case 5: return WEEK_DAY.FRIDAY;\n      case 6: return WEEK_DAY.SATURDAY;\n      case 0: return WEEK_DAY.SUNDAY;\n      default: return null\n    }\n  }\n\n  getListMonths() {\n    let months = [];\n    for (let i = 1; i <= 12; i++)\n      months.push({\n        text: 'Tháng ' + i,\n        value: i\n      });\n    return months;\n  }\n\n  getListYears() {\n    const { workSchedules } = this.state;\n    return _.uniqBy(workSchedules, w => w.year).map(w => ({ text: 'Năm ' + w.year, value: w.year }));\n  }\n\n  handleSelectWorkSchedule(selectedWorkSchedule, index) {\n    selectedWorkSchedule.index = index;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n\n    let isWorkShiftFound = false;\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let { selectedWorkShift } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n\n          selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n          isWorkShiftFound = true;\n\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n\n          break;\n        }\n      }\n    }\n\n    if (!isWorkShiftFound) {\n      const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n      const selectedWorkShift = {};\n      this.setState({\n        selectedWorkDay,\n        selectedWorkShift\n      })\n    }\n\n    this.setState({ selectedWorkSchedule });\n  }\n\n  handleSelectWorkDay(row, col) {\n    const { selectedWorkSchedule } = this.state;\n    let { selectedWorkShift } = this.state;\n    const selectedWorkDay = selectedWorkSchedule.workDays[row][col];\n\n    if (selectedWorkDay.workShifts.length > 0) {\n      selectedWorkShift = selectedWorkDay.workShifts[0];\n      selectedWorkShift.index = 0;\n    } else {\n      selectedWorkShift = {}\n    }\n\n    this.setState({\n      selectedWorkDay,\n      selectedWorkShift\n    });\n  }\n\n  handleSelectWorkShift(workShift, index) {\n    workShift.index = index;\n    this.setState({ selectedWorkShift: workShift });\n  }\n\n  removeWorkShift(workShiftID) {\n    console.log(workShiftID);\n  }\n\n  removeWorkSchedule(workScheduleID) {\n    console.log(workScheduleID);\n  }\n\n  openRemoveWorkShiftConfirm(workShiftID) {\n    confirm({\n      title: 'Bạn có muốn hủy ca làm việc này?',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Toàn bộ nhân viên được phân công sẽ bị hủy.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n      onOk() {\n        console.log(workShiftID);\n      },\n      onCancel() { },\n    });\n  }\n\n  openRemoveWorkScheduleConfirm(workScheduleID) {\n    confirm({\n      title: 'Bạn có muốn hủy lịch làm việc này?',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Toàn bộ ca làm việc và nhân viên được phân công sẽ bị hủy.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n      onOk() {\n        console.log(workScheduleID);\n      },\n      onCancel() { },\n    });\n  }\n\n  handleSelectYear(e) {\n    console.log(e);\n  }\n\n  render() {\n    let { workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift, listYears } = this.state;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n\n    return (\n      <div className=\"work-assignment\">\n        <Row>\n          <Col className=\"work-assignment__left-sidebar\" span={4}>\n            <BtnAddWorkSchedule reloadWorkSchedules={() => this.loadWorkSchedules()} />\n\n            <div className=\"work-assignment__left-sidebar__year-selection\">\n              <div className=\"work-assignment__left-sidebar__title\">\n                <span>Năm làm việc</span>\n              </div>\n              <div>\n                {\n                  (listYears || []).length > 0 ? (\n                    <Select defaultValue={listYears[0].value} onChange={e => this.hanleSelectYear(e)}>\n                      {listYears.map((y, i) => (\n                        <Option key={i} value={y.value}>{y.text}</Option>\n                      ))}\n                    </Select>\n                  ) : <></>\n                }\n              </div>\n            </div>\n\n            <div className=\"work-assignment__left-sidebar__list-tasks\">\n\n              <div className=\"work-assignment__left-sidebar__title\">\n                <span>Tháng làm việc</span>\n              </div>\n\n              <div className=\"work-assignment__left-sidebar__list-tasks__wrapper\">\n                <List\n                  size=\"small\"\n                  dataSource={workSchedules}\n                  renderItem={(item, index) => {\n                    return (\n                      <List.Item\n                        className={\n                          `work-assignment__left-sidebar__list-tasks__item animated fadeIn\n                          ${index === selectedWorkSchedule.index ? 'work-assignment__left-sidebar__list-tasks__item--selected' : ''}`\n                        }\n                        onClick={() => this.handleSelectWorkSchedule(item, index)}>\n                        <Row>\n                          <Col span={22}>\n                            <span className=\"work-assignment__left-sidebar__list-tasks__item__task-name\">Tháng {item.month}</span>\n                          </Col>\n                          <Col span={2}>\n                            <Button\n                              onClick={() => this.openRemoveWorkScheduleConfirm(item._id)}\n                              className=\"work-assignment__left-sidebar__list-tasks__item__btn-remove\"\n                              type=\"link\"\n                              icon={<CloseCircleOutlined />} />\n                          </Col>\n                        </Row>\n                      </List.Item>\n                    )\n                  }}\n                />\n              </div>\n            </div>\n          </Col>\n          <Col className=\"work-assignment__content\" span={20}>\n            <div className=\"work-assignment__content__task-work-day-panel\">\n              <div className=\"work-assignment__content__task-work-day-panel__panel\">\n\n                <div className=\"work-assignment__content__task-work-day-panel__panel__main\">\n                  <h3>{\n                    `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? monent(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') : ''}`\n                  }</h3>\n\n                  <div\n                    className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs work-assignment__content__task-work-day-panel__panel__main__list-work-shifts\">\n                    <Row>\n                      <Col span={21}>\n                        <span className=\"work-assignment__content__task-work-day-panel__panel__main__title\">\n                          Ca làm việc trong ngày</span>\n                      </Col>\n                      <Col span={3}>\n                        <Tooltip placement=\"bottom\" title=\"Thêm ca làm việc\">\n                          <Button\n                            className=\"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\"\n                            type=\"link\"\n                            icon={<PlusCircleOutlined />} />\n                        </Tooltip>\n                      </Col>\n                    </Row>\n                    <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__wrapper\">\n                      <List\n                        itemLayout=\"horizontal\"\n                        dataSource={selectedWorkDay.workShifts}\n                        renderItem={(ws, index) => (\n                          <List.Item onClick={() => this.handleSelectWorkShift(ws, index)}>\n                            <Row\n                              className={`\n                                animated fadeIn\n                                ${index === selectedWorkShift.index ?\n                                  'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item--selected'\n                                  : 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item'}`}\n                            >\n                              <Col span={22}>\n                                <span>\n                                  Từ {monent(ws.startTime).format('HH:mm')} đến {monent(ws.endTime).format('HH:mm')}\n                                </span>\n                              </Col>\n                              <Col span={2}>\n                                <Button\n                                  className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-close\"\n                                  type=\"link\"\n                                  onClick={() => this.openRemoveWorkShiftConfirm(ws._id)}\n                                  icon={<CloseCircleOutlined />} />\n                              </Col>\n                            </Row>\n                          </List.Item>\n                        )}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__details\">\n                    <h3>Chi tiết ca làm việc</h3>\n                    <Row>\n                      <Col span={8}>\n                        <ul\n                          className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--label\">\n                          <li>Bắt đầu</li>\n                          <li>Kết thúc</li>\n                        </ul>\n                      </Col>\n                      <Col span={16}>\n                        <ul\n                          className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--value\">\n                          <li>{\n                            selectedWorkShift.startTime ? monent(selectedWorkShift.startTime).format('HH:mm') : ''\n                          }</li>\n                          <li>{\n                            selectedWorkShift.endTime ? monent(selectedWorkShift.endTime).format('HH:mm') : ''\n                          }</li>\n                        </ul>\n                      </Col>\n                    </Row>\n                    <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs\">\n                      <Row>\n                        <Col span={21}>\n                          <span className=\"work-assignment__content__task-work-day-panel__panel__main__title\">\n                            Nhân viên phụ trách ({\n                              selectedWorkShift.workAssignments ? selectedWorkShift.workAssignments.length : 0\n                            })</span>\n                        </Col>\n                        <Col span={3}>\n                          <Tooltip placement=\"bottom\" title=\"Thêm nhân viên\">\n                            <Button\n                              className=\"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\"\n                              type=\"link\"\n                              icon={<UsergroupAddOutlined />} />\n                          </Tooltip>\n                        </Col>\n                      </Row>\n\n                      <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__wrapper\">\n                        <List\n                          itemLayout=\"horizontal\"\n                          dataSource={selectedWorkShift.workAssignments}\n                          renderItem={wa => (\n                            <List.Item>\n                              <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__staff animated fadeIn\">\n                                <Row style={{ width: '100%' }}>\n                                  <Col span={22}>\n                                    <List.Item.Meta\n                                      avatar={<Avatar src={wa.assigner.avatar} />}\n                                      title={<span>{wa.assigner.fullname}</span>}\n                                      description={USER_ROLE[wa.assigner.role].name}\n                                    />\n                                  </Col>\n                                  <Col span={2}>\n                                    <Button\n                                      className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-more\"\n                                      type=\"link\"\n                                      icon={<MoreOutlined />} />\n                                  </Col>\n                                </Row>\n                                <p className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__note\">\n                                  {wa.description}\n                                </p>\n                              </div>\n                            </List.Item>\n                          )}\n                        />\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"work-assignment__content__header\">\n              <div className=\"work-assignment__content__header__dark-bg\"></div>\n              <div className=\"work-assignment__content__header__task-name\">\n                <h3>Tháng {selectedWorkSchedule.month} năm {selectedWorkSchedule.year}</h3>\n              </div>\n            </div>\n            <div className=\"work-assignment__content__body\">\n              <Tabs\n                defaultActiveKey=\"1\"\n                tabBarGutter={50}\n                className=\"work-assignment__content__body__tabs\"\n                onChange={e => console.log(e)}>\n                <TabPane tab=\"Lịch làm việc\" key=\"1\" className=\"work-assignment__content__body__tabs__work-schedule\">\n                  {selectedWorkSchedule.workDays.map((row, iRow) => (\n                    <Row key={iRow + 1}>\n                      {row.map((col, iCol) => (\n                        <Col key={`${iRow + 1}_${iCol}`} span={2}\n                          className={`\n                            animated fadeIn\n                            work-assignment__content__body__tabs__work-schedule__work-day \n                            ${col.workDayInMonth === selectedWorkDay.workDayInMonth ?\n                              'work-assignment__content__body__tabs__work-schedule__work-day--selected' : ''\n                            }\n                          `}\n                          onClick={() => this.handleSelectWorkDay(iRow, iCol)}>\n                          <span\n                            className={`\n                              work-assignment__content__body__tabs__work-schedule__work-day__day-in-month\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__day-in-month--sunday' : ''}\n                            `}>{col.workDayInMonth}</span>\n                          <span\n                            className={`\n                              work-assignment__content__body__tabs__work-schedule__work-day__week-day\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__week-day--sunday' : ''}\n                            `}>{col.workWeekDay}</span>\n                          <div className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs\">\n                            {col.staffs.slice(0, 2).map(staff => (\n                              <Avatar\n                                key={staff._id}\n                                size={16}\n                                className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar\"\n                                src={staff.avatar} />))}\n                            {col.staffs.length > 2 ? (\n                              <div className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar--plus\">\n                                <span>+{col.staffs.slice(2).length}</span>\n                              </div>\n                            ) : <></>}\n                          </div>\n                        </Col>\n                      ))}\n                    </Row>\n                  ))}\n                </TabPane>\n              </Tabs>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(WorkAssignment));\n"]},"metadata":{},"sourceType":"module"}