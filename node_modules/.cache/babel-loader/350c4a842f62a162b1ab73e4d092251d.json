{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/ImportingRequest/SupplierManagement/EditSupplierDialog/EditSupplierDialog.js\";\nimport React from 'react';\nimport { Button, Modal, Form, Input, message } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\nimport './EditSupplierDialog.style.scss';\nimport { connect } from 'react-redux';\nimport { withCookies } from 'react-cookie';\nimport * as actions from '../../../../../../redux/actions';\nimport PageBase from '../../../../../utilities/PageBase/PageBase';\nimport { API } from '../../../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../../../constants/cookie-name.constant';\nimport GooglePlacesAutocomplete from '../../../../../utilities/GooglePlacesAutocomplete/GooglePlacesAutocomplete';\nconst layout = {\n  labelCol: {\n    span: 5\n  },\n  wrapperCol: {\n    span: 19\n  }\n};\n\nclass EditSupplierDialog extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({\n      isVisible\n    });\n  }\n\n  onOk() {\n    if (this.formRef.current) {\n      this.formRef.current.submit();\n    }\n  }\n\n  async onFinish(values) {\n    this.props.setAppLoading(true);\n    const res = await (await fetch(API.Manager.SupplierManagment.updateSupplier.replace('{supplierID}', this.props.supplier._id), {\n      method: 'PUT',\n      body: JSON.stringify(values),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        'token': this.props.cookies.get(COOKIE_NAMES.token)\n      },\n      signal: this.abortController.signal\n    })).json();\n    this.props.setAppLoading(false);\n\n    if (res.status !== 200) {\n      message.error(res.errors[0]);\n      return;\n    }\n\n    this.props.updateSuppliersDataSource(res.data.supplier);\n    this.setDialogVisible(false);\n    message.success(res.messages[0]);\n  }\n\n  setAddress(placeInfo) {\n    if (this.formRef.current) {\n      this.formRef.current.setFieldsValue({\n        address: placeInfo.address\n      });\n    }\n  }\n\n  render() {\n    const {\n      supplier\n    } = this.props;\n    if (!supplier) return React.createElement(React.Fragment, null);\n    return React.createElement(\"div\", {\n      className: \"importing-request__container__suppliers__details__header__toolbar__edit-supplier-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: React.createElement(EditOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      shape: \"circle\",\n      className: \"importing-request__container__suppliers__details__header__toolbar__edit-supplier-dialog__btn-open\",\n      onClick: () => this.setDialogVisible(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      className: \"importing-request__container__suppliers__details__header__toolbar__edit-supplier-dialog__content\",\n      title: React.createElement(\"span\", {\n        style: {\n          color: '#ff8220',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"S\\u1EEDa th\\xF4ng tin\"),\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOk(),\n      onCancel: () => this.setDialogVisible(false),\n      okText: \"L\\u01B0u thay \\u0111\\u1ED5i\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      okButtonProps: {\n        style: {\n          background: '#ff8220',\n          border: 0,\n          fontWeight: 'bold'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, layout, {\n      ref: current => {\n        this.formRef.current = current;\n\n        if (this.formRef.current) {\n          this.formRef.current.setFieldsValue({\n            name: supplier.name,\n            phone: supplier.phone,\n            address: supplier.address\n          });\n        }\n      },\n      onFinish: values => this.onFinish(values),\n      onFinishFailed: () => message.error('Chưa đầy đủ thông tin, vui lòng kiểm tra lại'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      name: \"name\",\n      label: \"Th\\u01B0\\u01A1ng thi\\u1EC7u\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập thương hiệu'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Input, {\n      maxLength: 50,\n      placeholder: \"T\\u1ED1i \\u0111a 50 k\\xED t\\u1EF1\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"phone\",\n      label: \"\\u0110i\\u1EC7n tho\\u1EA1i\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập số điện thoại'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Input, {\n      maxLength: 11,\n      placeholder: \"Bao g\\u1ED3m 10 ho\\u1EB7c 11 s\\u1ED1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"address\",\n      label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập vào chọn địa chỉ'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(GooglePlacesAutocomplete, {\n      setAddress: placeInfo => this.setAddress(placeInfo),\n      initialValue: supplier.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Button, {\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(EditSupplierDialog));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/ImportingRequest/SupplierManagement/EditSupplierDialog/EditSupplierDialog.js"],"names":["React","Button","Modal","Form","Input","message","EditOutlined","connect","withCookies","actions","PageBase","API","COOKIE_NAMES","GooglePlacesAutocomplete","layout","labelCol","span","wrapperCol","EditSupplierDialog","constructor","props","state","isVisible","formRef","createRef","setDialogVisible","setState","onOk","current","submit","onFinish","values","setAppLoading","res","fetch","Manager","SupplierManagment","updateSupplier","replace","supplier","_id","method","body","JSON","stringify","headers","cookies","get","token","signal","abortController","json","status","error","errors","updateSuppliersDataSource","data","success","messages","setAddress","placeInfo","setFieldsValue","address","render","color","fontWeight","style","background","border","name","phone","required","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Modal, Form, Input, message } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\nimport './EditSupplierDialog.style.scss';\nimport { connect } from 'react-redux';\nimport { withCookies } from 'react-cookie';\nimport * as actions from '../../../../../../redux/actions';\nimport PageBase from '../../../../../utilities/PageBase/PageBase';\nimport { API } from '../../../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../../../constants/cookie-name.constant';\nimport GooglePlacesAutocomplete from '../../../../../utilities/GooglePlacesAutocomplete/GooglePlacesAutocomplete';\n\nconst layout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 19 },\n};\n\nclass EditSupplierDialog extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    }\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({ isVisible });\n  }\n\n  onOk() {\n    if (this.formRef.current) {\n      this.formRef.current.submit();\n    }\n  }\n\n  async onFinish(values) {\n    this.props.setAppLoading(true);\n    const res = await (\n      await fetch(\n        API.Manager.SupplierManagment.updateSupplier.replace('{supplierID}', this.props.supplier._id),\n        {\n          method: 'PUT',\n          body: JSON.stringify(values),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': this.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: this.abortController.signal\n        }\n      )\n    ).json();\n\n    this.props.setAppLoading(false);\n    if (res.status !== 200) {\n      message.error(res.errors[0]);\n      return;\n    }\n\n    this.props.updateSuppliersDataSource(res.data.supplier);\n    this.setDialogVisible(false);\n    message.success(res.messages[0]);\n  }\n\n  setAddress(placeInfo) {\n    if (this.formRef.current) {\n      this.formRef.current.setFieldsValue({ address: placeInfo.address });\n    }\n  }\n\n  render() {\n    const { supplier } = this.props;\n    if (!supplier)\n      return <></>;\n\n    return (\n      <div className=\"importing-request__container__suppliers__details__header__toolbar__edit-supplier-dialog\">\n        <Button\n          icon={<EditOutlined />}\n          shape=\"circle\"\n          className=\"importing-request__container__suppliers__details__header__toolbar__edit-supplier-dialog__btn-open\"\n          onClick={() => this.setDialogVisible(true)}\n        />\n\n        <Modal\n          className=\"importing-request__container__suppliers__details__header__toolbar__edit-supplier-dialog__content\"\n          title={<span style={{ color: '#ff8220', fontWeight: 'bold' }}>Sửa thông tin</span>}\n          centered\n          visible={this.state.isVisible}\n          onOk={() => this.onOk()}\n          onCancel={() => this.setDialogVisible(false)}\n          okText=\"Lưu thay đổi\"\n          cancelText=\"Hủy bỏ\"\n          okButtonProps={{ style: { background: '#ff8220', border: 0, fontWeight: 'bold' } }}\n        >\n          <Form\n            {...layout}\n            ref={current => {\n              this.formRef.current = current;\n              if (this.formRef.current) {\n                this.formRef.current.setFieldsValue({\n                  name: supplier.name,\n                  phone: supplier.phone,\n                  address: supplier.address\n                });\n              }\n            }}\n            onFinish={values => this.onFinish(values)}\n            onFinishFailed={() => message.error('Chưa đầy đủ thông tin, vui lòng kiểm tra lại')}\n          >\n            <Form.Item\n              name=\"name\"\n              label=\"Thương thiệu\"\n              rules={[{ required: true, message: 'Vui lòng nhập thương hiệu' }]}\n            >\n              <Input maxLength={50} placeholder=\"Tối đa 50 kí tự\" autoFocus={true} />\n            </Form.Item>\n            <Form.Item\n              name=\"phone\"\n              label=\"Điện thoại\"\n              rules={[{ required: true, message: 'Vui lòng nhập số điện thoại' }]}\n            >\n              <Input maxLength={11} placeholder=\"Bao gồm 10 hoặc 11 số\" />\n            </Form.Item>\n            <Form.Item\n              name=\"address\"\n              label=\"Địa chỉ\"\n              rules={[{ required: true, message: 'Vui lòng nhập vào chọn địa chỉ' }]}\n            >\n              <GooglePlacesAutocomplete\n                setAddress={placeInfo => this.setAddress(placeInfo)}\n                initialValue={supplier.address}\n              />\n            </Form.Item>\n\n            <Form.Item style={{ display: 'none' }}>\n              <Button htmlType=\"submit\" />\n            </Form.Item>\n\n          </Form>\n\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(EditSupplierDialog));\n"]},"metadata":{},"sourceType":"module"}