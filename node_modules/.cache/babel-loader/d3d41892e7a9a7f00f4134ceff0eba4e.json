{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/GoogleMap/GoogleMap.js\";\nimport React, { Component } from 'react';\nimport Geocode from \"react-geocode\";\nconst geocodeParams = {\n  apiKey: 'AIzaSyDTkNdUuexN_PZOKtezyqWdO-g3-ewhHiQ',\n  language: 'vn',\n  region: 'Vietnam'\n};\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      longitude: 0,\n      latitude: 0\n    };\n  }\n\n  async getAddressText(longitude, latitude) {\n    try {\n      const res = await Geocode.fromLatLng(longitude, latitude, geocodeParams.apiKey, geocodeParams.language, geocodeParams.region);\n      return res.results[0].formatted_address;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  async getAddressLocation(address) {\n    try {\n      const res = await Geocode.fromAddress(address, geocodeParams.apiKey, geocodeParams.language, geocodeParams.region);\n      return res.results[0].geometry.location;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  async componentDidMount() {\n    const address = await this.getAddressText(\"10.777919\", \"106.691867\");\n    const location = await this.getAddressLocation('31 Võ Văn Tần, Phường 6, Quận 3');\n    this.setState({\n      address,\n      longitude: location.lng,\n      latitude: location.lat\n    });\n  }\n\n  render() {\n    const {\n      address,\n      longitude,\n      latitude\n    } = this.state;\n    console.log(address, longitude, latitude);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"GoogleMap\");\n  }\n\n}","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/GoogleMap/GoogleMap.js"],"names":["React","Component","Geocode","geocodeParams","apiKey","language","region","GoogleMap","constructor","props","state","address","longitude","latitude","getAddressText","res","fromLatLng","results","formatted_address","error","undefined","getAddressLocation","fromAddress","geometry","location","componentDidMount","setState","lng","lat","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,yCADY;AAEpBC,EAAAA,QAAQ,EAAE,IAFU;AAGpBC,EAAAA,MAAM,EAAE;AAHY,CAAtB;AAMA,eAAe,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAC/CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,SAAS,EAAE,CAFA;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAED,QAAMC,cAAN,CAAqBF,SAArB,EAAgCC,QAAhC,EAA0C;AACxC,QAAI;AACF,YAAME,GAAG,GAAG,MAAMb,OAAO,CAACc,UAAR,CAChBJ,SADgB,EAEhBC,QAFgB,EAGhBV,aAAa,CAACC,MAHE,EAIhBD,aAAa,CAACE,QAJE,EAKhBF,aAAa,CAACG,MALE,CAAlB;AAOA,aAAOS,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeC,iBAAtB;AACD,KATD,CASE,OAAOC,KAAP,EAAc;AACd,aAAOC,SAAP;AACD;AACF;;AAED,QAAMC,kBAAN,CAAyBV,OAAzB,EAAkC;AAChC,QAAI;AACF,YAAMI,GAAG,GAAG,MAAMb,OAAO,CAACoB,WAAR,CAChBX,OADgB,EAEhBR,aAAa,CAACC,MAFE,EAGhBD,aAAa,CAACE,QAHE,EAIhBF,aAAa,CAACG,MAJE,CAAlB;AAMA,aAAOS,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeM,QAAf,CAAwBC,QAA/B;AACD,KARD,CAQE,OAAOL,KAAP,EAAc;AACd,aAAOC,SAAP;AACD;AACF;;AAED,QAAMK,iBAAN,GAA0B;AACxB,UAAMd,OAAO,GAAG,MAAM,KAAKG,cAAL,CAAoB,WAApB,EAAiC,YAAjC,CAAtB;AACA,UAAMU,QAAQ,GAAG,MAAM,KAAKH,kBAAL,CAAwB,iCAAxB,CAAvB;AACA,SAAKK,QAAL,CAAc;AACZf,MAAAA,OADY;AAEZC,MAAAA,SAAS,EAAEY,QAAQ,CAACG,GAFR;AAGZd,MAAAA,QAAQ,EAAEW,QAAQ,CAACI;AAHP,KAAd;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA,OAAF;AAAWC,MAAAA,SAAX;AAAsBC,MAAAA;AAAtB,QAAmC,KAAKH,KAA9C;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAZ,EAAqBC,SAArB,EAAgCC,QAAhC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAKD;;AAzD8C","sourcesContent":["import React, { Component } from 'react';\nimport Geocode from \"react-geocode\";\n\nconst geocodeParams = {\n  apiKey: 'AIzaSyDTkNdUuexN_PZOKtezyqWdO-g3-ewhHiQ',\n  language: 'vn',\n  region: 'Vietnam'\n}\n\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      longitude: 0,\n      latitude: 0\n    }\n  }\n\n  async getAddressText(longitude, latitude) {\n    try {\n      const res = await Geocode.fromLatLng(\n        longitude,\n        latitude,\n        geocodeParams.apiKey,\n        geocodeParams.language,\n        geocodeParams.region\n      );\n      return res.results[0].formatted_address;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  async getAddressLocation(address) {\n    try {\n      const res = await Geocode.fromAddress(\n        address,\n        geocodeParams.apiKey,\n        geocodeParams.language,\n        geocodeParams.region\n      );\n      return res.results[0].geometry.location;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  async componentDidMount() {\n    const address = await this.getAddressText(\"10.777919\", \"106.691867\");\n    const location = await this.getAddressLocation('31 Võ Văn Tần, Phường 6, Quận 3');\n    this.setState({\n      address,\n      longitude: location.lng,\n      latitude: location.lat\n    });\n  }\n\n  render() {\n    const { address, longitude, latitude } = this.state;\n    console.log(address, longitude, latitude);\n    return (\n      <div>\n        GoogleMap\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}