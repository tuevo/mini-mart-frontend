{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/GoogleMap/GoogleMap.js\";\nimport React, { Component } from 'react';\nimport Geocode from \"react-geocode\";\nimport GoogleMapReact from 'google-map-react';\nimport { EnvironmentFilled } from '@ant-design/icons';\n\nconst LocationIndicator = ({\n  text\n}) => ({\n  text\n});\n\nconst geocodeParams = {\n  apiKey: 'AIzaSyDTkNdUuexN_PZOKtezyqWdO-g3-ewhHiQ',\n  language: 'vn',\n  region: 'Vietnam'\n};\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      location: {}\n    };\n  }\n\n  async getAddressText(longitude, latitude) {\n    try {\n      const res = await Geocode.fromLatLng(longitude, latitude, geocodeParams.apiKey, geocodeParams.language, geocodeParams.region);\n      return res.results[0].formatted_address;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async getAddressLocation(address) {\n    try {\n      const res = await Geocode.fromAddress(address, geocodeParams.apiKey, geocodeParams.language, geocodeParams.region);\n      return res.results[0].geometry.location;\n    } catch (error) {\n      return {};\n    }\n  }\n\n  async componentDidMount() {\n    const address = await this.getAddressText(\"10.777919\", \"106.691867\");\n    const location = await this.getAddressLocation('31 Võ Văn Tần, Phường 6, Quận 3');\n    this.setState({\n      address,\n      location\n    });\n  }\n\n  render() {\n    const {\n      location,\n      address\n    } = this.state;\n    if (Object.keys(location).length === 0) return React.createElement(React.Fragment, null);\n    return React.createElement(\"div\", {\n      style: {\n        width: 250,\n        height: 250\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(GoogleMapReact, {\n      apiKey: geocodeParams.apiKey,\n      defaultCenter: location,\n      defaultZoom: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(LocationIndicator, {\n      lat: location.lat,\n      lng: location.lng,\n      text: React.createElement(EnvironmentFilled, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/GoogleMap/GoogleMap.js"],"names":["React","Component","Geocode","GoogleMapReact","EnvironmentFilled","LocationIndicator","text","geocodeParams","apiKey","language","region","GoogleMap","constructor","props","state","address","location","getAddressText","longitude","latitude","res","fromLatLng","results","formatted_address","error","getAddressLocation","fromAddress","geometry","componentDidMount","setState","render","Object","keys","length","width","height","lat","lng"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MACxB;AAAEA,EAAAA;AAAF,CADwB,CAA1B;;AAIA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,yCADY;AAEpBC,EAAAA,QAAQ,EAAE,IAFU;AAGpBC,EAAAA,MAAM,EAAE;AAHY,CAAtB;AAMA,eAAe,MAAMC,SAAN,SAAwBV,SAAxB,CAAkC;AAC/CW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAED,QAAMC,cAAN,CAAqBC,SAArB,EAAgCC,QAAhC,EAA0C;AACxC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMlB,OAAO,CAACmB,UAAR,CAChBH,SADgB,EAEhBC,QAFgB,EAGhBZ,aAAa,CAACC,MAHE,EAIhBD,aAAa,CAACE,QAJE,EAKhBF,aAAa,CAACG,MALE,CAAlB;AAOA,aAAOU,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeC,iBAAtB;AACD,KATD,CASE,OAAOC,KAAP,EAAc;AACd,aAAO,IAAP;AACD;AACF;;AAED,QAAMC,kBAAN,CAAyBV,OAAzB,EAAkC;AAChC,QAAI;AACF,YAAMK,GAAG,GAAG,MAAMlB,OAAO,CAACwB,WAAR,CAChBX,OADgB,EAEhBR,aAAa,CAACC,MAFE,EAGhBD,aAAa,CAACE,QAHE,EAIhBF,aAAa,CAACG,MAJE,CAAlB;AAMA,aAAOU,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeK,QAAf,CAAwBX,QAA/B;AACD,KARD,CAQE,OAAOQ,KAAP,EAAc;AACd,aAAO,EAAP;AACD;AACF;;AAED,QAAMI,iBAAN,GAA0B;AACxB,UAAMb,OAAO,GAAG,MAAM,KAAKE,cAAL,CAAoB,WAApB,EAAiC,YAAjC,CAAtB;AACA,UAAMD,QAAQ,GAAG,MAAM,KAAKS,kBAAL,CAAwB,iCAAxB,CAAvB;AACA,SAAKI,QAAL,CAAc;AACZd,MAAAA,OADY;AAEZC,MAAAA;AAFY,KAAd;AAID;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAwB,KAAKD,KAAnC;AAEA,QAAIiB,MAAM,CAACC,IAAP,CAAYhB,QAAZ,EAAsBiB,MAAtB,KAAiC,CAArC,EACE,OAAO,yCAAP;AAEF,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,MAAM,EAAE5B,aAAa,CAACC,MADxB;AAEE,MAAA,aAAa,EAAEQ,QAFjB;AAGE,MAAA,WAAW,EAAE,EAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,iBAAD;AACE,MAAA,GAAG,EAAEA,QAAQ,CAACoB,GADhB;AAEE,MAAA,GAAG,EAAEpB,QAAQ,CAACqB,GAFhB;AAGE,MAAA,IAAI,EAAE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF;AAeD;;AApE8C","sourcesContent":["import React, { Component } from 'react';\nimport Geocode from \"react-geocode\";\nimport GoogleMapReact from 'google-map-react';\nimport { EnvironmentFilled } from '@ant-design/icons';\n\nconst LocationIndicator = ({ text }) => (\n  { text }\n);\n\nconst geocodeParams = {\n  apiKey: 'AIzaSyDTkNdUuexN_PZOKtezyqWdO-g3-ewhHiQ',\n  language: 'vn',\n  region: 'Vietnam'\n}\n\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      location: {}\n    }\n  }\n\n  async getAddressText(longitude, latitude) {\n    try {\n      const res = await Geocode.fromLatLng(\n        longitude,\n        latitude,\n        geocodeParams.apiKey,\n        geocodeParams.language,\n        geocodeParams.region\n      );\n      return res.results[0].formatted_address;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async getAddressLocation(address) {\n    try {\n      const res = await Geocode.fromAddress(\n        address,\n        geocodeParams.apiKey,\n        geocodeParams.language,\n        geocodeParams.region\n      );\n      return res.results[0].geometry.location;\n    } catch (error) {\n      return {};\n    }\n  }\n\n  async componentDidMount() {\n    const address = await this.getAddressText(\"10.777919\", \"106.691867\");\n    const location = await this.getAddressLocation('31 Võ Văn Tần, Phường 6, Quận 3');\n    this.setState({\n      address,\n      location\n    });\n  }\n\n  render() {\n    const { location, address } = this.state;\n\n    if (Object.keys(location).length === 0)\n      return <></>;\n\n    return (\n      <div style={{ width: 250, height: 250 }}>\n        <GoogleMapReact\n          apiKey={geocodeParams.apiKey}\n          defaultCenter={location}\n          defaultZoom={11}\n        >\n          <LocationIndicator\n            lat={location.lat}\n            lng={location.lng}\n            text={<EnvironmentFilled />}\n          />\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}