{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/GoogleMap/GoogleMap.js\";\nimport React, { Component } from 'react';\nimport Geocode from \"react-geocode\";\nconst geocodeParams = {\n  apiKey: 'AIzaSyDTkNdUuexN_PZOKtezyqWdO-g3-ewhHiQ',\n  language: 'vn',\n  region: 'Vietnam'\n};\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: ''\n    };\n  }\n\n  async getAddressText(longitude, latitude) {\n    try {\n      const res = await Geocode.fromLatLng(longitude, latitude, geocodeParams.apiKey, geocodeParams.language, geocodeParams.region);\n      return res.results[0].formatted_address;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  async getAddressGeometryLocation(address) {\n    try {\n      const res = await Geocode.fromAddress(address, geocodeParams.apiKey, geocodeParams.language, geocodeParams.region);\n      return res.results[0].geometry.location;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  async componentDidMount() {\n    const address = await this.getAddressText(\"10.777919\", \"106.691867\");\n    console.log(address);\n    const geomery = await this.getAddressGeometryLocation('31 Võ Văn Tần, Phường 6, Quận 3');\n    console.log(geomery);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"GoogleMap\");\n  }\n\n}","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/GoogleMap/GoogleMap.js"],"names":["React","Component","Geocode","geocodeParams","apiKey","language","region","GoogleMap","constructor","props","state","address","getAddressText","longitude","latitude","res","fromLatLng","results","formatted_address","error","undefined","getAddressGeometryLocation","fromAddress","geometry","location","componentDidMount","console","log","geomery","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,yCADY;AAEpBC,EAAAA,QAAQ,EAAE,IAFU;AAGpBC,EAAAA,MAAM,EAAE;AAHY,CAAtB;AAMA,eAAe,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAC/CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAED,QAAMC,cAAN,CAAqBC,SAArB,EAAgCC,QAAhC,EAA0C;AACxC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMb,OAAO,CAACc,UAAR,CAChBH,SADgB,EAEhBC,QAFgB,EAGhBX,aAAa,CAACC,MAHE,EAIhBD,aAAa,CAACE,QAJE,EAKhBF,aAAa,CAACG,MALE,CAAlB;AAOA,aAAOS,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeC,iBAAtB;AACD,KATD,CASE,OAAOC,KAAP,EAAc;AACd,aAAOC,SAAP;AACD;AACF;;AAED,QAAMC,0BAAN,CAAiCV,OAAjC,EAA0C;AACxC,QAAI;AACF,YAAMI,GAAG,GAAG,MAAMb,OAAO,CAACoB,WAAR,CAChBX,OADgB,EAEhBR,aAAa,CAACC,MAFE,EAGhBD,aAAa,CAACE,QAHE,EAIhBF,aAAa,CAACG,MAJE,CAAlB;AAMA,aAAOS,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeM,QAAf,CAAwBC,QAA/B;AACD,KARD,CAQE,OAAOL,KAAP,EAAc;AACd,aAAOC,SAAP;AACD;AACF;;AAED,QAAMK,iBAAN,GAA0B;AACxB,UAAMd,OAAO,GAAG,MAAM,KAAKC,cAAL,CAAoB,WAApB,EAAiC,YAAjC,CAAtB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AAEA,UAAMiB,OAAO,GAAG,MAAM,KAAKP,0BAAL,CAAgC,iCAAhC,CAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAKD;;AAnD8C","sourcesContent":["import React, { Component } from 'react';\nimport Geocode from \"react-geocode\";\n\nconst geocodeParams = {\n  apiKey: 'AIzaSyDTkNdUuexN_PZOKtezyqWdO-g3-ewhHiQ',\n  language: 'vn',\n  region: 'Vietnam'\n}\n\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: ''\n    }\n  }\n\n  async getAddressText(longitude, latitude) {\n    try {\n      const res = await Geocode.fromLatLng(\n        longitude,\n        latitude,\n        geocodeParams.apiKey,\n        geocodeParams.language,\n        geocodeParams.region\n      );\n      return res.results[0].formatted_address;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  async getAddressGeometryLocation(address) {\n    try {\n      const res = await Geocode.fromAddress(\n        address,\n        geocodeParams.apiKey,\n        geocodeParams.language,\n        geocodeParams.region\n      );\n      return res.results[0].geometry.location;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  async componentDidMount() {\n    const address = await this.getAddressText(\"10.777919\", \"106.691867\");\n    console.log(address);\n\n    const geomery = await this.getAddressGeometryLocation('31 Võ Văn Tần, Phường 6, Quận 3');\n    console.log(geomery);\n  }\n\n  render() {\n    return (\n      <div>\n        GoogleMap\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}