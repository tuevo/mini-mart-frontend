{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/EditCategoryDialog/EditCategoryDialog.js\";\nimport React from 'react';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport { Modal, Form, Input, Button, message } from 'antd';\nimport './EditCategoryDialog.style.scss';\nimport * as actions from '../../../../../redux/actions';\nimport { API } from '../../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n};\n\nclass EditCategoryDialog extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    if (!isVisible && this.formRef.current) {\n      this.formRef.current.resetFields();\n    }\n\n    this.setState({\n      isVisible\n    });\n  }\n\n  onOk() {\n    document.getElementById('edit-category-dialog-btn-submit').click();\n  }\n\n  async onFinish(values) {\n    this.props.setAppLoading(false);\n    const res = await (await fetch(API.Importer.ProductManagement.updateCategory.replace('{categoryID}', this.props.category._id), {\n      method: 'PUT',\n      body: JSON.stringify(values),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        'token': this.props.cookies.get(COOKIE_NAMES.token)\n      },\n      signal: this.abortController.signal\n    })).json();\n    this.props.setAppLoading(false);\n\n    if (res.status !== 200) {\n      message.error(res.errors[0]);\n      return;\n    }\n\n    const {\n      category\n    } = this.props;\n    category.name = values.name;\n    this.props.updateCategoryInList(category);\n    this.setDialogVisible(false);\n    message.success(res.messages[0]);\n  }\n\n  render() {\n    const {\n      category\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"product-management__edit-category-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      className: \"product-management__edit-category-dialog__btn-open\",\n      onClick: () => this.setDialogVisible(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Ch\\u1EC9nh s\\u1EEDa\"), React.createElement(Modal, {\n      className: \"product-management__edit-category-dialog__content\",\n      title: React.createElement(\"span\", {\n        style: {\n          color: '#ff8220',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, `${category.name} | Sửa thông tin danh mục`),\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOk(),\n      onCancel: () => this.setDialogVisible(false),\n      okText: \"L\\u01B0u thay \\u0111\\u1ED5i\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      okButtonProps: {\n        style: {\n          background: '#ff8220',\n          border: 0\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, layout, {\n      ref: current => {\n        this.formRef.current = current;\n\n        if (this.formRef.current) {\n          this.formRef.current.setFieldsValue({\n            name: this.props.category.name\n          });\n        }\n      },\n      onFinish: values => this.onFinish(values),\n      onFinishFailed: () => message.error('Chưa nhập đầy đủ thông tin, vui lòng kiểm tra lại.'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      name: \"name\",\n      label: \"T\\xEAn danh m\\u1EE5c\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập tên danh mục'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"T\\u1ED1i \\u0111a 30 k\\xED t\\u1EF1\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"edit-category-dialog-btn-submit\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(EditCategoryDialog));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/EditCategoryDialog/EditCategoryDialog.js"],"names":["React","withCookies","connect","Modal","Form","Input","Button","message","actions","API","COOKIE_NAMES","PageBase","layout","labelCol","span","wrapperCol","EditCategoryDialog","constructor","props","state","isVisible","formRef","createRef","setDialogVisible","current","resetFields","setState","onOk","document","getElementById","click","onFinish","values","setAppLoading","res","fetch","Importer","ProductManagement","updateCategory","replace","category","_id","method","body","JSON","stringify","headers","cookies","get","token","signal","abortController","json","status","error","errors","name","updateCategoryInList","success","messages","render","color","fontWeight","style","background","border","setFieldsValue","required","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport { Modal, Form, Input, Button, message } from 'antd';\nimport './EditCategoryDialog.style.scss';\nimport * as actions from '../../../../../redux/actions';\nimport { API } from '../../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\n\nclass EditCategoryDialog extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    }\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    if (!isVisible && this.formRef.current) {\n      this.formRef.current.resetFields();\n    }\n    this.setState({ isVisible });\n  }\n\n  onOk() {\n    document.getElementById('edit-category-dialog-btn-submit').click();\n  }\n\n  async onFinish(values) {\n    this.props.setAppLoading(false);\n    const res = await (\n      await fetch(\n        API.Importer.ProductManagement.updateCategory.replace('{categoryID}', this.props.category._id),\n        {\n          method: 'PUT',\n          body: JSON.stringify(values),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': this.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: this.abortController.signal\n        }\n      )\n    ).json();\n\n    this.props.setAppLoading(false);\n    if (res.status !== 200) {\n      message.error(res.errors[0]);\n      return;\n    }\n\n    const { category } = this.props;\n    category.name = values.name;\n    this.props.updateCategoryInList(category);\n    this.setDialogVisible(false);\n    message.success(res.messages[0]);\n  }\n\n  render() {\n    const { category } = this.props;\n    return (\n      <div className=\"product-management__edit-category-dialog\">\n        <Button\n          type=\"link\"\n          className=\"product-management__edit-category-dialog__btn-open\"\n          onClick={() => this.setDialogVisible(true)}\n        >Chỉnh sửa</Button>\n        <Modal\n          className=\"product-management__edit-category-dialog__content\"\n          title={<span style={{ color: '#ff8220', fontWeight: 'bold' }}>{`${category.name} | Sửa thông tin danh mục`}</span>}\n          centered\n          visible={this.state.isVisible}\n          onOk={() => this.onOk()}\n          onCancel={() => this.setDialogVisible(false)}\n          okText=\"Lưu thay đổi\"\n          cancelText=\"Hủy bỏ\"\n          okButtonProps={{ style: { background: '#ff8220', border: 0 } }}\n        >\n          <Form\n            {...layout}\n            ref={current => {\n              this.formRef.current = current;\n              if (this.formRef.current) {\n                this.formRef.current.setFieldsValue({\n                  name: this.props.category.name\n                });\n              }\n            }}\n            onFinish={values => this.onFinish(values)}\n            onFinishFailed={() => message.error('Chưa nhập đầy đủ thông tin, vui lòng kiểm tra lại.')}\n          >\n            <Form.Item\n              name=\"name\"\n              label=\"Tên danh mục\"\n              rules={[{ required: true, message: 'Vui lòng nhập tên danh mục' }]}\n            >\n              <Input placeholder=\"Tối đa 30 kí tự\" autoFocus={true} />\n            </Form.Item>\n            <Form.Item style={{ display: 'none' }}>\n              <Button id=\"edit-category-dialog-btn-submit\" htmlType=\"submit\" />\n            </Form.Item>\n          </Form>\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(EditCategoryDialog));\n"]},"metadata":{},"sourceType":"module"}