{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Cashier/MoneyCounting/ImportingRequestDialog/ImportingRequestDialog.js\";\nimport React from 'react';\nimport { Modal, Table, Button, message } from 'antd';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport './ImportingRequestDialog.style.scss';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../../redux/actions';\nimport { withCookies } from 'react-cookie';\nimport { API } from '../../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\n\nclass ImportingRequestDialog extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    const {\n      isVisible\n    } = props;\n    this.setDialogVisible(isVisible);\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({\n      isVisible\n    });\n  }\n\n  async sendImportingRequest() {\n    const params = {\n      products: this.props.lackingItems.map(item => item.product._id)\n    };\n    this.props.setAppLoading(true);\n    const res = await (await fetch(API.Cashier.Checkout.createImportingRequest, {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        'token': this.props.cookies.get(COOKIE_NAMES.token)\n      },\n      signal: this.abortController.signal\n    })).json();\n    this.props.setAppLoading(false);\n\n    if (res.state !== 200) {\n      message.error(res.errors[0]);\n      return;\n    }\n\n    message.success(res.messages[0]);\n    this.setDialogVisible(false);\n  }\n\n  render() {\n    let {\n      lackingItems\n    } = this.props;\n    lackingItems = lackingItems.map(item => ({ ...item,\n      key: item.product._id\n    }));\n    const columns = [{\n      title: 'Sản phẩm',\n      dataIndex: 'productName',\n      key: 'productName',\n      render: (value, record) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: record.product.image,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, record.product.name))\n    }, {\n      title: React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"SL y\\xEAu c\\u1EA7u\"),\n      dataIndex: 'requiredQuantity',\n      key: 'requiredQuantity',\n      width: 100,\n      render: value => React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, value)\n    }, {\n      title: React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"SL hi\\u1EC7n c\\xF3\"),\n      dataIndex: 'availableQuantity',\n      key: 'availableQuantity',\n      width: 100,\n      render: value => React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, value)\n    }];\n    return React.createElement(\"div\", {\n      className: \"importing-request-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      className: \"importing-request-dialog__content\",\n      title: React.createElement(\"div\", {\n        className: \"importing-request-dialog__content__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(ExclamationCircleFilled, {\n        className: \"importing-request-dialog__content__title__icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"importing-request-dialog__content__title__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"S\\u1EA3n ph\\u1EA9m kh\\xF4ng \\u0111\\u1EE7\")),\n      visible: this.state.isVisible,\n      footer: null,\n      onCancel: () => {\n        this.setDialogVisible(false);\n        this.props.setLackingItemsDialogVisible(false);\n      },\n      maskClosable: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Table, {\n      dataSource: lackingItems,\n      columns: columns,\n      pagination: false,\n      scroll: {\n        y: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"importing-request-dialog__content__btn-send-request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"importing-request-dialog__content__btn-send-request__btn\",\n      type: \"primary\",\n      shape: \"round\",\n      onClick: () => this.sendImportingRequest(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"G\\u1EEDi y\\xEAu c\\u1EA7u nh\\u1EADp h\\xE0ng\"))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(ImportingRequestDialog));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Cashier/MoneyCounting/ImportingRequestDialog/ImportingRequestDialog.js"],"names":["React","Modal","Table","Button","message","ExclamationCircleFilled","connect","actions","withCookies","API","COOKIE_NAMES","PageBase","ImportingRequestDialog","constructor","props","state","isVisible","componentWillReceiveProps","setDialogVisible","setState","sendImportingRequest","params","products","lackingItems","map","item","product","_id","setAppLoading","res","fetch","Cashier","Checkout","createImportingRequest","method","body","JSON","stringify","headers","cookies","get","token","signal","abortController","json","error","errors","success","messages","render","key","columns","title","dataIndex","value","record","image","name","width","setLackingItemsDialogVisible","y"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, Table, Button, message } from 'antd';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport './ImportingRequestDialog.style.scss';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../../redux/actions';\nimport { withCookies } from 'react-cookie';\nimport { API } from '../../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\n\nclass ImportingRequestDialog extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    }\n  }\n\n  componentWillReceiveProps(props) {\n    const { isVisible } = props;\n    this.setDialogVisible(isVisible);\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({ isVisible });\n  }\n\n  async sendImportingRequest() {\n    const params = {\n      products: this.props.lackingItems.map(item => item.product._id)\n    }\n\n    this.props.setAppLoading(true);\n    const res = await (\n      await fetch(\n        API.Cashier.Checkout.createImportingRequest,\n        {\n          method: 'POST',\n          body: JSON.stringify(params),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': this.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: this.abortController.signal\n        }\n      )\n    ).json();\n\n    this.props.setAppLoading(false);\n    if (res.state !== 200) {\n      message.error(res.errors[0]);\n      return;\n    }\n\n    message.success(res.messages[0]);\n    this.setDialogVisible(false);\n  }\n\n  render() {\n    let { lackingItems } = this.props;\n    lackingItems = lackingItems.map(item => ({ ...item, key: item.product._id }));\n    const columns = [\n      {\n        title: 'Sản phẩm',\n        dataIndex: 'productName',\n        key: 'productName',\n        render: (value, record) => (\n          <div>\n            <img src={record.product.image} alt=\"\" />\n            <span>{record.product.name}</span>\n          </div>\n        )\n      },\n      {\n        title: <center>SL yêu cầu</center>,\n        dataIndex: 'requiredQuantity',\n        key: 'requiredQuantity',\n        width: 100,\n        render: value => <center>{value}</center>\n      },\n      {\n        title: <center>SL hiện có</center>,\n        dataIndex: 'availableQuantity',\n        key: 'availableQuantity',\n        width: 100,\n        render: value => <center>{value}</center>\n      },\n    ];\n\n    return (\n      <div className=\"importing-request-dialog\">\n        <Modal\n          className=\"importing-request-dialog__content\"\n          title={\n            <div className=\"importing-request-dialog__content__title\">\n              <ExclamationCircleFilled className=\"importing-request-dialog__content__title__icon\" />\n              <span className=\"importing-request-dialog__content__title__text\">Sản phẩm không đủ</span>\n            </div>\n          }\n          visible={this.state.isVisible}\n          footer={null}\n          onCancel={() => {\n            this.setDialogVisible(false);\n            this.props.setLackingItemsDialogVisible(false);\n          }}\n          maskClosable={false}\n        >\n          <Table\n            dataSource={lackingItems}\n            columns={columns}\n            pagination={false}\n            scroll={{ y: 300 }}\n          />\n          <div className=\"importing-request-dialog__content__btn-send-request\">\n            <Button\n              className=\"importing-request-dialog__content__btn-send-request__btn\"\n              type=\"primary\"\n              shape=\"round\"\n              onClick={() => this.sendImportingRequest()}\n            >\n              Gửi yêu cầu nhập hàng\n            </Button>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(ImportingRequestDialog));"]},"metadata":{},"sourceType":"module"}