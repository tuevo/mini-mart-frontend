{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/GoogleMap/GoogleMap.js\";\nimport React, { Component } from 'react';\nimport Geocode from \"react-geocode\";\nimport GoogleMapReact from 'google-map-react';\nconst geocodeParams = {\n  apiKey: 'AIzaSyDTkNdUuexN_PZOKtezyqWdO-g3-ewhHiQ',\n  language: 'vn',\n  region: 'Vietnam'\n};\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  style: {\n    color: 'white',\n    background: 'grey',\n    padding: '15px 10px',\n    display: 'inline-flex',\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '100%',\n    transform: 'translate(-50%, -50%)'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, text);\n\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      location: {}\n    };\n  }\n\n  async getAddressText(longitude, latitude) {\n    try {\n      const res = await Geocode.fromLatLng(longitude, latitude, geocodeParams.apiKey, geocodeParams.language, geocodeParams.region);\n      return res.results[0].formatted_address;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async getAddressLocation(address) {\n    try {\n      const res = await Geocode.fromAddress(address, geocodeParams.apiKey, geocodeParams.language, geocodeParams.region);\n      return res.results[0].geometry.location;\n    } catch (error) {\n      return {};\n    }\n  }\n\n  async componentDidMount() {\n    const address = await this.getAddressText(\"10.777919\", \"106.691867\");\n    const location = await this.getAddressLocation('31 Võ Văn Tần, Phường 6, Quận 3');\n    this.setState({\n      address,\n      location\n    });\n  }\n\n  render() {\n    const {\n      location,\n      address\n    } = this.state;\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%I',\n        height: 250\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(GoogleMapReact, {\n      defaultCenter: this.props.center,\n      defaultZoom: this.props.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(AnyReactComponent, {\n      lat: location.lat,\n      lng: location.lng,\n      text: address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n\n}\nGoogleMap.defaultProps = {\n  center: {\n    lat: 59.95,\n    lng: 30.33\n  },\n  zoom: 11\n};","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/GoogleMap/GoogleMap.js"],"names":["React","Component","Geocode","GoogleMapReact","geocodeParams","apiKey","language","region","AnyReactComponent","text","color","background","padding","display","textAlign","alignItems","justifyContent","borderRadius","transform","GoogleMap","constructor","props","state","address","location","getAddressText","longitude","latitude","res","fromLatLng","results","formatted_address","error","getAddressLocation","fromAddress","geometry","componentDidMount","setState","render","width","height","center","zoom","lat","lng","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,yCADY;AAEpBC,EAAAA,QAAQ,EAAE,IAFU;AAGpBC,EAAAA,MAAM,EAAE;AAHY,CAAtB;;AAMA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACxB;AAAK,EAAA,KAAK,EAAE;AACVC,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,UAAU,EAAE,MAFF;AAGVC,IAAAA,OAAO,EAAE,WAHC;AAIVC,IAAAA,OAAO,EAAE,aAJC;AAKVC,IAAAA,SAAS,EAAE,QALD;AAMVC,IAAAA,UAAU,EAAE,QANF;AAOVC,IAAAA,cAAc,EAAE,QAPN;AAQVC,IAAAA,YAAY,EAAE,MARJ;AASVC,IAAAA,SAAS,EAAE;AATD,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAWGT,IAXH,CADF;;AAgBA,eAAe,MAAMU,SAAN,SAAwBlB,SAAxB,CAAkC;AAM/CmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAED,QAAMC,cAAN,CAAqBC,SAArB,EAAgCC,QAAhC,EAA0C;AACxC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAM1B,OAAO,CAAC2B,UAAR,CAChBH,SADgB,EAEhBC,QAFgB,EAGhBvB,aAAa,CAACC,MAHE,EAIhBD,aAAa,CAACE,QAJE,EAKhBF,aAAa,CAACG,MALE,CAAlB;AAOA,aAAOqB,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeC,iBAAtB;AACD,KATD,CASE,OAAOC,KAAP,EAAc;AACd,aAAO,IAAP;AACD;AACF;;AAED,QAAMC,kBAAN,CAAyBV,OAAzB,EAAkC;AAChC,QAAI;AACF,YAAMK,GAAG,GAAG,MAAM1B,OAAO,CAACgC,WAAR,CAChBX,OADgB,EAEhBnB,aAAa,CAACC,MAFE,EAGhBD,aAAa,CAACE,QAHE,EAIhBF,aAAa,CAACG,MAJE,CAAlB;AAMA,aAAOqB,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeK,QAAf,CAAwBX,QAA/B;AACD,KARD,CAQE,OAAOQ,KAAP,EAAc;AACd,aAAO,EAAP;AACD;AACF;;AAED,QAAMI,iBAAN,GAA0B;AACxB,UAAMb,OAAO,GAAG,MAAM,KAAKE,cAAL,CAAoB,WAApB,EAAiC,YAAjC,CAAtB;AACA,UAAMD,QAAQ,GAAG,MAAM,KAAKS,kBAAL,CAAwB,iCAAxB,CAAvB;AACA,SAAKI,QAAL,CAAc;AACZd,MAAAA,OADY;AAEZC,MAAAA;AAFY,KAAd;AAID;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAwB,KAAKD,KAAnC;AACA,WACE;AAAK,MAAA,KAAK,EAAE;AAAEiB,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,aAAa,EAAE,KAAKnB,KAAL,CAAWoB,MAD5B;AAEE,MAAA,WAAW,EAAE,KAAKpB,KAAL,CAAWqB,IAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,iBAAD;AACE,MAAA,GAAG,EAAElB,QAAQ,CAACmB,GADhB;AAEE,MAAA,GAAG,EAAEnB,QAAQ,CAACoB,GAFhB;AAGE,MAAA,IAAI,EAAErB,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF;AAcD;;AApE8C;AAA5BJ,S,CACZ0B,Y,GAAe;AACpBJ,EAAAA,MAAM,EAAE;AAAEE,IAAAA,GAAG,EAAE,KAAP;AAAcC,IAAAA,GAAG,EAAE;AAAnB,GADY;AAEpBF,EAAAA,IAAI,EAAE;AAFc,C","sourcesContent":["import React, { Component } from 'react';\nimport Geocode from \"react-geocode\";\nimport GoogleMapReact from 'google-map-react';\n\nconst geocodeParams = {\n  apiKey: 'AIzaSyDTkNdUuexN_PZOKtezyqWdO-g3-ewhHiQ',\n  language: 'vn',\n  region: 'Vietnam'\n}\n\nconst AnyReactComponent = ({ text }) => (\n  <div style={{\n    color: 'white',\n    background: 'grey',\n    padding: '15px 10px',\n    display: 'inline-flex',\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '100%',\n    transform: 'translate(-50%, -50%)'\n  }}>\n    {text}\n  </div>\n);\n\nexport default class GoogleMap extends Component {\n  static defaultProps = {\n    center: { lat: 59.95, lng: 30.33 },\n    zoom: 11\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      location: {}\n    }\n  }\n\n  async getAddressText(longitude, latitude) {\n    try {\n      const res = await Geocode.fromLatLng(\n        longitude,\n        latitude,\n        geocodeParams.apiKey,\n        geocodeParams.language,\n        geocodeParams.region\n      );\n      return res.results[0].formatted_address;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async getAddressLocation(address) {\n    try {\n      const res = await Geocode.fromAddress(\n        address,\n        geocodeParams.apiKey,\n        geocodeParams.language,\n        geocodeParams.region\n      );\n      return res.results[0].geometry.location;\n    } catch (error) {\n      return {};\n    }\n  }\n\n  async componentDidMount() {\n    const address = await this.getAddressText(\"10.777919\", \"106.691867\");\n    const location = await this.getAddressLocation('31 Võ Văn Tần, Phường 6, Quận 3');\n    this.setState({\n      address,\n      location\n    });\n  }\n\n  render() {\n    const { location, address } = this.state;\n    return (\n      <div style={{ width: '100%I', height: 250 }}>\n        <GoogleMapReact\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n        >\n          <AnyReactComponent\n            lat={location.lat}\n            lng={location.lng}\n            text={address}\n          />\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}