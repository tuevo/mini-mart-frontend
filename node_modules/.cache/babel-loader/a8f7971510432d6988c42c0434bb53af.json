{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/BtnAddWorkShift/BtnAddWorkShift.js\";\nimport React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nimport { Modal, Button, Tooltip, TimePicker, Row, Col, message } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons'; // import { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\n\nimport './BtnAddWorkShift.style.scss';\nimport moment, { min } from 'moment';\nconst format = 'HH:mm';\n\nclass BtnAddWorkShift extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false,\n      startTime: null,\n      endTime: null\n    };\n  }\n\n  setModalVisible(isVisible) {\n    this.setState({\n      isVisible\n    });\n  }\n\n  onOK() {\n    const {\n      startTime,\n      endTime\n    } = this.state;\n\n    if (!startTime || !endTime) {\n      message.error('Vui lòng chọn đầy đủ các mốc thời gian');\n      return;\n    }\n  }\n\n  onCancel() {\n    this.setModalVisible(false);\n  }\n\n  onChangeTimePicker(fieldName, e) {\n    const selectedTime = new Date(e);\n    const hours = selectedTime.getHours();\n    const mins = selectedTime.getMinutes();\n    const {\n      selectedWorkDay\n    } = this.props;\n    const {\n      workDayInMonth,\n      workMonth,\n      workYear\n    } = selectedWorkDay;\n    const workShiftTime = new Date(workYear, workMonth - 1, workDayInMonth, hours, mins);\n\n    switch (fieldName) {\n      case 'startTime':\n        this.setState({\n          startTime: workShiftTime\n        });\n        break;\n\n      case 'startTime':\n        this.setState({\n          endTime: workShiftTime\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"add-work-shift-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm ca l\\xE0m vi\\u1EC7c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setModalVisible(true),\n      className: \"add-work-shift-dialog__btn-open\",\n      type: \"link\",\n      icon: React.createElement(PlusCircleFilled, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      title: `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? moment(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') + ' | Thêm ca làm việc trong ngày' : ''}`,\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOK(),\n      onCancel: () => this.onCancel(),\n      okText: \"Th\\xEAm\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add-work-shift-dialog__time-picker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Row, {\n      align: \"center\",\n      className: \"add-work-shift-dialog__time-picker__time-selection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      className: \"add-work-shift-dialog__time-picker__time-selection__label\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"B\\u1EAFt \\u0111\\u1EA7u\")), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(TimePicker, {\n      placeholder: \"Ch\\u1ECDn m\\u1ED1c th\\u1EDDi gian\",\n      format: format,\n      onChange: e => this.onChangeTimePicker('startTime', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      align: \"center\",\n      className: \"add-work-shift-dialog__time-picker__time-selection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      className: \"add-work-shift-dialog__time-picker__time-selection__label\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"K\\u1EBFt th\\xFAc\")), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(TimePicker, {\n      placeholder: \"Ch\\u1ECDn m\\u1ED1c th\\u1EDDi gian\",\n      format: format,\n      onChange: e => this.onChangeTimePicker('endTime', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withCookies(BtnAddWorkShift);","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/BtnAddWorkShift/BtnAddWorkShift.js"],"names":["React","Component","withCookies","Modal","Button","Tooltip","TimePicker","Row","Col","message","PlusCircleFilled","moment","min","format","BtnAddWorkShift","constructor","props","state","isVisible","startTime","endTime","setModalVisible","setState","onOK","error","onCancel","onChangeTimePicker","fieldName","e","selectedTime","Date","hours","getHours","mins","getMinutes","selectedWorkDay","workDayInMonth","workMonth","workYear","workShiftTime","render","workSchedules","selectedWorkSchedule","selectedWorkShift","workWeekDay"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nimport { Modal, Button, Tooltip, TimePicker, Row, Col, message } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\n// import { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\nimport './BtnAddWorkShift.style.scss';\nimport moment, { min } from 'moment';\n\nconst format = 'HH:mm';\n\nclass BtnAddWorkShift extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false,\n      startTime: null,\n      endTime: null\n    }\n  }\n\n  setModalVisible(isVisible) {\n    this.setState({ isVisible });\n  }\n\n  onOK() {\n    const { startTime, endTime } = this.state;\n    if (!startTime || !endTime) {\n      message.error('Vui lòng chọn đầy đủ các mốc thời gian');\n      return;\n    }\n  }\n\n  onCancel() {\n    this.setModalVisible(false);\n  }\n\n  onChangeTimePicker(fieldName, e) {\n    const selectedTime = new Date(e);\n    const hours = selectedTime.getHours();\n    const mins = selectedTime.getMinutes();\n\n    const { selectedWorkDay } = this.props;\n    const { workDayInMonth, workMonth, workYear } = selectedWorkDay;\n    const workShiftTime = new Date(workYear, workMonth - 1, workDayInMonth, hours, mins);\n    switch (fieldName) {\n      case 'startTime':\n        this.setState({ startTime: workShiftTime })\n        break;\n      case 'startTime':\n        this.setState({ endTime: workShiftTime })\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift\n    } = this.props;\n\n    return (\n      <div className=\"add-work-shift-dialog\">\n        <Tooltip placement=\"bottom\" title=\"Thêm ca làm việc\">\n          <Button\n            onClick={() => this.setModalVisible(true)}\n            className=\"add-work-shift-dialog__btn-open\"\n            type=\"link\"\n            icon={<PlusCircleFilled />} />\n        </Tooltip>\n        <Modal\n          title={`${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? moment(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') + ' | Thêm ca làm việc trong ngày' : ''}`}\n          centered\n          visible={this.state.isVisible}\n          onOk={() => this.onOK()}\n          onCancel={() => this.onCancel()}\n          okText=\"Thêm\"\n          cancelText=\"Hủy bỏ\"\n        >\n\n          <div className=\"add-work-shift-dialog__time-picker\">\n            <Row align=\"center\" className=\"add-work-shift-dialog__time-picker__time-selection\">\n              <Col span={8} className=\"add-work-shift-dialog__time-picker__time-selection__label\" align=\"center\">\n                <span>Bắt đầu</span>\n              </Col>\n              <Col span={16}>\n                <TimePicker\n                  placeholder=\"Chọn mốc thời gian\"\n                  format={format}\n                  onChange={e => this.onChangeTimePicker('startTime', e)}\n                />\n              </Col>\n            </Row>\n\n            <Row align=\"center\" className=\"add-work-shift-dialog__time-picker__time-selection\">\n              <Col span={8} className=\"add-work-shift-dialog__time-picker__time-selection__label\" align=\"center\">\n                <span>Kết thúc</span>\n              </Col>\n              <Col span={16}>\n                <TimePicker\n                  placeholder=\"Chọn mốc thời gian\"\n                  format={format}\n                  onChange={e => this.onChangeTimePicker('endTime', e)}\n                />\n              </Col>\n            </Row>\n          </div>\n\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default withCookies(BtnAddWorkShift);\n"]},"metadata":{},"sourceType":"module"}