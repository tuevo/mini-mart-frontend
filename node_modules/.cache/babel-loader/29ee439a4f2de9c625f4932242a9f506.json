{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/ProductManagement.js\";\nimport React from 'react';\nimport './ProductManagement.style.scss';\nimport { Row, Col, Input, List, Button, Table, Badge, Form, message, InputNumber, Modal, Empty, Dropdown, Menu, Select } from 'antd';\nimport { SearchOutlined, CloseOutlined, BellFilled, ExclamationCircleOutlined, EditOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport NumberFormat from 'react-number-format';\nimport ImageUploader from '../../../utilities/ImageUploader/ImageUploader';\nimport * as _ from 'lodash';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport AddProductDialog from './AddProductDialog/AddProductDialog';\nimport AddCategoryDialog from './AddCategoryDialog/AddCategoryDialog';\nimport { API } from '../../../../constants/api.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport { sortByCreatedAt } from '../../../../services/collection-sorting.service';\nimport EditCategoryDialog from './EditCategoryDialog/EditCategoryDialog';\nimport SupplierDialog from './SupplierDialog/SupplierDialog';\nconst {\n  confirm\n} = Modal;\nconst layout = {\n  labelCol: {\n    span: 9\n  }\n};\n\nclass ProductManagement extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isProductDetailsPanelShown: false,\n      selectedProduct: {},\n      selectedCategory: {},\n      products: [],\n      productSearchText: '',\n      filteredProducts: [],\n      categories: [],\n      categorySearchText: '',\n      filteredCategories: [],\n      suppliers: [],\n      isLoading: true\n    };\n    this.productDetailsFormRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  async loadData() {\n    this.props.setAppLoading(true);\n    const results = await Promise.all([this.loadCategories(), this.loadSuppliers()]);\n    this.props.setAppLoading(false);\n    const categories = results[0];\n    const suppliers = results[1];\n    let {\n      selectedCategory\n    } = this.state;\n    selectedCategory = categories.length > 0 ? { ...categories[0]\n    } : {};\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      categories,\n      filteredCategories: categories,\n      selectedCategory,\n      suppliers,\n      selectedSupplier: suppliers.length > 0 ? { ...suppliers[0]\n      } : {},\n      isLoading: false\n    });\n  }\n\n  async loadSuppliers() {\n    const res = await (await fetch(API.Importer.ProductManagement.getSuppliers, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        'token': this.props.cookies.get(COOKIE_NAMES.token)\n      },\n      signal: this.abortController.signal\n    })).json();\n\n    if (res.status !== 200) {\n      return Promise.reject(res.errors[0]);\n    }\n\n    return Promise.resolve(res.data.suppliers);\n  }\n\n  async loadCategories() {\n    const res = await (await fetch(API.Importer.ProductManagement.getCategories, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        'token': this.props.cookies.get(COOKIE_NAMES.token)\n      },\n      signal: this.abortController.signal\n    })).json();\n\n    if (res.status !== 200) {\n      return Promise.reject(res.errors[0]);\n    }\n\n    return Promise.resolve(res.data.categories);\n  }\n\n  loadCategoryProducts(category) {\n    this.onProductSearchInputChange(this.state.productSearchText, category.products);\n    this.setState({\n      products: category.products,\n      selectedCategory: { ...category\n      }\n    });\n  }\n\n  toggleProductDetailsPanel(isToggled) {\n    this.setState({\n      isProductDetailsPanelShown: isToggled\n    });\n  }\n\n  handleSelectProduct(product) {\n    this.setState({\n      selectedProduct: this.state.products.find(p => p._id === product._id)\n    });\n    this.toggleProductDetailsPanel(true);\n  }\n\n  handleSelectCategory(category) {\n    if (category._id !== this.state.selectedCategory._id) {\n      this.loadCategoryProducts(category);\n      this.setState({\n        selectedCategory: category\n      });\n    }\n  }\n\n  updateCategoryInList(category) {\n    const {\n      categories\n    } = this.state;\n\n    const index = _.findIndex(categories, p => p._id === category._id);\n\n    categories[index] = { ...category\n    };\n    const text = this.state.categorySearchText;\n    let {\n      filteredCategories,\n      selectedCategory\n    } = this.state;\n\n    if (!text) {\n      filteredCategories = [...categories];\n    } else {\n      filteredCategories = categories.filter(c => c.name.toLowerCase().includes(text.toLowerCase()));\n    }\n\n    selectedCategory = { ...category\n    };\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      filteredCategories,\n      selectedCategory,\n      categories\n    });\n  }\n\n  updateProductDetails(values) {\n    this.props.setAppLoading(true);\n    const params = { ...values\n    };\n    params.supplier = this.state.suppliers.find(s => s._id === params.supplier); //product was updated\n\n    this.props.setAppLoading(false);\n    let {\n      products,\n      selectedProduct,\n      selectedCategory\n    } = this.state;\n\n    for (const key in params) {\n      selectedProduct[key] = params[key];\n    }\n\n    const index = _.findIndex(products, p => p._id === selectedProduct._id);\n\n    if (index >= 0) {\n      products[index] = { ...selectedProduct\n      };\n    }\n\n    selectedCategory.products = products;\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      selectedProduct\n    });\n    this.toggleProductDetailsPanel(false);\n    message.success('Cập nhật sản phẩm thành công');\n  }\n\n  openRemoveProductDialog() {\n    const that = this;\n    const {\n      selectedProduct\n    } = this.state;\n    confirm({\n      title: `Bạn muốn xóa sản phẩm ${selectedProduct.name}?`,\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }),\n      content: '',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n\n      onOk() {\n        that.props.setAppLoading(true); //Product was removed\n\n        that.props.setAppLoading(false);\n        let {\n          products,\n          selectedCategory\n        } = that.state;\n        products = products.filter(p => p._id !== selectedProduct._id);\n        selectedCategory.products = products;\n        that.loadCategoryProducts(selectedCategory);\n        that.toggleProductDetailsPanel(false);\n        message.success('SUCCESS');\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  addToListProducts(product) {\n    let {\n      products,\n      selectedCategory\n    } = this.state;\n    products.push(product);\n    selectedCategory.products = products;\n    this.loadCategoryProducts(selectedCategory);\n  }\n\n  addToListCategories(category) {\n    let {\n      filteredCategories,\n      selectedCategory\n    } = this.state;\n    filteredCategories.push({ ...category\n    });\n    sortByCreatedAt(filteredCategories);\n    selectedCategory = filteredCategories.length > 0 ? filteredCategories[filteredCategories.length - 1] : {};\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      filteredCategories,\n      selectedCategory\n    });\n  }\n\n  onCategorySearchInputChange(text, categories) {\n    let {\n      filteredCategories,\n      selectedCategory\n    } = this.state;\n\n    if (!text) {\n      filteredCategories = [...categories];\n    } else {\n      filteredCategories = categories.filter(c => c.name.toLowerCase().includes(text.toLowerCase()));\n    }\n\n    selectedCategory = filteredCategories.length > 0 ? filteredCategories[0] : {};\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      filteredCategories,\n      selectedCategory,\n      categorySearchText: text\n    });\n  }\n\n  onProductSearchInputChange(text, products) {\n    let {\n      filteredProducts\n    } = this.state;\n\n    if (!text) {\n      filteredProducts = [...(products || [])];\n    } else {\n      filteredProducts = (products || []).filter(p => {\n        const keys = [...Object.keys(p)].filter(k => ['name'].includes(k));\n\n        for (const k of keys) {\n          if (p[k].toLowerCase().includes(text.toLowerCase())) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n    }\n\n    filteredProducts = (filteredProducts || []).map(p => ({ ...p,\n      key: p._id\n    }));\n    this.setState({\n      filteredProducts,\n      selectedProduct: {},\n      productSearchText: text\n    });\n  }\n\n  openRemoveCategoryDialog() {\n    const that = this;\n    const {\n      selectedCategory\n    } = this.state;\n    confirm({\n      title: `Bạn muốn xóa danh mục ${selectedCategory.name}?`,\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }),\n      content: '',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n\n      async onOk() {\n        that.props.setAppLoading(true);\n        const res = await (await fetch(API.Importer.ProductManagement.removeCategory.replace('{categoryID}', selectedCategory._id), {\n          method: 'DELETE',\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': that.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: that.abortController.signal\n        })).json();\n        that.props.setAppLoading(false);\n\n        if (res.status !== 200) {\n          message.error(res.errors[0]);\n          return;\n        }\n\n        let {\n          categories\n        } = that.state;\n        categories = categories.filter(c => c._id !== selectedCategory._id);\n        that.setState({\n          categories\n        });\n        that.onCategorySearchInputChange(that.state.categorySearchText, categories);\n        message.success(res.messages[0]);\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  addToListSuppliers(supplier) {\n    let {\n      suppliers\n    } = this.state;\n    suppliers.push(supplier);\n    this.setState({\n      suppliers\n    });\n  }\n\n  removeFromListSuppliers(supplier) {\n    let {\n      suppliers\n    } = this.state;\n    suppliers = suppliers.filter(s => s._id !== supplier._id);\n    this.setState({\n      suppliers\n    });\n  }\n\n  updateProductSupplier(newSupplier) {\n    let {\n      products\n    } = this.state;\n    products = products.map(p => {\n      if (p.supplier._id === newSupplier._id) {\n        for (const key in p.supplier) {\n          if (newSupplier[key]) {\n            p.supplier[key] = newSupplier[key];\n          }\n        }\n      }\n\n      return p;\n    });\n    this.onProductSearchInputChange(this.state.productSearchText, products);\n    this.updateSuppliers(newSupplier);\n    this.setState({\n      products\n    });\n  }\n\n  updateSuppliers(newSupplier) {\n    let {\n      suppliers\n    } = this.state;\n    suppliers = suppliers.map(s => {\n      if (s._id === newSupplier._id) {\n        for (const key in s) {\n          if (newSupplier[key]) {\n            s[key] = newSupplier[key];\n          }\n        }\n      }\n\n      return s;\n    });\n    this.setState({\n      suppliers\n    });\n  }\n\n  render() {\n    let {\n      selectedProduct,\n      suppliers\n    } = this.state;\n    const columns = [{\n      title: '',\n      dataIndex: 'image',\n      key: 'image',\n      width: 40,\n      render: text => React.createElement(\"img\", {\n        className: \"product-management__container__content__list-products__product-img\",\n        src: text,\n        alt: \"product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      })\n    }, {\n      title: 'Sản phẩm',\n      dataIndex: 'name',\n      key: 'name',\n      width: 200\n    }, {\n      title: 'Nhà cung cấp',\n      dataIndex: 'supplier',\n      key: 'supplier',\n      width: 150,\n      render: (text, record) => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, record.supplier.name)\n    }, {\n      title: 'Giá bán',\n      dataIndex: 'price',\n      key: 'price',\n      width: 120,\n      render: text => React.createElement(NumberFormat, {\n        value: Number(text),\n        displayType: \"text\",\n        thousandSeparator: true,\n        suffix: \" VN\\u0110\",\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      })\n    }, {\n      title: 'SL hiện có',\n      dataIndex: 'availableQuantity',\n      key: 'availableQuantity',\n      width: 120,\n      render: text => React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, text)\n    }, {\n      title: 'Cập nhật lần cuối',\n      dataIndex: 'updatedAt',\n      key: 'updatedAt',\n      width: 150,\n      render: text => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"L\\xFAc \", moment(text).format('HH:mm DD-MM-YYYY'))\n    }, {\n      title: 'Trạng thái',\n      dataIndex: 'status',\n      key: 'status',\n      width: 150,\n      render: (text, record) => React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, record.availableQuantity === 0 ? React.createElement(\"span\", {\n        style: {\n          color: 'crimson',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, \"H\\u1EBFt h\\xE0ng\") : 'Còn hàng')\n    }];\n    return React.createElement(\"div\", {\n      className: \"product-management animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__left-sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(Row, {\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"product-management__container__left-sidebar__title__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, \"Danh m\\u1EE5c s\\u1EA3n ph\\u1EA9m\")), React.createElement(Col, {\n      span: 4,\n      style: {\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(AddCategoryDialog, {\n      addToListCategories: category => this.addToListCategories(category),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"product-management__container__left-sidebar__search-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Input, {\n      prefix: React.createElement(SearchOutlined, {\n        style: {\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }),\n      placeholder: \"T\\xECm ki\\u1EBFm danh m\\u1EE5c...\",\n      onChange: e => this.onCategorySearchInputChange(e.target.value, this.state.categories),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"product-management__container__left-sidebar__categories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__left-sidebar__categories__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(List, {\n      size: \"small\",\n      dataSource: this.state.filteredCategories,\n      renderItem: item => React.createElement(List.Item, {\n        onClick: () => this.handleSelectCategory(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: `\n                            product-management__container__left-sidebar__categories__item \n                            ${item._id === this.state.selectedCategory._id ? 'product-management__container__left-sidebar__categories__item--selected' : ''}\n                          `,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, item.name), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, item._id === this.state.selectedCategory._id ? React.createElement(Dropdown, {\n        overlay: React.createElement(Menu, {\n          className: \"product-management__container__left-sidebar__categories__item__menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478\n          },\n          __self: this\n        }, React.createElement(Menu.Item, {\n          key: \"EDIT\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479\n          },\n          __self: this\n        }, React.createElement(EditCategoryDialog, {\n          category: this.state.selectedCategory,\n          updateCategoryInList: category => this.updateCategoryInList(category),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480\n          },\n          __self: this\n        })), React.createElement(Menu.Item, {\n          key: \"REMOVE\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"link\",\n          style: {\n            color: 'rgba(0,0,0,0.65)'\n          },\n          onClick: () => this.openRemoveCategoryDialog(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486\n          },\n          __self: this\n        }, \"X\\xF3a\"))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(EditOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      })) : React.createElement(React.Fragment, null))))),\n      locale: {\n        emptyText: React.createElement(Empty, {\n          image: Empty.PRESENTED_IMAGE_SIMPLE,\n          description: \"Kh\\xF4ng t\\xECm th\\u1EA5y\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502\n          },\n          __self: this\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(Row, {\n      align: \"middle\",\n      gutter: 40,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"product-management__container__topbar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, \"Danh m\\u1EE5c: \", React.createElement(\"span\", {\n      style: {\n        marginLeft: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, this.state.selectedCategory.name))), React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }), React.createElement(Col, {\n      span: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__topbar__features\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__topbar__features__feature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      count: 100,\n      overflowCount: 99,\n      className: \"product-management__container__topbar__features__feature__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(BellFilled, {\n      className: \"product-management__container__topbar__features__feature__icon product-management__container__topbar__features__feature__icon--bell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      span: 7,\n      style: {\n        paddingRight: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__topbar__search-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, React.createElement(Input, {\n      prefix: React.createElement(SearchOutlined, {\n        style: {\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }),\n      placeholder: \"T\\xECm ki\\u1EBFm s\\u1EA3n ph\\u1EA9m...\",\n      onChange: e => this.onProductSearchInputChange(e.target.value, this.state.selectedCategory.products),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"product-management__container__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, this.state.isProductDetailsPanelShown && Object.keys(selectedProduct).length > 0 ? React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel animated slideInRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, React.createElement(Button, {\n      shape: \"circle\",\n      icon: React.createElement(CloseOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }),\n      className: \"product-management__container__content__product-details__panel__header__btn-close\",\n      onClick: () => this.toggleProductDetailsPanel(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    })), React.createElement(Col, {\n      align: \"end\",\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      className: \"product-management__container__content__product-details__panel__header__btn-remove-product\",\n      onClick: () => this.openRemoveProductDialog(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, \"X\\xF3a s\\u1EA3n ph\\u1EA9m\")))), React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel__product-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel__product-details__img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, React.createElement(ImageUploader, {\n      defaultImageUrl: selectedProduct.image,\n      width: 150,\n      height: 150,\n      tooltipTitle: \"Nh\\u1EA5n \\u0111\\u1EC3 thay \\u0111\\u1ED5i \\u1EA3nh\",\n      tooltipPlacement: \"bottom\",\n      onFinish: imageUrl => {\n        this.productDetailsFormRef.current.setFieldsValue({\n          image: imageUrl\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel__product-details__info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, layout, {\n      ref: current => {\n        this.productDetailsFormRef.current = current;\n\n        if (this.productDetailsFormRef.current) {\n          this.productDetailsFormRef.current.setFieldsValue({\n            image: selectedProduct.image,\n            name: selectedProduct.name,\n            supplier: selectedProduct.supplier._id,\n            price: selectedProduct.price,\n            availableQuantity: selectedProduct.availableQuantity\n          });\n        }\n      },\n      onFinish: values => this.updateProductDetails(values),\n      onFinishFailed: () => message.error('Thông tin sản phẩm chưa đầy đủ'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      name: \"image\",\n      rules: [{\n        required: true\n      }],\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"name\",\n      label: \"T\\xEAn s\\u1EA3n ph\\u1EA9m\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập tên sản phẩm'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"supplier\",\n      label: \"Nh\\xE0 cung c\\u1EA5p\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, React.createElement(Select, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, suppliers.map(s => React.createElement(Select.Option, {\n      value: s._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }, s.name)))), React.createElement(Form.Item, {\n      name: \"price\",\n      label: \"Gi\\xE1 b\\xE1n (VN\\u0110)\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập giá bán'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n      parser: value => value.replace(/\\$\\s?|(,*)/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"availableQuantity\",\n      label: \"S\\u1ED1 l\\u01B0\\u1EE3ng hi\\u1EC7n c\\xF3\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập số lượng hiện có'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n      parser: value => value.replace(/\\$\\s?|(,*)/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__container__content__product-details__panel__product-details__btn-update__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"product-management__container__content__product-details__panel__product-details__btn-update__wrapper__btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669\n      },\n      __self: this\n    }, \"C\\u1EADp nh\\u1EADt s\\u1EA3n ph\\u1EA9m\")))))))) : React.createElement(React.Fragment, null), React.createElement(\"div\", {\n      className: \"product-management__container__content__list-products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }, React.createElement(Table, {\n      dataSource: [...this.state.filteredProducts],\n      columns: columns,\n      scroll: {\n        y: 545\n      },\n      pagination: false,\n      onRow: record => {\n        return {\n          onClick: () => this.handleSelectProduct(record)\n        };\n      },\n      rowClassName: record => record._id === selectedProduct._id ? 'product-management__container__content__list-products__selected-row' : '',\n      locale: {\n        emptyText: React.createElement(Empty, {\n          image: Empty.PRESENTED_IMAGE_SIMPLE,\n          description: \"Kh\\xF4ng t\\xECm th\\u1EA5y s\\u1EA3n ph\\u1EA9m\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 698\n          },\n          __self: this\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"product-management__container__content__list-products__bottom-toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    })), !this.state.isLoading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    }, React.createElement(AddProductDialog, {\n      selectedCategory: { ...this.state.selectedCategory\n      },\n      addToListProducts: product => this.addToListProducts(product),\n      suppliers: [...suppliers],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }), React.createElement(SupplierDialog, {\n      suppliers: [...suppliers],\n      addToListSuppliers: supplier => this.addToListSuppliers(supplier),\n      removeFromListSuppliers: supplier => this.removeFromListSuppliers(supplier),\n      updateProductSupplier: supplier => this.updateProductSupplier(supplier),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    })) : React.createElement(React.Fragment, null))))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(ProductManagement));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/ProductManagement.js"],"names":["React","Row","Col","Input","List","Button","Table","Badge","Form","message","InputNumber","Modal","Empty","Dropdown","Menu","Select","SearchOutlined","CloseOutlined","BellFilled","ExclamationCircleOutlined","EditOutlined","moment","NumberFormat","ImageUploader","_","withCookies","connect","actions","AddProductDialog","AddCategoryDialog","API","PageBase","COOKIE_NAMES","sortByCreatedAt","EditCategoryDialog","SupplierDialog","confirm","layout","labelCol","span","ProductManagement","constructor","props","state","isProductDetailsPanelShown","selectedProduct","selectedCategory","products","productSearchText","filteredProducts","categories","categorySearchText","filteredCategories","suppliers","isLoading","productDetailsFormRef","createRef","componentDidMount","loadData","setAppLoading","results","Promise","all","loadCategories","loadSuppliers","length","loadCategoryProducts","setState","selectedSupplier","res","fetch","Importer","getSuppliers","method","headers","cookies","get","token","signal","abortController","json","status","reject","errors","resolve","data","getCategories","category","onProductSearchInputChange","toggleProductDetailsPanel","isToggled","handleSelectProduct","product","find","p","_id","handleSelectCategory","updateCategoryInList","index","findIndex","text","filter","c","name","toLowerCase","includes","updateProductDetails","values","params","supplier","s","key","success","openRemoveProductDialog","that","title","icon","content","okText","okType","cancelText","onOk","onCancel","addToListProducts","push","addToListCategories","onCategorySearchInputChange","keys","Object","k","map","openRemoveCategoryDialog","removeCategory","replace","error","messages","addToListSuppliers","removeFromListSuppliers","updateProductSupplier","newSupplier","updateSuppliers","render","columns","dataIndex","width","record","Number","fontWeight","format","availableQuantity","color","textAlign","marginRight","e","target","value","item","emptyText","PRESENTED_IMAGE_SIMPLE","marginLeft","paddingRight","image","imageUrl","current","setFieldsValue","price","required","display","y","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ProductManagement.style.scss';\nimport { Row, Col, Input, List, Button, Table, Badge, Form, message, InputNumber, Modal, Empty, Dropdown, Menu, Select } from 'antd';\nimport { SearchOutlined, CloseOutlined, BellFilled, ExclamationCircleOutlined, EditOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport NumberFormat from 'react-number-format';\nimport ImageUploader from '../../../utilities/ImageUploader/ImageUploader';\nimport * as _ from 'lodash';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport AddProductDialog from './AddProductDialog/AddProductDialog';\nimport AddCategoryDialog from './AddCategoryDialog/AddCategoryDialog';\nimport { API } from '../../../../constants/api.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport { sortByCreatedAt } from '../../../../services/collection-sorting.service';\nimport EditCategoryDialog from './EditCategoryDialog/EditCategoryDialog';\nimport SupplierDialog from './SupplierDialog/SupplierDialog';\n\nconst { confirm } = Modal;\n\nconst layout = {\n  labelCol: { span: 9 },\n};\n\nclass ProductManagement extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isProductDetailsPanelShown: false,\n      selectedProduct: {},\n      selectedCategory: {},\n      products: [],\n      productSearchText: '',\n      filteredProducts: [],\n      categories: [],\n      categorySearchText: '',\n      filteredCategories: [],\n      suppliers: [],\n      isLoading: true\n    }\n\n    this.productDetailsFormRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  async loadData() {\n    this.props.setAppLoading(true);\n    const results = await Promise.all([\n      this.loadCategories(),\n      this.loadSuppliers()\n    ]);\n\n    this.props.setAppLoading(false);\n    const categories = results[0];\n    const suppliers = results[1];\n    let { selectedCategory } = this.state;\n\n    selectedCategory = categories.length > 0 ? { ...categories[0] } : {};\n\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      categories,\n      filteredCategories: categories,\n      selectedCategory,\n      suppliers,\n      selectedSupplier: suppliers.length > 0 ? { ...suppliers[0] } : {},\n      isLoading: false\n    });\n  }\n\n  async loadSuppliers() {\n    const res = await (\n      await fetch(\n        API.Importer.ProductManagement.getSuppliers,\n        {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': this.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: this.abortController.signal\n        }\n      )\n    ).json();\n\n    if (res.status !== 200) {\n      return Promise.reject(res.errors[0]);\n    }\n\n    return Promise.resolve(res.data.suppliers);\n  }\n\n  async loadCategories() {\n    const res = await (\n      await fetch(\n        API.Importer.ProductManagement.getCategories,\n        {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': this.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: this.abortController.signal\n        }\n      )\n    ).json();\n\n    if (res.status !== 200) {\n      return Promise.reject(res.errors[0]);\n    }\n\n    return Promise.resolve(res.data.categories);\n  }\n\n  loadCategoryProducts(category) {\n    this.onProductSearchInputChange(this.state.productSearchText, category.products);\n    this.setState({ products: category.products, selectedCategory: { ...category } });\n  }\n\n  toggleProductDetailsPanel(isToggled) {\n    this.setState({ isProductDetailsPanelShown: isToggled });\n  }\n\n  handleSelectProduct(product) {\n    this.setState({ selectedProduct: this.state.products.find(p => p._id === product._id) });\n    this.toggleProductDetailsPanel(true);\n  }\n\n  handleSelectCategory(category) {\n    if (category._id !== this.state.selectedCategory._id) {\n      this.loadCategoryProducts(category);\n      this.setState({ selectedCategory: category });\n    }\n  }\n\n  updateCategoryInList(category) {\n    const { categories } = this.state;\n    const index = _.findIndex(categories, p => p._id === category._id);\n    categories[index] = { ...category };\n\n    const text = this.state.categorySearchText;\n    let { filteredCategories, selectedCategory } = this.state;\n    if (!text) {\n      filteredCategories = [...categories];\n    } else {\n      filteredCategories = categories.filter(c => c.name.toLowerCase().includes(text.toLowerCase()));\n    }\n\n    selectedCategory = { ...category }\n    this.loadCategoryProducts(selectedCategory);\n\n    this.setState({\n      filteredCategories,\n      selectedCategory,\n      categories\n    });\n  }\n\n  updateProductDetails(values) {\n    this.props.setAppLoading(true);\n    const params = { ...values };\n    params.supplier = this.state.suppliers.find(s => s._id === params.supplier);\n\n    //product was updated\n    this.props.setAppLoading(false);\n    let { products, selectedProduct, selectedCategory } = this.state;\n    for (const key in params) {\n      selectedProduct[key] = params[key];\n    }\n\n    const index = _.findIndex(products, p => p._id === selectedProduct._id);\n    if (index >= 0) {\n      products[index] = { ...selectedProduct };\n    }\n\n    selectedCategory.products = products;\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({ selectedProduct });\n    this.toggleProductDetailsPanel(false);\n    message.success('Cập nhật sản phẩm thành công');\n  }\n\n  openRemoveProductDialog() {\n    const that = this;\n    const { selectedProduct } = this.state;\n    confirm({\n      title: `Bạn muốn xóa sản phẩm ${selectedProduct.name}?`,\n      icon: <ExclamationCircleOutlined />,\n      content: '',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n      onOk() {\n        that.props.setAppLoading(true);\n\n        //Product was removed\n        that.props.setAppLoading(false);\n        let { products, selectedCategory } = that.state;\n        products = products.filter(p => p._id !== selectedProduct._id);\n\n        selectedCategory.products = products;\n        that.loadCategoryProducts(selectedCategory);\n\n        that.toggleProductDetailsPanel(false);\n        message.success('SUCCESS');\n      },\n      onCancel() { },\n    });\n  }\n\n  addToListProducts(product) {\n    let { products, selectedCategory } = this.state;\n    products.push(product);\n    selectedCategory.products = products;\n    this.loadCategoryProducts(selectedCategory);\n  }\n\n  addToListCategories(category) {\n    let { filteredCategories, selectedCategory } = this.state;\n    filteredCategories.push({ ...category });\n    sortByCreatedAt(filteredCategories);\n    selectedCategory = filteredCategories.length > 0 ? filteredCategories[filteredCategories.length - 1] : {};\n    this.loadCategoryProducts(selectedCategory);\n    this.setState({\n      filteredCategories,\n      selectedCategory\n    });\n  }\n\n  onCategorySearchInputChange(text, categories) {\n    let { filteredCategories, selectedCategory } = this.state;\n    if (!text) {\n      filteredCategories = [...categories];\n    } else {\n      filteredCategories = categories.filter(c => c.name.toLowerCase().includes(text.toLowerCase()));\n    }\n\n    selectedCategory = filteredCategories.length > 0 ? filteredCategories[0] : {};\n    this.loadCategoryProducts(selectedCategory);\n\n    this.setState({\n      filteredCategories,\n      selectedCategory,\n      categorySearchText: text\n    });\n  }\n\n  onProductSearchInputChange(text, products) {\n    let { filteredProducts } = this.state;\n    if (!text) {\n      filteredProducts = [...(products || [])];\n    } else {\n      filteredProducts = (products || []).filter(p => {\n        const keys = [...Object.keys(p)].filter(k => ['name'].includes(k));\n        for (const k of keys) {\n          if (p[k].toLowerCase().includes(text.toLowerCase())) {\n            return true;\n          }\n        }\n        return false;\n      });\n    }\n\n    filteredProducts = (filteredProducts || []).map(p => ({ ...p, key: p._id }));\n\n    this.setState({\n      filteredProducts,\n      selectedProduct: {},\n      productSearchText: text\n    });\n  }\n\n  openRemoveCategoryDialog() {\n    const that = this;\n    const { selectedCategory } = this.state;\n    confirm({\n      title: `Bạn muốn xóa danh mục ${selectedCategory.name}?`,\n      icon: <ExclamationCircleOutlined />,\n      content: '',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n      async onOk() {\n        that.props.setAppLoading(true);\n        const res = await (\n          await fetch(\n            API.Importer.ProductManagement.removeCategory.replace('{categoryID}', selectedCategory._id),\n            {\n              method: 'DELETE',\n              headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'token': that.props.cookies.get(COOKIE_NAMES.token)\n              },\n              signal: that.abortController.signal\n            }\n          )\n        ).json();\n\n        that.props.setAppLoading(false);\n        if (res.status !== 200) {\n          message.error(res.errors[0]);\n          return;\n        }\n\n        let { categories } = that.state;\n        categories = categories.filter(c => c._id !== selectedCategory._id);\n        that.setState({ categories });\n        that.onCategorySearchInputChange(that.state.categorySearchText, categories);\n        message.success(res.messages[0]);\n      },\n      onCancel() { },\n    });\n  }\n\n  addToListSuppliers(supplier) {\n    let { suppliers } = this.state;\n    suppliers.push(supplier);\n    this.setState({ suppliers });\n  }\n\n  removeFromListSuppliers(supplier) {\n    let { suppliers } = this.state;\n    suppliers = suppliers.filter(s => s._id !== supplier._id);\n    this.setState({ suppliers });\n  }\n\n  updateProductSupplier(newSupplier) {\n    let { products } = this.state;\n    products = products.map(p => {\n      if (p.supplier._id === newSupplier._id) {\n        for (const key in p.supplier) {\n          if (newSupplier[key]) {\n            p.supplier[key] = newSupplier[key];\n          }\n        }\n      }\n      return p;\n    });\n    this.onProductSearchInputChange(this.state.productSearchText, products);\n    this.updateSuppliers(newSupplier);\n    this.setState({ products });\n  }\n\n  updateSuppliers(newSupplier) {\n    let { suppliers } = this.state;\n    suppliers = suppliers.map(s => {\n      if (s._id === newSupplier._id) {\n        for (const key in s) {\n          if (newSupplier[key]) {\n            s[key] = newSupplier[key];\n          }\n        }\n      }\n      return s;\n    });\n    this.setState({ suppliers });\n  }\n\n  render() {\n    let { selectedProduct, suppliers } = this.state;\n    const columns = [\n      {\n        title: '',\n        dataIndex: 'image',\n        key: 'image',\n        width: 40,\n        render: (text) => (\n          <img\n            className=\"product-management__container__content__list-products__product-img\"\n            src={text}\n            alt=\"product\" />\n        )\n      },\n      {\n        title: 'Sản phẩm',\n        dataIndex: 'name',\n        key: 'name',\n        width: 200\n      },\n      {\n        title: 'Nhà cung cấp',\n        dataIndex: 'supplier',\n        key: 'supplier',\n        width: 150,\n        render: (text, record) => (<span>{record.supplier.name}</span>)\n      },\n      {\n        title: 'Giá bán',\n        dataIndex: 'price',\n        key: 'price',\n        width: 120,\n        render: (text) => (\n          <NumberFormat\n            value={Number(text)}\n            displayType=\"text\"\n            thousandSeparator={true}\n            suffix=\" VNĐ\"\n            style={{ fontWeight: 'bold' }}\n          />\n        )\n      },\n      {\n        title: 'SL hiện có',\n        dataIndex: 'availableQuantity',\n        key: 'availableQuantity',\n        width: 120,\n        render: (text) => (<center>{text}</center>),\n      },\n      {\n        title: 'Cập nhật lần cuối',\n        dataIndex: 'updatedAt',\n        key: 'updatedAt',\n        width: 150,\n        render: (text) => (<span>Lúc {moment(text).format('HH:mm DD-MM-YYYY')}</span>)\n      },\n      {\n        title: 'Trạng thái',\n        dataIndex: 'status',\n        key: 'status',\n        width: 150,\n        render: (text, record) => (<center>\n          {record.availableQuantity === 0 ? (\n            <span style={{ color: 'crimson', fontWeight: 'bold' }}>Hết hàng</span>\n          ) : 'Còn hàng'}\n        </center>)\n      }\n    ];\n\n    return (\n      <div className=\"product-management animated fadeIn\">\n\n        <div className=\"product-management__container\">\n          <Row>\n            <Col span={4}>\n              <div className=\"product-management__container__left-sidebar\">\n                <div className=\"product-management__container__left-sidebar__title\">\n                  <Row align=\"middle\">\n                    <Col span={20}>\n                      <span className=\"product-management__container__left-sidebar__title__text\">\n                        Danh mục sản phẩm\n                      </span>\n                    </Col>\n                    <Col span={4} style={{ textAlign: 'right' }}>\n                      <AddCategoryDialog\n                        addToListCategories={category => this.addToListCategories(category)}\n                      />\n                    </Col>\n                  </Row>\n                </div>\n                <div className=\"product-management__container__left-sidebar__search-box\">\n                  <Input\n                    prefix={<SearchOutlined style={{ marginRight: 5 }} />}\n                    placeholder=\"Tìm kiếm danh mục...\"\n                    onChange={e => this.onCategorySearchInputChange(e.target.value, this.state.categories)}\n                  />\n                </div>\n                <div className=\"product-management__container__left-sidebar__categories\">\n                  <div className=\"product-management__container__left-sidebar__categories__wrapper\">\n                    <List\n                      size=\"small\"\n                      dataSource={this.state.filteredCategories}\n                      renderItem={(item) => (\n                        <List.Item onClick={() => this.handleSelectCategory(item)}>\n                          <div className={`\n                            product-management__container__left-sidebar__categories__item \n                            ${item._id === this.state.selectedCategory._id ? 'product-management__container__left-sidebar__categories__item--selected' : ''}\n                          `}>\n                            <Row>\n                              <Col span={22}>{item.name}</Col>\n                              <Col span={2}>{item._id === this.state.selectedCategory._id ? (\n                                <Dropdown overlay={\n                                  <Menu className=\"product-management__container__left-sidebar__categories__item__menu\">\n                                    <Menu.Item key=\"EDIT\">\n                                      <EditCategoryDialog\n                                        category={this.state.selectedCategory}\n                                        updateCategoryInList={category => this.updateCategoryInList(category)}\n                                      />\n                                    </Menu.Item>\n                                    <Menu.Item key=\"REMOVE\">\n                                      <Button\n                                        type=\"link\"\n                                        style={{ color: 'rgba(0,0,0,0.65)' }}\n                                        onClick={() => this.openRemoveCategoryDialog()}>\n                                        Xóa</Button>\n                                    </Menu.Item>\n                                  </Menu>\n                                }>\n                                  <EditOutlined />\n                                </Dropdown>\n                              ) : <></>}\n                              </Col>\n                            </Row>\n                          </div>\n                        </List.Item>\n                      )}\n                      locale={{ emptyText: (<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Không tìm thấy\" />) }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Col>\n            <Col span={20}>\n              <div className=\"product-management__container__topbar\">\n                <Row align=\"middle\" gutter={40}>\n                  <Col span={8}>\n                    <h3 className=\"product-management__container__topbar__title\">\n                      Danh mục: <span style={{ marginLeft: 5 }}>{this.state.selectedCategory.name}</span>\n                    </h3>\n                  </Col>\n                  <Col span={8}>\n                    {/* <div className=\"product-management__container__topbar__supplier-select\">\n                      <span className=\"product-management__container__topbar__supplier-select__label\">Nhà cung cấp</span>\n                      <Select\n                        defaultValue={!this.state.isLoading ? this.state.selectedSupplier._id : ''}\n                        onChange={e => console.log(e)}\n                      >\n                        {suppliers.map(s => (\n                          <Select.Option value={s._id} key={s._id}>{s.name}</Select.Option>\n                        ))}\n                      </Select>\n                    </div> */}\n                  </Col>\n                  <Col span={1}>\n                    <div className=\"product-management__container__topbar__features\">\n                      <div className=\"product-management__container__topbar__features__feature\">\n                        <Badge count={100} overflowCount={99} className=\"product-management__container__topbar__features__feature__label\">\n                          <BellFilled className=\"product-management__container__topbar__features__feature__icon product-management__container__topbar__features__feature__icon--bell\" />\n                        </Badge>\n                      </div>\n                    </div>\n                  </Col>\n                  <Col span={7} style={{ paddingRight: 0 }}>\n                    <div className=\"product-management__container__topbar__search-box\">\n                      <Input\n                        prefix={<SearchOutlined style={{ marginRight: 5 }} />}\n                        placeholder=\"Tìm kiếm sản phẩm...\"\n                        onChange={e => this.onProductSearchInputChange(e.target.value, this.state.selectedCategory.products)}\n                      />\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n              <div className=\"product-management__container__content\">\n                {this.state.isProductDetailsPanelShown && Object.keys(selectedProduct).length > 0 ? (\n                  <div className=\"product-management__container__content__product-details\">\n                    <div className=\"product-management__container__content__product-details__panel animated slideInRight\">\n                      <div className=\"product-management__container__content__product-details__panel__header\">\n                        <Row>\n                          <Col span={4}>\n                            <Button\n                              shape=\"circle\"\n                              icon={<CloseOutlined />}\n                              className=\"product-management__container__content__product-details__panel__header__btn-close\"\n                              onClick={() => this.toggleProductDetailsPanel(false)}\n                            />\n                          </Col>\n                          <Col align=\"end\" span={20}>\n                            <Button\n                              type=\"link\"\n                              className=\"product-management__container__content__product-details__panel__header__btn-remove-product\"\n                              onClick={() => this.openRemoveProductDialog()}\n                            >\n                              Xóa sản phẩm\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                      <div className=\"product-management__container__content__product-details__panel__product-details\">\n                        <div className=\"product-management__container__content__product-details__panel__product-details__img\">\n                          <ImageUploader\n                            defaultImageUrl={selectedProduct.image}\n                            width={150}\n                            height={150}\n                            tooltipTitle=\"Nhấn để thay đổi ảnh\"\n                            tooltipPlacement=\"bottom\"\n                            onFinish={imageUrl => {\n                              this.productDetailsFormRef.current.setFieldsValue({\n                                image: imageUrl\n                              });\n                            }}\n                          />\n                        </div>\n                        <div className=\"product-management__container__content__product-details__panel__product-details__info\">\n                          <Form\n                            {...layout}\n                            ref={current => {\n                              this.productDetailsFormRef.current = current;\n                              if (this.productDetailsFormRef.current) {\n                                this.productDetailsFormRef.current.setFieldsValue({\n                                  image: selectedProduct.image,\n                                  name: selectedProduct.name,\n                                  supplier: selectedProduct.supplier._id,\n                                  price: selectedProduct.price,\n                                  availableQuantity: selectedProduct.availableQuantity\n                                });\n                              }\n                            }}\n                            onFinish={values => this.updateProductDetails(values)}\n                            onFinishFailed={() => message.error('Thông tin sản phẩm chưa đầy đủ')}\n                          >\n\n                            <Form.Item name=\"image\" rules={[{ required: true }]} style={{ display: 'none' }}>\n                              <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                              name=\"name\"\n                              label=\"Tên sản phẩm\"\n                              rules={[\n                                {\n                                  required: true,\n                                  message: 'Vui lòng nhập tên sản phẩm'\n                                }\n                              ]}\n                            >\n                              <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                              name=\"supplier\"\n                              label=\"Nhà cung cấp\"\n                              rules={[{ required: true }]}\n                            >\n                              <Select>\n                                {suppliers.map(s => (<Select.Option value={s._id}>{s.name}</Select.Option>))}\n                              </Select>\n                            </Form.Item>\n\n                            <Form.Item\n                              name=\"price\"\n                              label=\"Giá bán (VNĐ)\"\n                              rules={[\n                                {\n                                  required: true,\n                                  message: 'Vui lòng nhập giá bán'\n                                }\n                              ]}\n                            >\n                              <InputNumber\n                                formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                              />\n                            </Form.Item>\n\n                            <Form.Item\n                              name=\"availableQuantity\"\n                              label=\"Số lượng hiện có\"\n                              rules={[\n                                {\n                                  required: true,\n                                  message: 'Vui lòng nhập số lượng hiện có'\n                                }\n                              ]}\n                            >\n                              <InputNumber\n                                formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                              />\n                            </Form.Item>\n\n                            <Form.Item>\n                              <div className=\"product-management__container__content__product-details__panel__product-details__btn-update__wrapper\">\n                                <Button\n                                  type=\"primary\"\n                                  htmlType=\"submit\"\n                                  className=\"product-management__container__content__product-details__panel__product-details__btn-update__wrapper__btn\"\n                                >\n                                  Cập nhật sản phẩm\n                                </Button>\n                              </div>\n                            </Form.Item>\n\n                          </Form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : <></>}\n                <div className=\"product-management__container__content__list-products\">\n                  <Table\n                    dataSource={[...this.state.filteredProducts]}\n                    columns={columns}\n                    scroll={{ y: 545 }}\n                    pagination={false}\n                    onRow={(record) => {\n                      return {\n                        onClick: () => this.handleSelectProduct(record)\n                      }\n                    }}\n                    rowClassName={record => record._id === selectedProduct._id ?\n                      'product-management__container__content__list-products__selected-row' : ''}\n                    locale={{ emptyText: (<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Không tìm thấy sản phẩm\" />) }}\n                  />\n                  <div className=\"product-management__container__content__list-products__bottom-toolbar\"></div>\n                </div>\n\n                {!this.state.isLoading ? (\n                  <div>\n                    <AddProductDialog\n                      selectedCategory={{ ...this.state.selectedCategory }}\n                      addToListProducts={product => this.addToListProducts(product)}\n                      suppliers={[...suppliers]}\n                    />\n                    <SupplierDialog\n                      suppliers={[...suppliers]}\n                      addToListSuppliers={supplier => this.addToListSuppliers(supplier)}\n                      removeFromListSuppliers={supplier => this.removeFromListSuppliers(supplier)}\n                      updateProductSupplier={supplier => this.updateProductSupplier(supplier)}\n                    />\n                  </div>\n                ) : <></>}\n\n              </div>\n            </Col>\n          </Row>\n        </div>\n\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(ProductManagement));\n"]},"metadata":{},"sourceType":"module"}