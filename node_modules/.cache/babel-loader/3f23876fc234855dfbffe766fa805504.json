{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/WorkAssignment.js\";\nimport React from 'react';\nimport { Row, Col, Tabs, Select, List, Avatar, Button, Tooltip } from 'antd';\nimport { PlusCircleOutlined, UsergroupAddOutlined, MoreOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport USER_ROLE from '../../../../constants/user-role.constant';\nimport './WorkAssignment.style.scss';\nimport * as monent from 'moment';\nimport * as _ from 'lodash';\nimport WEEK_DAY from '../../../../constants/week-day.constant';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport { API } from '../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Option\n} = Select;\n\nclass WorkAssignment extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.loadWorkSchedules = async () => {\n      this.props.setAppLoading(true);\n      const res = await (await fetch(API.Manager.getWorkSchedules, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        },\n        signal: this.abortController.signal\n      })).json();\n      this.props.setAppLoading(false);\n      const _workSchedules = res.data.workSchedules;\n      let {\n        selectedWorkSchedule,\n        workSchedules\n      } = this.state;\n      selectedWorkSchedule = { ...selectedWorkSchedule,\n        ..._workSchedules[0]\n      };\n      workSchedules = [..._workSchedules];\n\n      for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n        for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n          if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n            const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n            let selectedWorkShift = selectedWorkDay.workShifts[0];\n            selectedWorkShift.index = 0;\n            this.setState({\n              selectedWorkDay,\n              selectedWorkShift\n            });\n            break;\n          }\n        }\n      }\n\n      this.setState({\n        selectedWorkSchedule,\n        workSchedules\n      });\n    };\n\n    this.state = {\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      workSchedules: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadWorkSchedules();\n  }\n\n  toggleTaskWorkDayPanel() {\n    const {\n      isTaskWorkDayPanelShown\n    } = this.state;\n    this.setState({\n      isTaskWorkDayPanelShown: !isTaskWorkDayPanelShown\n    });\n  }\n\n  filterWorkShiftsByDay(workShifts, day) {\n    return workShifts.filter(ws => {\n      const wsDay = new Date(ws.startTime).getDate();\n      return day === wsDay;\n    });\n  }\n\n  generateWorkDays(workSchedule) {\n    const {\n      month,\n      year,\n      workShifts\n    } = workSchedule;\n    const workDaysLength = monent(`${month}-${year}`, 'M-YYYY').daysInMonth();\n    let workDays = [];\n    let temp = [];\n    let assigners = [];\n\n    for (let i = 1; i <= workDaysLength; i++) {\n      assigners.length = 0;\n      assigners = [];\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments) assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n\n      if (i % 7 === 0) {\n        workDays.push([...temp]);\n        temp.length = 0;\n      }\n    }\n\n    temp.length = 0;\n    temp = [];\n\n    for (let i = 29; i <= workDaysLength; i++) {\n      assigners = [];\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments) assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n    }\n\n    workDays.push([...temp]);\n    return workDays;\n  }\n\n  getWeekDay(day, month, year) {\n    const weekDayNumber = monent(`${day}-${month}-${year}`, 'DD-MM-YYYY').day();\n\n    switch (weekDayNumber) {\n      case 1:\n        return WEEK_DAY.MONDAY;\n\n      case 2:\n        return WEEK_DAY.TUESDAY;\n\n      case 3:\n        return WEEK_DAY.WEDNESDAY;\n\n      case 4:\n        return WEEK_DAY.THURSDAY;\n\n      case 5:\n        return WEEK_DAY.FRIDAY;\n\n      case 6:\n        return WEEK_DAY.SATURDAY;\n\n      case 0:\n        return WEEK_DAY.SUNDAY;\n\n      default:\n        return null;\n    }\n  }\n\n  getListMonths() {\n    let months = [];\n\n    for (let i = 1; i <= 12; i++) months.push({\n      text: 'Tháng ' + i,\n      value: i\n    });\n\n    return months;\n  }\n\n  getListYears() {\n    const {\n      workSchedules\n    } = this.state;\n    return _.uniqBy(workSchedules, w => w.year).map(w => ({\n      text: 'Năm ' + w.year,\n      value: w.year\n    }));\n  }\n\n  handleSelectWorkSchedule(selectedWorkSchedule, index) {\n    selectedWorkSchedule.index = index;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let {\n            selectedWorkShift\n          } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n\n          if (selectedWorkDay.workShifts.length > 0) {\n            selectedWorkShift = selectedWorkDay.workShifts[0];\n            selectedWorkShift.index = 0;\n          } else {\n            selectedWorkShift = {};\n          }\n\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n          break;\n        }\n      }\n    }\n\n    this.setState({\n      selectedWorkSchedule\n    });\n  }\n\n  handleSelectWorkDay(row, col) {\n    const {\n      selectedWorkSchedule\n    } = this.state;\n    let {\n      selectedWorkShift\n    } = this.state;\n    const selectedWorkDay = selectedWorkSchedule.workDays[row][col];\n\n    if (selectedWorkDay.workShifts.length > 0) {\n      selectedWorkShift = selectedWorkDay.workShifts[0];\n      selectedWorkShift.index = 0;\n    } else {\n      selectedWorkShift = {};\n    }\n\n    this.setState({\n      selectedWorkDay,\n      selectedWorkShift\n    });\n  }\n\n  handleSelectWorkShift(workShift, index) {\n    workShift.index = index;\n    this.setState({\n      selectedWorkShift: workShift\n    });\n  }\n\n  render() {\n    let {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift\n    } = this.state;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n    const listYears = this.getListYears();\n    return React.createElement(\"div\", {\n      className: \"work-assignment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"work-assignment__left-sidebar\",\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"work-assignment__left-sidebar__btn-add-work-schedule\",\n      icon: React.createElement(PlusCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Th\\xEAm l\\u1ECBch l\\xE0m vi\\u1EC7c\"), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__year-selection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"N\\u0103m l\\xE0m vi\\u1EC7c\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, (listYears || []).length > 0 ? React.createElement(Select, {\n      defaultValue: listYears[0].value,\n      onChange: e => console.log(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, listYears.map((y, i) => React.createElement(Option, {\n      key: i,\n      value: y.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, y.text))) : React.createElement(React.Fragment, null))), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__list-tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Th\\xE1ng l\\xE0m vi\\u1EC7c\")), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__list-tasks__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(List, {\n      size: \"small\",\n      dataSource: workSchedules,\n      renderItem: (item, index) => {\n        return React.createElement(List.Item, {\n          className: `work-assignment__left-sidebar__list-tasks__item animated fadeIn\n                          ${index === selectedWorkSchedule.index ? 'work-assignment__left-sidebar__list-tasks__item--selected' : ''}`,\n          onClick: () => this.handleSelectWorkSchedule(item, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(Col, {\n          span: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"work-assignment__left-sidebar__list-tasks__item__task-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, \"Th\\xE1ng \", item.month))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      className: \"work-assignment__content\",\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? monent(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') : ''}`), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs work-assignment__content__task-work-day-panel__panel__main__list-work-shifts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Ca l\\xE0m vi\\u1EC7c trong ng\\xE0y\")), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm ca l\\xE0m vi\\u1EC7c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\",\n      type: \"link\",\n      icon: React.createElement(PlusCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: selectedWorkDay.workShifts,\n      renderItem: (ws, index) => React.createElement(List.Item, {\n        onClick: () => this.handleSelectWorkShift(ws, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: `\n                                animated fadeIn\n                                ${index === selectedWorkShift.index ? 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item--selected' : 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item'}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"T\\u1EEB \", monent(ws.startTime).format('HH:mm'), \" \\u0111\\u1EBFn \", monent(ws.endTime).format('HH:mm'))), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-close\",\n        type: \"link\",\n        icon: React.createElement(CloseCircleOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Chi ti\\u1EBFt ca l\\xE0m vi\\u1EC7c\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"B\\u1EAFt \\u0111\\u1EA7u\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"K\\u1EBFt th\\xFAc\"))), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, selectedWorkShift.startTime ? monent(selectedWorkShift.startTime).format('HH:mm') : ''), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, selectedWorkShift.endTime ? monent(selectedWorkShift.endTime).format('HH:mm') : '')))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Nh\\xE2n vi\\xEAn ph\\u1EE5 tr\\xE1ch (\", selectedWorkShift.workAssignments ? selectedWorkShift.workAssignments.length : 0, \")\")), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm nh\\xE2n vi\\xEAn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\",\n      type: \"link\",\n      icon: React.createElement(UsergroupAddOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: selectedWorkShift.workAssignments,\n      renderItem: wa => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__staff animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: wa.assigner.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }),\n        title: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395\n          },\n          __self: this\n        }, wa.assigner.fullname),\n        description: USER_ROLE[wa.assigner.role].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-more\",\n        type: \"link\",\n        icon: React.createElement(MoreOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, wa.description))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"work-assignment__content__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__header__dark-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"work-assignment__content__header__task-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"Th\\xE1ng \", selectedWorkSchedule.month, \" n\\u0103m \", selectedWorkSchedule.year))), React.createElement(\"div\", {\n      className: \"work-assignment__content__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"1\",\n      tabBarGutter: 50,\n      className: \"work-assignment__content__body__tabs\",\n      onChange: e => console.log(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: \"L\\u1ECBch l\\xE0m vi\\u1EC7c\",\n      key: \"1\",\n      className: \"work-assignment__content__body__tabs__work-schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, selectedWorkSchedule.workDays.map((row, iRow) => React.createElement(Row, {\n      key: iRow + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, row.map((col, iCol) => React.createElement(Col, {\n      key: `${iRow + 1}_${iCol}`,\n      span: 2,\n      className: `\n                            animated fadeIn\n                            work-assignment__content__body__tabs__work-schedule__work-day \n                            ${col.workDayInMonth === selectedWorkDay.workDayInMonth ? 'work-assignment__content__body__tabs__work-schedule__work-day--selected' : ''}\n                          `,\n      onClick: () => this.handleSelectWorkDay(iRow, iCol),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: `\n                              work-assignment__content__body__tabs__work-schedule__work-day__day-in-month\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__day-in-month--sunday' : ''}\n                            `,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, col.workDayInMonth), React.createElement(\"span\", {\n      className: `\n                              work-assignment__content__body__tabs__work-schedule__work-day__week-day\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__week-day--sunday' : ''}\n                            `,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, col.workWeekDay), React.createElement(\"div\", {\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, col.staffs.slice(0, 2).map(staff => React.createElement(Avatar, {\n      key: staff._id,\n      size: 16,\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar\",\n      src: staff.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    })), col.staffs.length > 2 ? React.createElement(\"div\", {\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar--plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, \"+\", col.staffs.slice(2).length)) : React.createElement(React.Fragment, null))))))), React.createElement(TabPane, {\n      tab: \"\\u0110\\xE3 ph\\xE2n c\\xF4ng (3)\",\n      key: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, \"Content of Tab Pane 2\"))))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(WorkAssignment));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/WorkAssignment.js"],"names":["React","Row","Col","Tabs","Select","List","Avatar","Button","Tooltip","PlusCircleOutlined","UsergroupAddOutlined","MoreOutlined","CloseCircleOutlined","USER_ROLE","monent","_","WEEK_DAY","withCookies","connect","actions","API","COOKIE_NAMES","PageBase","TabPane","Option","WorkAssignment","constructor","props","loadWorkSchedules","setAppLoading","res","fetch","Manager","getWorkSchedules","method","headers","cookies","get","token","signal","abortController","json","_workSchedules","data","workSchedules","selectedWorkSchedule","state","i","workDays","length","j","staffs","selectedWorkDay","selectedWorkShift","workShifts","index","setState","componentDidMount","toggleTaskWorkDayPanel","isTaskWorkDayPanelShown","filterWorkShiftsByDay","day","filter","ws","wsDay","Date","startTime","getDate","generateWorkDays","workSchedule","month","year","workDaysLength","daysInMonth","temp","assigners","filteredWorkShifts","wa","workAssignments","push","assigner","uniqBy","a","_id","workWeekDay","getWeekDay","workDayInMonth","workMonth","workYear","weekDayNumber","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","getListMonths","months","text","value","getListYears","w","map","handleSelectWorkSchedule","handleSelectWorkDay","row","col","handleSelectWorkShift","workShift","render","listYears","e","console","log","y","item","format","endTime","width","avatar","fullname","role","name","description","iRow","iCol","slice","staff"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col, Tabs, Select, List, Avatar, Button, Tooltip } from 'antd';\nimport { PlusCircleOutlined, UsergroupAddOutlined, MoreOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport USER_ROLE from '../../../../constants/user-role.constant';\nimport './WorkAssignment.style.scss';\nimport * as monent from 'moment';\nimport * as _ from 'lodash';\nimport WEEK_DAY from '../../../../constants/week-day.constant';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport { API } from '../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nclass WorkAssignment extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      workSchedules: []\n    }\n  }\n\n  componentDidMount() {\n    this.loadWorkSchedules();\n  }\n\n  loadWorkSchedules = async () => {\n    this.props.setAppLoading(true);\n    const res = await (await fetch(\n      API.Manager.getWorkSchedules,\n      {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        },\n        signal: this.abortController.signal\n      }\n    )).json();\n\n    this.props.setAppLoading(false);\n    const _workSchedules = res.data.workSchedules;\n    let { selectedWorkSchedule, workSchedules } = this.state;\n    selectedWorkSchedule = { ...selectedWorkSchedule, ..._workSchedules[0] };\n    workSchedules = [..._workSchedules];\n\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n          let selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n          this.setState({ selectedWorkDay, selectedWorkShift })\n          break;\n        }\n      }\n    }\n\n    this.setState({ selectedWorkSchedule, workSchedules });\n  }\n\n  toggleTaskWorkDayPanel() {\n    const { isTaskWorkDayPanelShown } = this.state;\n    this.setState({ isTaskWorkDayPanelShown: !isTaskWorkDayPanelShown });\n  }\n\n  filterWorkShiftsByDay(workShifts, day) {\n    return workShifts.filter(ws => {\n      const wsDay = new Date(ws.startTime).getDate();\n      return day === wsDay;\n    });\n  }\n\n  generateWorkDays(workSchedule) {\n    const { month, year, workShifts } = workSchedule;\n    const workDaysLength = monent(`${month}-${year}`, 'M-YYYY').daysInMonth();\n    let workDays = [];\n    let temp = [];\n    let assigners = [];\n\n    for (let i = 1; i <= workDaysLength; i++) {\n      assigners.length = 0;\n      assigners = [];\n\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments)\n          assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n\n      if (i % 7 === 0) {\n        workDays.push([...temp]);\n        temp.length = 0;\n      }\n    }\n\n    temp.length = 0;\n    temp = [];\n\n    for (let i = 29; i <= workDaysLength; i++) {\n      assigners = [];\n\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments)\n          assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n    }\n    workDays.push([...temp]);\n\n    return workDays;\n  }\n\n  getWeekDay(day, month, year) {\n    const weekDayNumber = monent(`${day}-${month}-${year}`, 'DD-MM-YYYY').day();\n    switch (weekDayNumber) {\n      case 1: return WEEK_DAY.MONDAY;\n      case 2: return WEEK_DAY.TUESDAY;\n      case 3: return WEEK_DAY.WEDNESDAY;\n      case 4: return WEEK_DAY.THURSDAY;\n      case 5: return WEEK_DAY.FRIDAY;\n      case 6: return WEEK_DAY.SATURDAY;\n      case 0: return WEEK_DAY.SUNDAY;\n      default: return null\n    }\n  }\n\n  getListMonths() {\n    let months = [];\n    for (let i = 1; i <= 12; i++)\n      months.push({\n        text: 'Tháng ' + i,\n        value: i\n      });\n    return months;\n  }\n\n  getListYears() {\n    const { workSchedules } = this.state;\n    return _.uniqBy(workSchedules, w => w.year).map(w => ({ text: 'Năm ' + w.year, value: w.year }));\n  }\n\n  handleSelectWorkSchedule(selectedWorkSchedule, index) {\n    selectedWorkSchedule.index = index;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let { selectedWorkShift } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n\n          if (selectedWorkDay.workShifts.length > 0) {\n            selectedWorkShift = selectedWorkDay.workShifts[0];\n            selectedWorkShift.index = 0;\n          } else {\n            selectedWorkShift = {}\n          }\n\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n\n          break;\n        }\n      }\n    }\n\n    this.setState({ selectedWorkSchedule });\n  }\n\n  handleSelectWorkDay(row, col) {\n    const { selectedWorkSchedule } = this.state;\n    let { selectedWorkShift } = this.state;\n    const selectedWorkDay = selectedWorkSchedule.workDays[row][col];\n\n    if (selectedWorkDay.workShifts.length > 0) {\n      selectedWorkShift = selectedWorkDay.workShifts[0];\n      selectedWorkShift.index = 0;\n    } else {\n      selectedWorkShift = {}\n    }\n\n    this.setState({\n      selectedWorkDay,\n      selectedWorkShift\n    });\n  }\n\n  handleSelectWorkShift(workShift, index) {\n    workShift.index = index;\n    this.setState({ selectedWorkShift: workShift });\n  }\n\n  render() {\n    let { workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift } = this.state;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n    const listYears = this.getListYears();\n\n    return (\n      <div className=\"work-assignment\">\n        <Row>\n          <Col className=\"work-assignment__left-sidebar\" span={4}>\n            <div>\n              <Button\n                className=\"work-assignment__left-sidebar__btn-add-work-schedule\"\n                icon={<PlusCircleOutlined />}>Thêm lịch làm việc</Button>\n\n              <div className=\"work-assignment__left-sidebar__year-selection\">\n                <div className=\"work-assignment__left-sidebar__title\">\n                  <span>Năm làm việc</span>\n                </div>\n                <div>\n                  {\n                    (listYears || []).length > 0 ? (\n                      <Select defaultValue={listYears[0].value} onChange={e => console.log(e)}>\n                        {listYears.map((y, i) => (\n                          <Option key={i} value={y.value}>{y.text}</Option>\n                        ))}\n                      </Select>\n                    ) : <></>\n                  }\n                </div>\n              </div>\n\n              <div className=\"work-assignment__left-sidebar__list-tasks\">\n\n                <div className=\"work-assignment__left-sidebar__title\">\n                  <span>Tháng làm việc</span>\n                </div>\n\n                <div className=\"work-assignment__left-sidebar__list-tasks__wrapper\">\n                  <List\n                    size=\"small\"\n                    dataSource={workSchedules}\n                    renderItem={(item, index) => {\n                      return (\n                        <List.Item\n                          className={\n                            `work-assignment__left-sidebar__list-tasks__item animated fadeIn\n                          ${index === selectedWorkSchedule.index ? 'work-assignment__left-sidebar__list-tasks__item--selected' : ''}`\n                          }\n                          onClick={() => this.handleSelectWorkSchedule(item, index)}>\n                          <Row>\n                            <Col span={24}>\n                              <span className=\"work-assignment__left-sidebar__list-tasks__item__task-name\">Tháng {item.month}</span>\n                            </Col>\n                          </Row>\n                        </List.Item>\n                      )\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </Col>\n          <Col className=\"work-assignment__content\" span={20}>\n            <div className=\"work-assignment__content__task-work-day-panel\">\n              <div className=\"work-assignment__content__task-work-day-panel__panel\">\n\n                <div className=\"work-assignment__content__task-work-day-panel__panel__main\">\n                  <h3>{\n                    `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? monent(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') : ''}`\n                  }</h3>\n\n                  <div\n                    className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs work-assignment__content__task-work-day-panel__panel__main__list-work-shifts\">\n                    <Row>\n                      <Col span={21}>\n                        <span className=\"work-assignment__content__task-work-day-panel__panel__main__title\">\n                          Ca làm việc trong ngày</span>\n                      </Col>\n                      <Col span={3}>\n                        <Tooltip placement=\"bottom\" title=\"Thêm ca làm việc\">\n                          <Button\n                            className=\"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\"\n                            type=\"link\"\n                            icon={<PlusCircleOutlined />} />\n                        </Tooltip>\n                      </Col>\n                    </Row>\n                    <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__wrapper\">\n                      <List\n                        itemLayout=\"horizontal\"\n                        dataSource={selectedWorkDay.workShifts}\n                        renderItem={(ws, index) => (\n                          <List.Item onClick={() => this.handleSelectWorkShift(ws, index)}>\n                            <Row\n                              className={`\n                                animated fadeIn\n                                ${index === selectedWorkShift.index ?\n                                  'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item--selected'\n                                  : 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item'}`}\n                            >\n                              <Col span={22}>\n                                <span>\n                                  Từ {monent(ws.startTime).format('HH:mm')} đến {monent(ws.endTime).format('HH:mm')}\n                                </span>\n                              </Col>\n                              <Col span={2}>\n                                <Button\n                                  className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-close\"\n                                  type=\"link\"\n                                  icon={<CloseCircleOutlined />} />\n                              </Col>\n                            </Row>\n                          </List.Item>\n                        )}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__details\">\n                    <h3>Chi tiết ca làm việc</h3>\n                    <Row>\n                      <Col span={8}>\n                        <ul\n                          className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--label\">\n                          <li>Bắt đầu</li>\n                          <li>Kết thúc</li>\n                        </ul>\n                      </Col>\n                      <Col span={16}>\n                        <ul\n                          className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--value\">\n                          <li>{\n                            selectedWorkShift.startTime ? monent(selectedWorkShift.startTime).format('HH:mm') : ''\n                          }</li>\n                          <li>{\n                            selectedWorkShift.endTime ? monent(selectedWorkShift.endTime).format('HH:mm') : ''\n                          }</li>\n                        </ul>\n                      </Col>\n                    </Row>\n                    <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs\">\n                      <Row>\n                        <Col span={21}>\n                          <span className=\"work-assignment__content__task-work-day-panel__panel__main__title\">\n                            Nhân viên phụ trách ({\n                              selectedWorkShift.workAssignments ? selectedWorkShift.workAssignments.length : 0\n                            })</span>\n                        </Col>\n                        <Col span={3}>\n                          <Tooltip placement=\"bottom\" title=\"Thêm nhân viên\">\n                            <Button\n                              className=\"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\"\n                              type=\"link\"\n                              icon={<UsergroupAddOutlined />} />\n                          </Tooltip>\n                        </Col>\n                      </Row>\n\n                      <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__wrapper\">\n                        <List\n                          itemLayout=\"horizontal\"\n                          dataSource={selectedWorkShift.workAssignments}\n                          renderItem={wa => (\n                            <List.Item>\n                              <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__staff animated fadeIn\">\n                                <Row style={{ width: '100%' }}>\n                                  <Col span={22}>\n                                    <List.Item.Meta\n                                      avatar={<Avatar src={wa.assigner.avatar} />}\n                                      title={<span>{wa.assigner.fullname}</span>}\n                                      description={USER_ROLE[wa.assigner.role].name}\n                                    />\n                                  </Col>\n                                  <Col span={2}>\n                                    <Button\n                                      className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-more\"\n                                      type=\"link\"\n                                      icon={<MoreOutlined />} />\n                                  </Col>\n                                </Row>\n                                <p className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__note\">\n                                  {wa.description}\n                                </p>\n                              </div>\n                            </List.Item>\n                          )}\n                        />\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"work-assignment__content__header\">\n              <div className=\"work-assignment__content__header__dark-bg\"></div>\n              <div className=\"work-assignment__content__header__task-name\">\n                <h3>Tháng {selectedWorkSchedule.month} năm {selectedWorkSchedule.year}</h3>\n              </div>\n            </div>\n            <div className=\"work-assignment__content__body\">\n              <Tabs\n                defaultActiveKey=\"1\"\n                tabBarGutter={50}\n                className=\"work-assignment__content__body__tabs\"\n                onChange={e => console.log(e)}>\n                <TabPane tab=\"Lịch làm việc\" key=\"1\" className=\"work-assignment__content__body__tabs__work-schedule\">\n                  {selectedWorkSchedule.workDays.map((row, iRow) => (\n                    <Row key={iRow + 1}>\n                      {row.map((col, iCol) => (\n                        <Col key={`${iRow + 1}_${iCol}`} span={2}\n                          className={`\n                            animated fadeIn\n                            work-assignment__content__body__tabs__work-schedule__work-day \n                            ${col.workDayInMonth === selectedWorkDay.workDayInMonth ?\n                              'work-assignment__content__body__tabs__work-schedule__work-day--selected' : ''\n                            }\n                          `}\n                          onClick={() => this.handleSelectWorkDay(iRow, iCol)}>\n                          <span\n                            className={`\n                              work-assignment__content__body__tabs__work-schedule__work-day__day-in-month\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__day-in-month--sunday' : ''}\n                            `}>{col.workDayInMonth}</span>\n                          <span\n                            className={`\n                              work-assignment__content__body__tabs__work-schedule__work-day__week-day\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__week-day--sunday' : ''}\n                            `}>{col.workWeekDay}</span>\n                          <div className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs\">\n                            {col.staffs.slice(0, 2).map(staff => (\n                              <Avatar\n                                key={staff._id}\n                                size={16}\n                                className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar\"\n                                src={staff.avatar} />))}\n                            {col.staffs.length > 2 ? (\n                              <div className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar--plus\">\n                                <span>+{col.staffs.slice(2).length}</span>\n                              </div>\n                            ) : <></>}\n                          </div>\n                        </Col>\n                      ))}\n                    </Row>\n                  ))}\n                </TabPane>\n                <TabPane tab=\"Đã phân công (3)\" key=\"2\">\n                  Content of Tab Pane 2\n                </TabPane>\n              </Tabs>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(WorkAssignment));\n"]},"metadata":{},"sourceType":"module"}