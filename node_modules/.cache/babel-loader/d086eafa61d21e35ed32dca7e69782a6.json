{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/WorkAssignment.js\";\nimport React from 'react';\nimport { Row, Col, Tabs, Select, List, Avatar, Button, Tooltip, Modal } from 'antd';\nimport { PlusCircleOutlined, UsergroupAddOutlined, MoreOutlined, CloseCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport USER_ROLE from '../../../../constants/user-role.constant';\nimport './WorkAssignment.style.scss';\nimport * as monent from 'moment';\nimport * as _ from 'lodash';\nimport WEEK_DAY from '../../../../constants/week-day.constant';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport { API } from '../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\nimport BtnAddWorkSchedule from './BtnAddWorkSchedule/BtnAddWorkSchedule';\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Option\n} = Select;\nconst {\n  confirm\n} = Modal;\n\nclass WorkAssignment extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.loadWorkSchedules = async workYear => {\n      this.props.setAppLoading(true);\n      let url = API.Manager.WorkSchedule.getWorkSchedules;\n\n      if (workYear) {\n        url += `?year=${workYear}`;\n      }\n\n      const res = await (await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        },\n        signal: this.abortController.signal\n      })).json();\n      this.props.setAppLoading(false);\n      const _workSchedules = res.data.workSchedules;\n      const {\n        availableYears\n      } = res.data;\n      let {\n        selectedWorkSchedule,\n        workSchedules\n      } = this.state;\n      selectedWorkSchedule = { ...selectedWorkSchedule,\n        ..._workSchedules[0]\n      };\n      workSchedules = [..._workSchedules];\n      this.setState({\n        selectedWorkSchedule,\n        workSchedules,\n        listWorkYears: availableYears.map(y => ({\n          text: 'Năm ' + y,\n          value: y\n        }))\n      });\n      let isWorkShiftFound = false;\n\n      for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n        for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n          if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n            let {\n              selectedWorkShift\n            } = this.state;\n            const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n            selectedWorkShift = selectedWorkDay.workShifts[0];\n            selectedWorkShift.index = 0;\n            isWorkShiftFound = true;\n            this.setState({\n              selectedWorkDay,\n              selectedWorkShift\n            });\n            break;\n          }\n        }\n      }\n\n      if (!isWorkShiftFound) {\n        const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n        const selectedWorkShift = {};\n        this.setState({\n          selectedWorkDay,\n          selectedWorkShift\n        });\n      }\n    };\n\n    this.state = {\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      selectedWorkYear: 2020,\n      workSchedules: [],\n      listWorkYears: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadWorkSchedules(2020);\n  }\n\n  toggleTaskWorkDayPanel() {\n    const {\n      isTaskWorkDayPanelShown\n    } = this.state;\n    this.setState({\n      isTaskWorkDayPanelShown: !isTaskWorkDayPanelShown\n    });\n  }\n\n  filterWorkShiftsByDay(workShifts, day) {\n    return workShifts.filter(ws => {\n      const wsDay = new Date(ws.startTime).getDate();\n      return day === wsDay;\n    });\n  }\n\n  generateWorkDays(workSchedule) {\n    const {\n      month,\n      year,\n      workShifts\n    } = workSchedule;\n    const workDaysLength = monent(`${month}-${year}`, 'M-YYYY').daysInMonth();\n    let workDays = [];\n    let temp = [];\n    let assigners = [];\n\n    for (let i = 1; i <= workDaysLength; i++) {\n      assigners.length = 0;\n      assigners = [];\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments) assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n\n      if (i % 7 === 0) {\n        workDays.push([...temp]);\n        temp.length = 0;\n      }\n    }\n\n    temp.length = 0;\n    temp = [];\n\n    for (let i = 29; i <= workDaysLength; i++) {\n      assigners = [];\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments) assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n    }\n\n    workDays.push([...temp]);\n    return workDays;\n  }\n\n  getWeekDay(day, month, year) {\n    const weekDayNumber = monent(`${day}-${month}-${year}`, 'DD-MM-YYYY').day();\n\n    switch (weekDayNumber) {\n      case 1:\n        return WEEK_DAY.MONDAY;\n\n      case 2:\n        return WEEK_DAY.TUESDAY;\n\n      case 3:\n        return WEEK_DAY.WEDNESDAY;\n\n      case 4:\n        return WEEK_DAY.THURSDAY;\n\n      case 5:\n        return WEEK_DAY.FRIDAY;\n\n      case 6:\n        return WEEK_DAY.SATURDAY;\n\n      case 0:\n        return WEEK_DAY.SUNDAY;\n\n      default:\n        return null;\n    }\n  }\n\n  getListMonths() {\n    let months = [];\n\n    for (let i = 1; i <= 12; i++) months.push({\n      text: 'Tháng ' + i,\n      value: i\n    });\n\n    return months;\n  }\n\n  handleSelectWorkSchedule(selectedWorkSchedule, index) {\n    selectedWorkSchedule.index = index;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n    let isWorkShiftFound = false;\n\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let {\n            selectedWorkShift\n          } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n          selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n          isWorkShiftFound = true;\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n          break;\n        }\n      }\n    }\n\n    if (!isWorkShiftFound) {\n      const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n      const selectedWorkShift = {};\n      this.setState({\n        selectedWorkDay,\n        selectedWorkShift\n      });\n    }\n\n    this.setState({\n      selectedWorkSchedule\n    });\n  }\n\n  handleSelectWorkDay(row, col) {\n    const {\n      selectedWorkSchedule\n    } = this.state;\n    let {\n      selectedWorkShift\n    } = this.state;\n    const selectedWorkDay = selectedWorkSchedule.workDays[row][col];\n\n    if (selectedWorkDay.workShifts.length > 0) {\n      selectedWorkShift = selectedWorkDay.workShifts[0];\n      selectedWorkShift.index = 0;\n    } else {\n      selectedWorkShift = {};\n    }\n\n    this.setState({\n      selectedWorkDay,\n      selectedWorkShift\n    });\n  }\n\n  handleSelectWorkShift(workShift, index) {\n    workShift.index = index;\n    this.setState({\n      selectedWorkShift: workShift\n    });\n  }\n\n  removeWorkShift(workShiftID) {\n    console.log(workShiftID);\n  }\n\n  removeWorkSchedule(workScheduleID) {\n    console.log(workScheduleID);\n  }\n\n  openRemoveWorkShiftConfirm(workShiftID) {\n    confirm({\n      title: 'Bạn có muốn hủy ca làm việc này?',\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }),\n      content: 'Toàn bộ nhân viên được phân công sẽ bị hủy.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n\n      onOk() {\n        console.log(workShiftID);\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  openRemoveWorkScheduleConfirm(workScheduleID) {\n    confirm({\n      title: 'Bạn có muốn hủy lịch làm việc này?',\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }),\n      content: 'Toàn bộ ca làm việc và nhân viên được phân công sẽ bị hủy.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n\n      onOk() {\n        console.log(workScheduleID);\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  handleSelectYear(year) {\n    this.setState({\n      selectedWorkYear: year\n    });\n    this.loadWorkSchedules(year);\n  }\n\n  render() {\n    let {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift,\n      listWorkYears\n    } = this.state;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n    return React.createElement(\"div\", {\n      className: \"work-assignment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"work-assignment__left-sidebar\",\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(BtnAddWorkSchedule, {\n      reloadWorkSchedules: () => this.loadWorkSchedules(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__year-selection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"N\\u0103m l\\xE0m vi\\u1EC7c\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, (listWorkYears || []).length > 0 ? React.createElement(Select, {\n      defaultValue: listWorkYears[0].value,\n      onChange: e => this.handleSelectYear(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, listWorkYears.map((y, i) => React.createElement(Option, {\n      key: i,\n      value: y.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, y.text))) : React.createElement(React.Fragment, null))), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__list-tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Th\\xE1ng l\\xE0m vi\\u1EC7c\")), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__list-tasks__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(List, {\n      size: \"small\",\n      dataSource: workSchedules,\n      renderItem: (item, index) => {\n        return React.createElement(List.Item, {\n          className: `work-assignment__left-sidebar__list-tasks__item animated fadeIn\n                          ${index === selectedWorkSchedule.index ? 'work-assignment__left-sidebar__list-tasks__item--selected' : ''}`,\n          onClick: () => this.handleSelectWorkSchedule(item, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, React.createElement(Col, {\n          span: 22,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"work-assignment__left-sidebar__list-tasks__item__task-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, \"Th\\xE1ng \", item.month)), React.createElement(Col, {\n          span: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: () => this.openRemoveWorkScheduleConfirm(item._id),\n          className: \"work-assignment__left-sidebar__list-tasks__item__btn-remove\",\n          type: \"link\",\n          icon: React.createElement(CloseCircleOutlined, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 357\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      className: \"work-assignment__content\",\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? monent(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') : ''}`), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs work-assignment__content__task-work-day-panel__panel__main__list-work-shifts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"Ca l\\xE0m vi\\u1EC7c trong ng\\xE0y\")), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm ca l\\xE0m vi\\u1EC7c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\",\n      type: \"link\",\n      icon: React.createElement(PlusCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: selectedWorkDay.workShifts,\n      renderItem: (ws, index) => React.createElement(List.Item, {\n        onClick: () => this.handleSelectWorkShift(ws, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: `\n                                animated fadeIn\n                                ${index === selectedWorkShift.index ? 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item--selected' : 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item'}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \"T\\u1EEB \", monent(ws.startTime).format('HH:mm'), \" \\u0111\\u1EBFn \", monent(ws.endTime).format('HH:mm'))), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-close\",\n        type: \"link\",\n        onClick: () => this.openRemoveWorkShiftConfirm(ws._id),\n        icon: React.createElement(CloseCircleOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"Chi ti\\u1EBFt ca l\\xE0m vi\\u1EC7c\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, \"B\\u1EAFt \\u0111\\u1EA7u\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"K\\u1EBFt th\\xFAc\"))), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, selectedWorkShift.startTime ? monent(selectedWorkShift.startTime).format('HH:mm') : ''), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, selectedWorkShift.endTime ? monent(selectedWorkShift.endTime).format('HH:mm') : '')))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, \"Nh\\xE2n vi\\xEAn ph\\u1EE5 tr\\xE1ch (\", selectedWorkShift.workAssignments ? selectedWorkShift.workAssignments.length : 0, \")\")), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm nh\\xE2n vi\\xEAn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\",\n      type: \"link\",\n      icon: React.createElement(UsergroupAddOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: selectedWorkShift.workAssignments,\n      renderItem: wa => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__staff animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: wa.assigner.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          },\n          __self: this\n        }),\n        title: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475\n          },\n          __self: this\n        }, wa.assigner.fullname),\n        description: USER_ROLE[wa.assigner.role].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-more\",\n        type: \"link\",\n        icon: React.createElement(MoreOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, wa.description))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"work-assignment__content__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__header__dark-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"work-assignment__content__header__task-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"Th\\xE1ng \", selectedWorkSchedule.month, \" n\\u0103m \", selectedWorkSchedule.year))), React.createElement(\"div\", {\n      className: \"work-assignment__content__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"1\",\n      tabBarGutter: 50,\n      className: \"work-assignment__content__body__tabs\",\n      onChange: e => console.log(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: \"L\\u1ECBch l\\xE0m vi\\u1EC7c\",\n      key: \"1\",\n      className: \"work-assignment__content__body__tabs__work-schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, selectedWorkSchedule.workDays.map((row, iRow) => React.createElement(Row, {\n      key: iRow + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, row.map((col, iCol) => React.createElement(Col, {\n      key: `${iRow + 1}_${iCol}`,\n      span: 2,\n      className: `\n                            animated fadeIn\n                            work-assignment__content__body__tabs__work-schedule__work-day \n                            ${col.workDayInMonth === selectedWorkDay.workDayInMonth ? 'work-assignment__content__body__tabs__work-schedule__work-day--selected' : ''}\n                          `,\n      onClick: () => this.handleSelectWorkDay(iRow, iCol),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: `\n                              work-assignment__content__body__tabs__work-schedule__work-day__day-in-month\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__day-in-month--sunday' : ''}\n                            `,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, col.workDayInMonth), React.createElement(\"span\", {\n      className: `\n                              work-assignment__content__body__tabs__work-schedule__work-day__week-day\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__week-day--sunday' : ''}\n                            `,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, col.workWeekDay), React.createElement(\"div\", {\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, col.staffs.slice(0, 2).map(staff => React.createElement(Avatar, {\n      key: staff._id,\n      size: 16,\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar\",\n      src: staff.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    })), col.staffs.length > 2 ? React.createElement(\"div\", {\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar--plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, \"+\", col.staffs.slice(2).length)) : React.createElement(React.Fragment, null))))))))))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(WorkAssignment));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/WorkAssignment.js"],"names":["React","Row","Col","Tabs","Select","List","Avatar","Button","Tooltip","Modal","PlusCircleOutlined","UsergroupAddOutlined","MoreOutlined","CloseCircleOutlined","ExclamationCircleOutlined","USER_ROLE","monent","_","WEEK_DAY","withCookies","connect","actions","API","COOKIE_NAMES","PageBase","BtnAddWorkSchedule","TabPane","Option","confirm","WorkAssignment","constructor","props","loadWorkSchedules","workYear","setAppLoading","url","Manager","WorkSchedule","getWorkSchedules","res","fetch","method","headers","cookies","get","token","signal","abortController","json","_workSchedules","data","workSchedules","availableYears","selectedWorkSchedule","state","setState","listWorkYears","map","y","text","value","isWorkShiftFound","i","workDays","length","j","staffs","selectedWorkShift","selectedWorkDay","workShifts","index","selectedWorkYear","componentDidMount","toggleTaskWorkDayPanel","isTaskWorkDayPanelShown","filterWorkShiftsByDay","day","filter","ws","wsDay","Date","startTime","getDate","generateWorkDays","workSchedule","month","year","workDaysLength","daysInMonth","temp","assigners","filteredWorkShifts","wa","workAssignments","push","assigner","uniqBy","a","_id","workWeekDay","getWeekDay","workDayInMonth","workMonth","weekDayNumber","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","getListMonths","months","handleSelectWorkSchedule","handleSelectWorkDay","row","col","handleSelectWorkShift","workShift","removeWorkShift","workShiftID","console","log","removeWorkSchedule","workScheduleID","openRemoveWorkShiftConfirm","title","icon","content","okText","okType","cancelText","onOk","onCancel","openRemoveWorkScheduleConfirm","handleSelectYear","render","e","item","format","endTime","width","avatar","fullname","role","name","description","iRow","iCol","slice","staff"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col, Tabs, Select, List, Avatar, Button, Tooltip, Modal } from 'antd';\nimport { PlusCircleOutlined, UsergroupAddOutlined, MoreOutlined, CloseCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport USER_ROLE from '../../../../constants/user-role.constant';\nimport './WorkAssignment.style.scss';\nimport * as monent from 'moment';\nimport * as _ from 'lodash';\nimport WEEK_DAY from '../../../../constants/week-day.constant';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport { API } from '../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\nimport BtnAddWorkSchedule from './BtnAddWorkSchedule/BtnAddWorkSchedule';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nclass WorkAssignment extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      selectedWorkYear: 2020,\n      workSchedules: [],\n      listWorkYears: [],\n    }\n  }\n\n  componentDidMount() {\n    this.loadWorkSchedules(2020);\n  }\n\n  loadWorkSchedules = async (workYear) => {\n    this.props.setAppLoading(true);\n\n    let url = API.Manager.WorkSchedule.getWorkSchedules;\n    if (workYear) {\n      url += `?year=${workYear}`;\n    }\n\n    const res = await (\n      await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        },\n        signal: this.abortController.signal\n      })\n    ).json();\n\n    this.props.setAppLoading(false);\n    const _workSchedules = res.data.workSchedules;\n    const { availableYears } = res.data;\n    let { selectedWorkSchedule, workSchedules } = this.state;\n    selectedWorkSchedule = { ...selectedWorkSchedule, ..._workSchedules[0] };\n    workSchedules = [..._workSchedules];\n\n    this.setState({\n      selectedWorkSchedule,\n      workSchedules,\n      listWorkYears: availableYears.map(y => ({ text: 'Năm ' + y, value: y }))\n    });\n\n    let isWorkShiftFound = false;\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let { selectedWorkShift } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n\n          selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n          isWorkShiftFound = true;\n\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n\n          break;\n        }\n      }\n    }\n\n    if (!isWorkShiftFound) {\n      const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n      const selectedWorkShift = {};\n      this.setState({\n        selectedWorkDay,\n        selectedWorkShift\n      })\n    }\n  }\n\n  toggleTaskWorkDayPanel() {\n    const { isTaskWorkDayPanelShown } = this.state;\n    this.setState({ isTaskWorkDayPanelShown: !isTaskWorkDayPanelShown });\n  }\n\n  filterWorkShiftsByDay(workShifts, day) {\n    return workShifts.filter(ws => {\n      const wsDay = new Date(ws.startTime).getDate();\n      return day === wsDay;\n    });\n  }\n\n  generateWorkDays(workSchedule) {\n    const { month, year, workShifts } = workSchedule;\n    const workDaysLength = monent(`${month}-${year}`, 'M-YYYY').daysInMonth();\n    let workDays = [];\n    let temp = [];\n    let assigners = [];\n\n    for (let i = 1; i <= workDaysLength; i++) {\n      assigners.length = 0;\n      assigners = [];\n\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments)\n          assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n\n      if (i % 7 === 0) {\n        workDays.push([...temp]);\n        temp.length = 0;\n      }\n    }\n\n    temp.length = 0;\n    temp = [];\n\n    for (let i = 29; i <= workDaysLength; i++) {\n      assigners = [];\n\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments)\n          assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n    }\n    workDays.push([...temp]);\n\n    return workDays;\n  }\n\n  getWeekDay(day, month, year) {\n    const weekDayNumber = monent(`${day}-${month}-${year}`, 'DD-MM-YYYY').day();\n    switch (weekDayNumber) {\n      case 1: return WEEK_DAY.MONDAY;\n      case 2: return WEEK_DAY.TUESDAY;\n      case 3: return WEEK_DAY.WEDNESDAY;\n      case 4: return WEEK_DAY.THURSDAY;\n      case 5: return WEEK_DAY.FRIDAY;\n      case 6: return WEEK_DAY.SATURDAY;\n      case 0: return WEEK_DAY.SUNDAY;\n      default: return null\n    }\n  }\n\n  getListMonths() {\n    let months = [];\n    for (let i = 1; i <= 12; i++)\n      months.push({\n        text: 'Tháng ' + i,\n        value: i\n      });\n    return months;\n  }\n\n  handleSelectWorkSchedule(selectedWorkSchedule, index) {\n    selectedWorkSchedule.index = index;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n\n    let isWorkShiftFound = false;\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let { selectedWorkShift } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n\n          selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n          isWorkShiftFound = true;\n\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n\n          break;\n        }\n      }\n    }\n\n    if (!isWorkShiftFound) {\n      const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n      const selectedWorkShift = {};\n      this.setState({\n        selectedWorkDay,\n        selectedWorkShift\n      })\n    }\n\n    this.setState({ selectedWorkSchedule });\n  }\n\n  handleSelectWorkDay(row, col) {\n    const { selectedWorkSchedule } = this.state;\n    let { selectedWorkShift } = this.state;\n    const selectedWorkDay = selectedWorkSchedule.workDays[row][col];\n\n    if (selectedWorkDay.workShifts.length > 0) {\n      selectedWorkShift = selectedWorkDay.workShifts[0];\n      selectedWorkShift.index = 0;\n    } else {\n      selectedWorkShift = {}\n    }\n\n    this.setState({\n      selectedWorkDay,\n      selectedWorkShift\n    });\n  }\n\n  handleSelectWorkShift(workShift, index) {\n    workShift.index = index;\n    this.setState({ selectedWorkShift: workShift });\n  }\n\n  removeWorkShift(workShiftID) {\n    console.log(workShiftID);\n  }\n\n  removeWorkSchedule(workScheduleID) {\n    console.log(workScheduleID);\n  }\n\n  openRemoveWorkShiftConfirm(workShiftID) {\n    confirm({\n      title: 'Bạn có muốn hủy ca làm việc này?',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Toàn bộ nhân viên được phân công sẽ bị hủy.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n      onOk() {\n        console.log(workShiftID);\n      },\n      onCancel() { },\n    });\n  }\n\n  openRemoveWorkScheduleConfirm(workScheduleID) {\n    confirm({\n      title: 'Bạn có muốn hủy lịch làm việc này?',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Toàn bộ ca làm việc và nhân viên được phân công sẽ bị hủy.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n      onOk() {\n        console.log(workScheduleID);\n      },\n      onCancel() { },\n    });\n  }\n\n  handleSelectYear(year) {\n    this.setState({ selectedWorkYear: year });\n    this.loadWorkSchedules(year);\n  }\n\n  render() {\n    let { workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift, listWorkYears } = this.state;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n\n    return (\n      <div className=\"work-assignment\">\n        <Row>\n          <Col className=\"work-assignment__left-sidebar\" span={4}>\n            <BtnAddWorkSchedule reloadWorkSchedules={() => this.loadWorkSchedules()} />\n\n            <div className=\"work-assignment__left-sidebar__year-selection\">\n              <div className=\"work-assignment__left-sidebar__title\">\n                <span>Năm làm việc</span>\n              </div>\n              <div>\n                {\n                  (listWorkYears || []).length > 0 ? (\n                    <Select defaultValue={listWorkYears[0].value} onChange={e => this.handleSelectYear(e)}>\n                      {listWorkYears.map((y, i) => (\n                        <Option key={i} value={y.value}>{y.text}</Option>\n                      ))}\n                    </Select>\n                  ) : <></>\n                }\n              </div>\n            </div>\n\n            <div className=\"work-assignment__left-sidebar__list-tasks\">\n\n              <div className=\"work-assignment__left-sidebar__title\">\n                <span>Tháng làm việc</span>\n              </div>\n\n              <div className=\"work-assignment__left-sidebar__list-tasks__wrapper\">\n                <List\n                  size=\"small\"\n                  dataSource={workSchedules}\n                  renderItem={(item, index) => {\n                    return (\n                      <List.Item\n                        className={\n                          `work-assignment__left-sidebar__list-tasks__item animated fadeIn\n                          ${index === selectedWorkSchedule.index ? 'work-assignment__left-sidebar__list-tasks__item--selected' : ''}`\n                        }\n                        onClick={() => this.handleSelectWorkSchedule(item, index)}>\n                        <Row>\n                          <Col span={22}>\n                            <span className=\"work-assignment__left-sidebar__list-tasks__item__task-name\">Tháng {item.month}</span>\n                          </Col>\n                          <Col span={2}>\n                            <Button\n                              onClick={() => this.openRemoveWorkScheduleConfirm(item._id)}\n                              className=\"work-assignment__left-sidebar__list-tasks__item__btn-remove\"\n                              type=\"link\"\n                              icon={<CloseCircleOutlined />} />\n                          </Col>\n                        </Row>\n                      </List.Item>\n                    )\n                  }}\n                />\n              </div>\n            </div>\n          </Col>\n          <Col className=\"work-assignment__content\" span={20}>\n            <div className=\"work-assignment__content__task-work-day-panel\">\n              <div className=\"work-assignment__content__task-work-day-panel__panel\">\n\n                <div className=\"work-assignment__content__task-work-day-panel__panel__main\">\n                  <h3>{\n                    `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? monent(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') : ''}`\n                  }</h3>\n\n                  <div\n                    className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs work-assignment__content__task-work-day-panel__panel__main__list-work-shifts\">\n                    <Row>\n                      <Col span={21}>\n                        <span className=\"work-assignment__content__task-work-day-panel__panel__main__title\">\n                          Ca làm việc trong ngày</span>\n                      </Col>\n                      <Col span={3}>\n                        <Tooltip placement=\"bottom\" title=\"Thêm ca làm việc\">\n                          <Button\n                            className=\"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\"\n                            type=\"link\"\n                            icon={<PlusCircleOutlined />} />\n                        </Tooltip>\n                      </Col>\n                    </Row>\n                    <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__wrapper\">\n                      <List\n                        itemLayout=\"horizontal\"\n                        dataSource={selectedWorkDay.workShifts}\n                        renderItem={(ws, index) => (\n                          <List.Item onClick={() => this.handleSelectWorkShift(ws, index)}>\n                            <Row\n                              className={`\n                                animated fadeIn\n                                ${index === selectedWorkShift.index ?\n                                  'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item--selected'\n                                  : 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item'}`}\n                            >\n                              <Col span={22}>\n                                <span>\n                                  Từ {monent(ws.startTime).format('HH:mm')} đến {monent(ws.endTime).format('HH:mm')}\n                                </span>\n                              </Col>\n                              <Col span={2}>\n                                <Button\n                                  className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-close\"\n                                  type=\"link\"\n                                  onClick={() => this.openRemoveWorkShiftConfirm(ws._id)}\n                                  icon={<CloseCircleOutlined />} />\n                              </Col>\n                            </Row>\n                          </List.Item>\n                        )}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__details\">\n                    <h3>Chi tiết ca làm việc</h3>\n                    <Row>\n                      <Col span={8}>\n                        <ul\n                          className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--label\">\n                          <li>Bắt đầu</li>\n                          <li>Kết thúc</li>\n                        </ul>\n                      </Col>\n                      <Col span={16}>\n                        <ul\n                          className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--value\">\n                          <li>{\n                            selectedWorkShift.startTime ? monent(selectedWorkShift.startTime).format('HH:mm') : ''\n                          }</li>\n                          <li>{\n                            selectedWorkShift.endTime ? monent(selectedWorkShift.endTime).format('HH:mm') : ''\n                          }</li>\n                        </ul>\n                      </Col>\n                    </Row>\n                    <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs\">\n                      <Row>\n                        <Col span={21}>\n                          <span className=\"work-assignment__content__task-work-day-panel__panel__main__title\">\n                            Nhân viên phụ trách ({\n                              selectedWorkShift.workAssignments ? selectedWorkShift.workAssignments.length : 0\n                            })</span>\n                        </Col>\n                        <Col span={3}>\n                          <Tooltip placement=\"bottom\" title=\"Thêm nhân viên\">\n                            <Button\n                              className=\"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\"\n                              type=\"link\"\n                              icon={<UsergroupAddOutlined />} />\n                          </Tooltip>\n                        </Col>\n                      </Row>\n\n                      <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__wrapper\">\n                        <List\n                          itemLayout=\"horizontal\"\n                          dataSource={selectedWorkShift.workAssignments}\n                          renderItem={wa => (\n                            <List.Item>\n                              <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__staff animated fadeIn\">\n                                <Row style={{ width: '100%' }}>\n                                  <Col span={22}>\n                                    <List.Item.Meta\n                                      avatar={<Avatar src={wa.assigner.avatar} />}\n                                      title={<span>{wa.assigner.fullname}</span>}\n                                      description={USER_ROLE[wa.assigner.role].name}\n                                    />\n                                  </Col>\n                                  <Col span={2}>\n                                    <Button\n                                      className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-more\"\n                                      type=\"link\"\n                                      icon={<MoreOutlined />} />\n                                  </Col>\n                                </Row>\n                                <p className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__note\">\n                                  {wa.description}\n                                </p>\n                              </div>\n                            </List.Item>\n                          )}\n                        />\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"work-assignment__content__header\">\n              <div className=\"work-assignment__content__header__dark-bg\"></div>\n              <div className=\"work-assignment__content__header__task-name\">\n                <h3>Tháng {selectedWorkSchedule.month} năm {selectedWorkSchedule.year}</h3>\n              </div>\n            </div>\n            <div className=\"work-assignment__content__body\">\n              <Tabs\n                defaultActiveKey=\"1\"\n                tabBarGutter={50}\n                className=\"work-assignment__content__body__tabs\"\n                onChange={e => console.log(e)}>\n                <TabPane tab=\"Lịch làm việc\" key=\"1\" className=\"work-assignment__content__body__tabs__work-schedule\">\n                  {selectedWorkSchedule.workDays.map((row, iRow) => (\n                    <Row key={iRow + 1}>\n                      {row.map((col, iCol) => (\n                        <Col key={`${iRow + 1}_${iCol}`} span={2}\n                          className={`\n                            animated fadeIn\n                            work-assignment__content__body__tabs__work-schedule__work-day \n                            ${col.workDayInMonth === selectedWorkDay.workDayInMonth ?\n                              'work-assignment__content__body__tabs__work-schedule__work-day--selected' : ''\n                            }\n                          `}\n                          onClick={() => this.handleSelectWorkDay(iRow, iCol)}>\n                          <span\n                            className={`\n                              work-assignment__content__body__tabs__work-schedule__work-day__day-in-month\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__day-in-month--sunday' : ''}\n                            `}>{col.workDayInMonth}</span>\n                          <span\n                            className={`\n                              work-assignment__content__body__tabs__work-schedule__work-day__week-day\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__week-day--sunday' : ''}\n                            `}>{col.workWeekDay}</span>\n                          <div className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs\">\n                            {col.staffs.slice(0, 2).map(staff => (\n                              <Avatar\n                                key={staff._id}\n                                size={16}\n                                className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar\"\n                                src={staff.avatar} />))}\n                            {col.staffs.length > 2 ? (\n                              <div className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar--plus\">\n                                <span>+{col.staffs.slice(2).length}</span>\n                              </div>\n                            ) : <></>}\n                          </div>\n                        </Col>\n                      ))}\n                    </Row>\n                  ))}\n                </TabPane>\n              </Tabs>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(WorkAssignment));\n"]},"metadata":{},"sourceType":"module"}