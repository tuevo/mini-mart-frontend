{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/GooglePlacesAutocomplete/GooglePlacesAutocomplete.js\";\nimport React, { Component } from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport './GooglePlacesAutocomplete.style.scss';\nimport { Input } from 'antd';\nimport { geocodeByAddress } from 'react-google-places-autocomplete';\n/**\n * REMEMBER: Enable Maps Javascript API & Places API from Google Cloud Flatform\n */\n\nexport default class PlacesAutocomplete extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      isValidAdress: false\n    };\n  }\n\n  async handleSelectPlace(e) {\n    const {\n      description\n    } = e;\n    const res = await geocodeByAddress(description);\n    const placeInfo = {\n      address: description,\n      location: {\n        lat: res[0].geometry.location.lat(),\n        lng: res[0].geometry.location.lng()\n      }\n    };\n    this.props.validateAddress(true, placeInfo);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"google-places-autocomplete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(GooglePlacesAutocomplete, {\n      placeholder: \"Nh\\u1EADp \\u0111\\u1ECBa ch\\u1EC9...\",\n      suggestionsClassNames: {\n        suggestion: 'google-places-autocomplete__suggestions'\n      },\n      onSelect: e => this.handleSelectPlace(e),\n      renderInput: props => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Input, Object.assign({}, props, {\n        ref: current => {\n          this.inputRef.current = current;\n\n          if (this.inputRef.current) {\n            this.props.validateAddress(false, undefined);\n            console.log(this.inputRef.current);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), !this.state.isValidAdress ? React.createElement(\"span\", {\n        className: \"google-places-autocomplete__error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Vui l\\xF2ng ch\\u1ECDn \\u0111\\u1ECBa ch\\u1EC9\") : React.createElement(React.Fragment, null)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/GooglePlacesAutocomplete/GooglePlacesAutocomplete.js"],"names":["React","Component","GooglePlacesAutocomplete","Input","geocodeByAddress","PlacesAutocomplete","constructor","props","inputRef","createRef","state","isValidAdress","handleSelectPlace","e","description","res","placeInfo","address","location","lat","geometry","lng","validateAddress","render","suggestion","current","undefined","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,wBAAP,MAAqC,kCAArC;AACA,OAAO,qDAAP;AACA,OAAO,uCAAP;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AAEA;;;;AAGA,eAAe,MAAMC,kBAAN,SAAiCJ,SAAjC,CAA2C;AACxDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgBR,KAAK,CAACS,SAAN,EAAhB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AAED,QAAMC,iBAAN,CAAwBC,CAAxB,EAA2B;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,CAAxB;AACA,UAAME,GAAG,GAAG,MAAMX,gBAAgB,CAACU,WAAD,CAAlC;AACA,UAAME,SAAS,GAAG;AAChBC,MAAAA,OAAO,EAAEH,WADO;AAEhBI,MAAAA,QAAQ,EAAE;AACRC,QAAAA,GAAG,EAAEJ,GAAG,CAAC,CAAD,CAAH,CAAOK,QAAP,CAAgBF,QAAhB,CAAyBC,GAAzB,EADG;AAERE,QAAAA,GAAG,EAAEN,GAAG,CAAC,CAAD,CAAH,CAAOK,QAAP,CAAgBF,QAAhB,CAAyBG,GAAzB;AAFG;AAFM,KAAlB;AAOA,SAAKd,KAAL,CAAWe,eAAX,CAA2B,IAA3B,EAAiCN,SAAjC;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,wBAAD;AACE,MAAA,WAAW,EAAC,qCADd;AAEE,MAAA,qBAAqB,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAFzB;AAGE,MAAA,QAAQ,EAAEX,CAAC,IAAI,KAAKD,iBAAL,CAAuBC,CAAvB,CAHjB;AAIE,MAAA,WAAW,EAAGN,KAAD,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,oBACMA,KADN;AAEE,QAAA,GAAG,EAAEkB,OAAO,IAAI;AACd,eAAKjB,QAAL,CAAciB,OAAd,GAAwBA,OAAxB;;AACA,cAAI,KAAKjB,QAAL,CAAciB,OAAlB,EAA2B;AACzB,iBAAKlB,KAAL,CAAWe,eAAX,CAA2B,KAA3B,EAAkCI,SAAlC;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,QAAL,CAAciB,OAA1B;AACD;AACF,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAWG,CAAC,KAAKf,KAAL,CAAWC,aAAZ,GACC;AAAM,QAAA,SAAS,EAAC,mCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADD,GAEG,yCAbN,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AA0BD;;AAjDuD","sourcesContent":["import React, { Component } from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport './GooglePlacesAutocomplete.style.scss';\nimport { Input } from 'antd';\nimport { geocodeByAddress } from 'react-google-places-autocomplete';\n\n/**\n * REMEMBER: Enable Maps Javascript API & Places API from Google Cloud Flatform\n */\nexport default class PlacesAutocomplete extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      isValidAdress: false\n    }\n  }\n\n  async handleSelectPlace(e) {\n    const { description } = e;\n    const res = await geocodeByAddress(description);\n    const placeInfo = {\n      address: description,\n      location: {\n        lat: res[0].geometry.location.lat(),\n        lng: res[0].geometry.location.lng()\n      }\n    };\n    this.props.validateAddress(true, placeInfo);\n  }\n\n  render() {\n    return (\n      <div className=\"google-places-autocomplete\">\n        <GooglePlacesAutocomplete\n          placeholder=\"Nhập địa chỉ...\"\n          suggestionsClassNames={{ suggestion: 'google-places-autocomplete__suggestions' }}\n          onSelect={e => this.handleSelectPlace(e)}\n          renderInput={(props) => (\n            <div>\n              <Input\n                {...props}\n                ref={current => {\n                  this.inputRef.current = current;\n                  if (this.inputRef.current) {\n                    this.props.validateAddress(false, undefined);\n                    console.log(this.inputRef.current);\n                  }\n                }}\n              />\n              {!this.state.isValidAdress ? (\n                <span className=\"google-places-autocomplete__error\">Vui lòng chọn địa chỉ</span>\n              ) : <></>}\n            </div>\n          )}\n        />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}