{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/ImportingRequest/SupplierManagement/AddSupplierDialog/AddSupplierDialog.js\";\nimport React from 'react';\nimport { Button, Modal, Form, Input, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport './AddSupplierDialog.style.scss';\nimport { connect } from 'react-redux';\nimport { withCookies } from 'react-cookie';\nimport * as actions from '../../../../../../redux/actions';\nimport PageBase from '../../../../../utilities/PageBase/PageBase';\nimport { API } from '../../../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../../../constants/cookie-name.constant';\nimport GooglePlacesAutocomplete from '../../../../../utilities/GooglePlacesAutocomplete/GooglePlacesAutocomplete';\nconst layout = {\n  labelCol: {\n    span: 5\n  },\n  wrapperCol: {\n    span: 19\n  }\n};\n\nclass AddSupplierDialog extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false,\n      isAddressError: false\n    };\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({\n      isVisible\n    });\n  }\n\n  onOk() {\n    if (this.formRef.current) {\n      this.formRef.current.submit();\n    }\n  }\n\n  async onFinish(values) {// this.props.setAppLoading(true);\n    // const res = await (\n    //   await fetch(\n    //     API.Manager.SupplierManagment.addSupplier,\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify(values),\n    //       headers: {\n    //         'Content-type': 'application/json; charset=UTF-8',\n    //         'token': this.props.cookies.get(COOKIE_NAMES.token)\n    //       },\n    //       signal: this.abortController.signal\n    //     }\n    //   )\n    // ).json();\n    // this.props.setAppLoading(false);\n    // if (res.status !== 200) {\n    //   message.error(res.errors[0]);\n    //   return;\n    // }\n    // if (this.formRef.current) {\n    //   this.formRef.current.resetFields();\n    // }\n    // this.props.addToSuppliersDataSource(res.data.supplier);\n    // this.setDialogVisible(false);\n    // message.success(res.messages[0]);\n  }\n\n  setAddress(placeInfo) {\n    if (this.formRef.current) {\n      this.formRef.current.setFieldsValue({\n        address: placeInfo.address\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"importing-request__container__suppliers__toolbar__add-supplier-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: React.createElement(PlusOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }),\n      className: \"importing-request__container__suppliers__toolbar__add-supplier-dialog__btn-open\",\n      onClick: () => this.setDialogVisible(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      className: \"importing-request__container__suppliers__toolbar__add-supplier-dialog__content\",\n      title: React.createElement(\"span\", {\n        style: {\n          color: '#ff8220',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Nh\\xE0 cung c\\u1EA5p m\\u1EDBi\"),\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOk(),\n      onCancel: () => this.setDialogVisible(false),\n      okText: \"Th\\xEAm\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      okButtonProps: {\n        style: {\n          background: '#ff8220',\n          border: 0,\n          fontWeight: 'bold'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, layout, {\n      ref: current => this.formRef.current = current,\n      onFinish: values => this.onFinish(values),\n      onFinishFailed: () => message.error('Chưa đầy đủ thông tin, vui lòng kiểm tra lại'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      name: \"name\",\n      label: \"Th\\u01B0\\u01A1ng thi\\u1EC7u\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập thương hiệu'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Input, {\n      maxLength: 50,\n      placeholder: \"T\\u1ED1i \\u0111a 50 k\\xED t\\u1EF1\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"phone\",\n      label: \"\\u0110i\\u1EC7n tho\\u1EA1i\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập số điện thoại'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Input, {\n      maxLength: 11,\n      placeholder: \"Bao g\\u1ED3m 10 ho\\u1EB7c 11 s\\u1ED1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"address\",\n      label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập vào chọn địa chỉ'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(GooglePlacesAutocomplete, {\n      setAddress: placeInfo => this.setAddress(placeInfo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(AddSupplierDialog));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/ImportingRequest/SupplierManagement/AddSupplierDialog/AddSupplierDialog.js"],"names":["React","Button","Modal","Form","Input","message","PlusOutlined","connect","withCookies","actions","PageBase","API","COOKIE_NAMES","GooglePlacesAutocomplete","layout","labelCol","span","wrapperCol","AddSupplierDialog","constructor","props","state","isVisible","isAddressError","formRef","createRef","setDialogVisible","setState","onOk","current","submit","onFinish","values","setAddress","placeInfo","setFieldsValue","address","render","color","fontWeight","style","background","border","error","required"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Modal, Form, Input, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport './AddSupplierDialog.style.scss';\nimport { connect } from 'react-redux';\nimport { withCookies } from 'react-cookie';\nimport * as actions from '../../../../../../redux/actions';\nimport PageBase from '../../../../../utilities/PageBase/PageBase';\nimport { API } from '../../../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../../../constants/cookie-name.constant';\nimport GooglePlacesAutocomplete from '../../../../../utilities/GooglePlacesAutocomplete/GooglePlacesAutocomplete';\n\nconst layout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 19 },\n};\n\nclass AddSupplierDialog extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false,\n      isAddressError: false\n    }\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    this.setState({ isVisible });\n  }\n\n  onOk() {\n    if (this.formRef.current) {\n      this.formRef.current.submit();\n    }\n  }\n\n  async onFinish(values) {\n    // this.props.setAppLoading(true);\n    // const res = await (\n    //   await fetch(\n    //     API.Manager.SupplierManagment.addSupplier,\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify(values),\n    //       headers: {\n    //         'Content-type': 'application/json; charset=UTF-8',\n    //         'token': this.props.cookies.get(COOKIE_NAMES.token)\n    //       },\n    //       signal: this.abortController.signal\n    //     }\n    //   )\n    // ).json();\n\n    // this.props.setAppLoading(false);\n    // if (res.status !== 200) {\n    //   message.error(res.errors[0]);\n    //   return;\n    // }\n\n\n    // if (this.formRef.current) {\n    //   this.formRef.current.resetFields();\n    // }\n\n    // this.props.addToSuppliersDataSource(res.data.supplier);\n    // this.setDialogVisible(false);\n    // message.success(res.messages[0]);\n  }\n\n  setAddress(placeInfo) {\n    if (this.formRef.current) {\n      this.formRef.current.setFieldsValue({ address: placeInfo.address });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"importing-request__container__suppliers__toolbar__add-supplier-dialog\">\n        <Button\n          icon={<PlusOutlined />}\n          className=\"importing-request__container__suppliers__toolbar__add-supplier-dialog__btn-open\"\n          onClick={() => this.setDialogVisible(true)}\n        />\n\n        <Modal\n          className=\"importing-request__container__suppliers__toolbar__add-supplier-dialog__content\"\n          title={<span style={{ color: '#ff8220', fontWeight: 'bold' }}>Nhà cung cấp mới</span>}\n          centered\n          visible={this.state.isVisible}\n          onOk={() => this.onOk()}\n          onCancel={() => this.setDialogVisible(false)}\n          okText=\"Thêm\"\n          cancelText=\"Hủy bỏ\"\n          okButtonProps={{ style: { background: '#ff8220', border: 0, fontWeight: 'bold' } }}\n        >\n          <Form\n            {...layout}\n            ref={current => this.formRef.current = current}\n            onFinish={values => this.onFinish(values)}\n            onFinishFailed={() => message.error('Chưa đầy đủ thông tin, vui lòng kiểm tra lại')}\n          >\n            <Form.Item\n              name=\"name\"\n              label=\"Thương thiệu\"\n              rules={[{ required: true, message: 'Vui lòng nhập thương hiệu' }]}\n            >\n              <Input maxLength={50} placeholder=\"Tối đa 50 kí tự\" autoFocus={true} />\n            </Form.Item>\n            <Form.Item\n              name=\"phone\"\n              label=\"Điện thoại\"\n              rules={[{ required: true, message: 'Vui lòng nhập số điện thoại' }]}\n            >\n              <Input maxLength={11} placeholder=\"Bao gồm 10 hoặc 11 số\" />\n            </Form.Item>\n            <Form.Item\n              name=\"address\"\n              label=\"Địa chỉ\"\n              rules={[{ required: true, message: 'Vui lòng nhập vào chọn địa chỉ' }]}\n            >\n              <GooglePlacesAutocomplete\n                setAddress={placeInfo => this.setAddress(placeInfo)}\n              />\n            </Form.Item>\n\n          </Form>\n\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(AddSupplierDialog));\n"]},"metadata":{},"sourceType":"module"}