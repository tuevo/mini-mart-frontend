{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/EditCategoryDialog/EditCategoryDialog.js\";\nimport React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport { Modal, Form, Input, Button, message } from 'antd';\nimport './EditCategoryDialog.style.scss';\nimport * as actions from '../../../../../redux/actions';\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n};\n\nclass EditCategoryDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    if (!isVisible && this.formRef.current) {\n      this.formRef.current.resetFields();\n    }\n\n    this.setState({\n      isVisible\n    });\n  }\n\n  onOk() {\n    document.getElementById('edit-category-dialog-btn-submit').click();\n  }\n\n  onFinish(values) {\n    const {\n      category\n    } = this.props;\n    category.name = values.name;\n    this.props.updateCategoryInList(category);\n    this.setDialogVisible(false);\n    message.success('SUCCESS');\n  }\n\n  render() {\n    const {\n      category\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"product-management__edit-category-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"link\",\n      className: \"product-management__edit-category-dialog__btn-open\",\n      onClick: () => this.setDialogVisible(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Ch\\u1EC9nh s\\u1EEDa\"), React.createElement(Modal, {\n      className: \"product-management__edit-category-dialog__content\",\n      title: React.createElement(\"span\", {\n        style: {\n          color: '#ff8220'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, `Danh mục ${category.name} | Sửa thông tin`),\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOk(),\n      onCancel: () => this.setDialogVisible(false),\n      okText: \"L\\u01B0u thay \\u0111\\u1ED5i\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      okButtonProps: {\n        style: {\n          background: '#ff8220',\n          border: 0\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, layout, {\n      ref: current => {\n        this.formRef.current = current;\n\n        if (this.formRef.current) {\n          this.formRef.current.setFieldsValue({\n            name: this.props.category.name\n          });\n        }\n      },\n      onFinish: values => this.onFinish(values),\n      onFinishFailed: () => message.error('Chưa nhập đầy đủ thông tin, vui lòng kiểm tra lại.'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      name: \"name\",\n      label: \"T\\xEAn danh m\\u1EE5c\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập tên danh mục'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"T\\u1ED1i \\u0111a 30 k\\xED t\\u1EF1\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"edit-category-dialog-btn-submit\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(EditCategoryDialog));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/EditCategoryDialog/EditCategoryDialog.js"],"names":["React","Component","withCookies","connect","Modal","Form","Input","Button","message","actions","layout","labelCol","span","wrapperCol","EditCategoryDialog","constructor","props","state","isVisible","formRef","createRef","setDialogVisible","current","resetFields","setState","onOk","document","getElementById","click","onFinish","values","category","name","updateCategoryInList","success","render","color","style","background","border","setFieldsValue","error","required","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport { Modal, Form, Input, Button, message } from 'antd';\nimport './EditCategoryDialog.style.scss';\nimport * as actions from '../../../../../redux/actions';\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\n\nclass EditCategoryDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    }\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    if(!isVisible && this.formRef.current) {\n      this.formRef.current.resetFields();\n    }\n    this.setState({ isVisible });\n  }\n\n  onOk() {\n    document.getElementById('edit-category-dialog-btn-submit').click();\n  }\n  onFinish(values) {\n    const { category } = this.props;\n    category.name = values.name;\n    this.props.updateCategoryInList(category);\n    this.setDialogVisible(false);\n    message.success('SUCCESS');\n  }\n\n  render() {\n    const { category } = this.props;\n    return (\n      <div className=\"product-management__edit-category-dialog\">\n        <Button\n          type=\"link\"\n          className=\"product-management__edit-category-dialog__btn-open\"\n          onClick={() => this.setDialogVisible(true)}\n        >Chỉnh sửa</Button>\n        <Modal\n          className=\"product-management__edit-category-dialog__content\"\n          title={<span style={{ color: '#ff8220' }}>{`Danh mục ${category.name} | Sửa thông tin`}</span>}\n          centered\n          visible={this.state.isVisible}\n          onOk={() => this.onOk()}\n          onCancel={() => this.setDialogVisible(false)}\n          okText=\"Lưu thay đổi\"\n          cancelText=\"Hủy bỏ\"\n          okButtonProps={{ style: { background: '#ff8220', border: 0 } }}\n        >\n          <Form\n            {...layout}\n            ref={current => {\n              this.formRef.current = current;\n              if (this.formRef.current) {\n                this.formRef.current.setFieldsValue({\n                  name: this.props.category.name\n                });\n              }\n            }}\n            onFinish={values => this.onFinish(values)}\n            onFinishFailed={() => message.error('Chưa nhập đầy đủ thông tin, vui lòng kiểm tra lại.')}\n          >\n            <Form.Item\n              name=\"name\"\n              label=\"Tên danh mục\"\n              rules={[{ required: true, message: 'Vui lòng nhập tên danh mục' }]}\n            >\n              <Input placeholder=\"Tối đa 30 kí tự\" autoFocus={true} />\n            </Form.Item>\n            <Form.Item style={{ display: 'none' }}>\n              <Button id=\"edit-category-dialog-btn-submit\" htmlType=\"submit\" />\n            </Form.Item>\n          </Form>\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(EditCategoryDialog));\n"]},"metadata":{},"sourceType":"module"}