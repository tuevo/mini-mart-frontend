{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/layout/Sidebar/Sidebar.js\";\nimport React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Sidebar.style.scss';\nimport UserInfo from './UserInfo/UserInfo';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../redux/actions';\nimport links from '../../../constants/sidebar.constant';\nimport USER_ROLE from '../../../constants/user-role.constant';\nconst {\n  Sider\n} = Layout;\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPagePath: '',\n      currentPageIndex: -1\n    };\n  }\n\n  componentWillMount() {\n    const {\n      pagesByUserRole\n    } = this.props;\n    const href = window.location.href.split('?')[0];\n    const position = href.split('/');\n    const currentPath = position[position.length - 1];\n    let currentPageIndex, currentPagePath;\n    pagesByUserRole.forEach((page, index) => {\n      if (page.path === `/${currentPath}`) {\n        currentPageIndex = index;\n        const currentPage = pagesByUserRole[currentPageIndex];\n        currentPagePath = currentPage.path;\n        this.props.setCurrentPageTitle(currentPage.title, currentPage.icon);\n      }\n    });\n\n    if (!this.pageIndex) {\n      currentPageIndex = 0;\n      const {\n        title,\n        icon,\n        path\n      } = pagesByUserRole[currentPageIndex];\n      currentPagePath = path;\n      this.props.setCurrentPageTitle(title, icon);\n      this.props.history.push(path);\n    }\n\n    this.setState({\n      currentPageIndex,\n      currentPagePath\n    });\n  }\n\n  isCommonPage(path) {\n    const page = links.find(link => link.role === USER_ROLE.USER.role).pages.find(page => page.path === path);\n    if (page) return true;\n    return false;\n  }\n\n  render() {\n    const {\n      user,\n      pagesByUserRole\n    } = this.props;\n    const {\n      currentPageIndex,\n      currentPagePath\n    } = this.state;\n    console.log(currentPageIndex);\n    return React.createElement(Sider, {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(UserInfo, {\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      theme: \"light\",\n      mode: \"inline\",\n      defaultSelectedKeys: [currentPageIndex],\n      selectable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, pagesByUserRole.map((page, pageIndex) => {\n      const Page = {\n        Icon: page.icon\n      };\n      if (!this.isCommonPage(page.path)) return React.createElement(Menu.Item, {\n        key: pageIndex,\n        className: \"animated slideInLeft\",\n        onClick: () => {\n          this.props.setCurrentPageTitle(page.title, page.icon);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Page.Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"nav-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, page.title), React.createElement(Link, {\n        to: page.path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n      return null;\n    })));\n  }\n\n}\n\nexport default connect(null, actions)(withRouter(Sidebar));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/layout/Sidebar/Sidebar.js"],"names":["React","Component","Layout","Menu","Link","withRouter","UserInfo","connect","actions","links","USER_ROLE","Sider","Sidebar","constructor","props","state","currentPagePath","currentPageIndex","componentWillMount","pagesByUserRole","href","window","location","split","position","currentPath","length","forEach","page","index","path","currentPage","setCurrentPageTitle","title","icon","pageIndex","history","push","setState","isCommonPage","find","link","role","USER","pages","render","user","console","log","map","Page","Icon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Sidebar.style.scss';\nimport UserInfo from './UserInfo/UserInfo';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../redux/actions';\nimport links from '../../../constants/sidebar.constant';\nimport USER_ROLE from '../../../constants/user-role.constant';\n\nconst { Sider } = Layout;\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPagePath: '',\n      currentPageIndex: -1\n    }\n  }\n\n  componentWillMount() {\n    const { pagesByUserRole } = this.props;\n    const href = window.location.href.split('?')[0];\n    const position = href.split('/');\n    const currentPath = position[position.length - 1];\n\n    let currentPageIndex, currentPagePath;\n    pagesByUserRole.forEach((page, index) => {\n      if (page.path === `/${currentPath}`) {\n        currentPageIndex = index;\n        const currentPage = pagesByUserRole[currentPageIndex];\n        currentPagePath = currentPage.path;\n        this.props.setCurrentPageTitle(currentPage.title, currentPage.icon);\n      }\n    });\n\n    if (!this.pageIndex) {\n      currentPageIndex = 0;\n      const { title, icon, path } = pagesByUserRole[currentPageIndex];\n      currentPagePath = path;\n      this.props.setCurrentPageTitle(title, icon);\n      this.props.history.push(path);\n    }\n\n    this.setState({ currentPageIndex, currentPagePath });\n  }\n\n  isCommonPage(path) {\n    const page = links.find(link => link.role === USER_ROLE.USER.role).pages.find(page => page.path === path);\n    if (page)\n      return true;\n    return false;\n  }\n\n  render() {\n    const { user, pagesByUserRole } = this.props;\n    const { currentPageIndex, currentPagePath } = this.state;\n\n    console.log(currentPageIndex);\n\n    return (\n      <Sider className=\"sidebar\">\n        <UserInfo user={user} />\n        <Menu theme='light' mode='inline' defaultSelectedKeys={[currentPageIndex]} selectable={true}>\n          {pagesByUserRole.map((page, pageIndex) => {\n            const Page = { Icon: page.icon };\n            if (!this.isCommonPage(page.path))\n              return (\n                <Menu.Item key={pageIndex} className=\"animated slideInLeft\"\n                  onClick={() => { this.props.setCurrentPageTitle(page.title, page.icon) }}>\n                  <Page.Icon />\n                  <span className='nav-text'>{page.title}</span>\n                  <Link to={page.path} />\n                </Menu.Item>\n              )\n            return null;\n          })}\n        </Menu>\n      </Sider>\n    )\n  }\n}\nexport default connect(null, actions)(withRouter(Sidebar));"]},"metadata":{},"sourceType":"module"}