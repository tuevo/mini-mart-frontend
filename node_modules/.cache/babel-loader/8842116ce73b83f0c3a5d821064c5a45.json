{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/WorkAssignment.js\";\nimport React from 'react';\nimport { Row, Col, Tabs, Select, List, Avatar, Button, Modal, message, Tooltip, Skeleton } from 'antd';\nimport { CloseCircleOutlined, ExclamationCircleOutlined, LogoutOutlined } from '@ant-design/icons';\nimport USER_ROLE from '../../../../constants/user-role.constant';\nimport './WorkAssignment.style.scss';\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport WEEK_DAY from '../../../../constants/week-day.constant';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport { API } from '../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\nimport BtnAddWorkSchedule from './BtnAddWorkSchedule/BtnAddWorkSchedule';\nimport BtnAddWorkShift from './BtnAddWorkShift/BtnAddWorkShift';\nimport BtnAddWorkShiftAssigner from './BtnAddWorkShiftAssigner/BtnAddWorkShiftAssigner';\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Option\n} = Select;\nconst {\n  confirm\n} = Modal;\n\nclass WorkAssignment extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.loadStaffs = async () => {\n      this.props.setAppLoading(true);\n      const res = await (await fetch(API.Manager.StaffManagement.getListStaffs, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        },\n        signal: this.abortController.signal\n      })).json();\n\n      if (res.status === 200) {\n        const {\n          users\n        } = res.data;\n        this.setState({\n          listStaffs: users\n        });\n      } else {\n        message.error(res.errors[0]);\n      }\n\n      this.props.setAppLoading(false);\n    };\n\n    this.loadWorkSchedules = async workYear => {\n      this.props.setAppLoading(true);\n      this.refreshAllCurrenStates();\n      let url = API.Manager.WorkSchedule.getWorkSchedules;\n\n      if (workYear) {\n        url += `?year=${workYear}`;\n      }\n\n      const res = await (await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        },\n        signal: this.abortController.signal\n      })).json();\n      this.props.setAppLoading(false);\n      const {\n        workSchedules,\n        availableYears\n      } = res.data;\n      const listWorkYears = availableYears.map(y => ({\n        text: 'Năm ' + y,\n        value: y\n      }));\n      let {\n        selectedWorkSchedule\n      } = this.state;\n      selectedWorkSchedule = { ...selectedWorkSchedule,\n        ...workSchedules[0]\n      };\n      this.setState({\n        selectedWorkSchedule,\n        workSchedules,\n        listWorkYears,\n        selectedWorkYear: workYear || listWorkYears[0].value\n      });\n      let isWorkShiftFound = false;\n\n      for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n        for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n          if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n            let {\n              selectedWorkShift\n            } = this.state;\n            const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n            selectedWorkShift = selectedWorkDay.workShifts[0];\n            selectedWorkShift.index = 0;\n            isWorkShiftFound = true;\n            this.setState({\n              selectedWorkDay,\n              selectedWorkShift\n            });\n            break;\n          }\n        }\n      }\n\n      if (!isWorkShiftFound) {\n        const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n        let selectedWorkShift = selectedWorkDay.workShifts[0];\n\n        if (selectedWorkShift) {\n          selectedWorkShift.index = 0;\n        } else {\n          selectedWorkShift = {\n            index: 0\n          };\n        }\n\n        this.setState({\n          selectedWorkDay,\n          selectedWorkShift\n        });\n      }\n    };\n\n    this.state = {\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      selectedWorkYear: null,\n      workSchedules: [],\n      listWorkYears: [],\n      listStaffs: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadStaffs();\n    this.loadWorkSchedules(null);\n  }\n\n  refreshAllCurrenStates() {\n    this.setState({\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      selectedWorkYear: null,\n      workSchedules: [],\n      listWorkYears: []\n    });\n  }\n\n  reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift) {\n    this.setState({\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift\n    });\n  }\n\n  toggleTaskWorkDayPanel() {\n    const {\n      isTaskWorkDayPanelShown\n    } = this.state;\n    this.setState({\n      isTaskWorkDayPanelShown: !isTaskWorkDayPanelShown\n    });\n  }\n\n  filterWorkShiftsByDay(workShifts, day) {\n    return workShifts.filter(ws => {\n      const wsDay = new Date(ws.startTime).getDate();\n      return day === wsDay;\n    });\n  }\n\n  generateWorkDays(workSchedule) {\n    const {\n      month,\n      year,\n      workShifts\n    } = workSchedule;\n    const workDaysLength = moment(`${month}-${year}`, 'M-YYYY').daysInMonth();\n    let workDays = [];\n    let temp = [];\n    let assigners = [];\n\n    for (let i = 1; i <= workDaysLength; i++) {\n      assigners.length = 0;\n      assigners = [];\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments) assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n\n      if (i % 7 === 0) {\n        workDays.push([...temp]);\n        temp.length = 0;\n      }\n    }\n\n    temp.length = 0;\n    temp = [];\n\n    for (let i = 29; i <= workDaysLength; i++) {\n      assigners = [];\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments) assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n    }\n\n    workDays.push([...temp]);\n    return workDays;\n  }\n\n  getWeekDay(day, month, year) {\n    const weekDayNumber = moment(`${day}-${month}-${year}`, 'DD-MM-YYYY').day();\n\n    switch (weekDayNumber) {\n      case 1:\n        return WEEK_DAY.MONDAY;\n\n      case 2:\n        return WEEK_DAY.TUESDAY;\n\n      case 3:\n        return WEEK_DAY.WEDNESDAY;\n\n      case 4:\n        return WEEK_DAY.THURSDAY;\n\n      case 5:\n        return WEEK_DAY.FRIDAY;\n\n      case 6:\n        return WEEK_DAY.SATURDAY;\n\n      case 0:\n        return WEEK_DAY.SUNDAY;\n\n      default:\n        return null;\n    }\n  }\n\n  handleSelectWorkSchedule(selectedWorkSchedule, index) {\n    selectedWorkSchedule.index = index;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n    let isWorkShiftFound = false;\n\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let {\n            selectedWorkShift\n          } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n          selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n          isWorkShiftFound = true;\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n          break;\n        }\n      }\n    }\n\n    if (!isWorkShiftFound) {\n      const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n      let selectedWorkShift = selectedWorkDay.workShifts[0];\n\n      if (selectedWorkShift) {\n        selectedWorkShift.index = 0;\n      } else {\n        selectedWorkShift = {\n          index: 0\n        };\n      }\n\n      this.setState({\n        selectedWorkDay,\n        selectedWorkShift\n      });\n    }\n\n    this.setState({\n      selectedWorkSchedule\n    });\n  }\n\n  handleSelectWorkDay(row, col) {\n    const {\n      selectedWorkSchedule\n    } = this.state;\n    let {\n      selectedWorkShift\n    } = this.state;\n    const selectedWorkDay = selectedWorkSchedule.workDays[row][col];\n\n    if (selectedWorkDay.workShifts.length > 0) {\n      selectedWorkShift = selectedWorkDay.workShifts[0];\n      selectedWorkShift.index = 0;\n    } else {\n      selectedWorkShift = {};\n    }\n\n    this.setState({\n      selectedWorkDay,\n      selectedWorkShift\n    });\n  }\n\n  handleSelectWorkShift(workShift, index) {\n    workShift.index = index;\n    this.setState({\n      selectedWorkShift: workShift\n    });\n  }\n\n  openRemoveWorkShiftConfirm(workShiftID) {\n    const that = this;\n    confirm({\n      title: 'Bạn có muốn hủy ca làm việc này?',\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }),\n      content: 'Ca làm việc chỉ có thể hủy khi không còn nhân viên nào được phân công.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n\n      async onOk() {\n        that.props.setAppLoading(true);\n        const res = await (await fetch(API.Manager.WorkShift.removeWorkShift.replace('{workShiftID}', workShiftID), {\n          method: 'DELETE',\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': that.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: that.abortController.signal\n        })).json();\n\n        if (res.status !== 200) {\n          that.props.setAppLoading(false);\n          message.error(res.errors[0]);\n          return;\n        }\n\n        let {\n          selectedWorkShift,\n          selectedWorkDay,\n          selectedWorkSchedule,\n          workSchedules\n        } = that.state;\n        selectedWorkDay.workShifts = selectedWorkDay.workShifts.filter(ws => ws._id !== workShiftID);\n\n        if (selectedWorkDay.workShifts.length > 0) {\n          selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n        } else {\n          selectedWorkShift = {\n            index: 0\n          };\n        }\n\n        for (const week of selectedWorkSchedule.workDays) {\n          for (let day of week) {\n            if (day.workDayInMonth === selectedWorkDay.workDayInMonth) {\n              day = selectedWorkDay;\n              break;\n            }\n          }\n        }\n\n        selectedWorkSchedule.workShifts = selectedWorkSchedule.workShifts.filter(ws => ws._id !== workShiftID);\n\n        for (let i = 0; i < workSchedules.length; i++) {\n          if (workSchedules[i]._id === selectedWorkSchedule._id) {\n            workSchedules[i] = selectedWorkSchedule;\n            break;\n          }\n        }\n\n        that.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n        message.success(res.messages[0]);\n        that.props.setAppLoading(false);\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  openRemoveWorkScheduleConfirm(workScheduleID) {\n    const that = this;\n    confirm({\n      title: 'Bạn có muốn hủy lịch làm việc này?',\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }),\n      content: 'Lịch làm việc chỉ có thể hủy khi tất cả các ngày trong tháng đều chưa có ca làm việc.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n\n      async onOk() {\n        that.props.setAppLoading(true);\n        const res = await (await fetch(API.Manager.WorkSchedule.removeWorkSchedule.replace('{workScheduleID}', workScheduleID), {\n          method: 'DELETE',\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': that.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: that.abortController.signal\n        })).json();\n\n        if (res.status !== 200) {\n          that.props.setAppLoading(false);\n          message.error(res.errors[0]);\n          return;\n        }\n\n        let {\n          workSchedules,\n          selectedWorkSchedule,\n          selectedWorkDay,\n          selectedWorkShift\n        } = that.state;\n        workSchedules = workSchedules.filter(wsc => wsc._id !== workScheduleID);\n\n        if (workSchedules.length === 0) {\n          let {\n            listWorkYears,\n            selectedWorkYear\n          } = that.state;\n          listWorkYears = listWorkYears.filter(y => y !== selectedWorkYear);\n          that.loadWorkSchedules(listWorkYears[0].value);\n          message.success(res.messages[0]);\n          return;\n        }\n\n        workSchedules.sort((a, b) => a.month - b.month);\n        selectedWorkSchedule = workSchedules[0];\n        selectedWorkSchedule.index = 0;\n        selectedWorkSchedule.workDays = that.generateWorkDays(selectedWorkSchedule);\n        let isWorkShiftFound = false;\n\n        for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n          for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n            if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n              selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n              selectedWorkShift = selectedWorkDay.workShifts[0];\n              selectedWorkShift.index = 0;\n              isWorkShiftFound = true;\n              break;\n            }\n          }\n        }\n\n        if (!isWorkShiftFound) {\n          selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n          let selectedWorkShift = selectedWorkDay.workShifts[0];\n\n          if (selectedWorkShift) {\n            selectedWorkShift.index = 0;\n          } else {\n            selectedWorkShift = {\n              index: 0\n            };\n          }\n        }\n\n        that.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n        message.success(res.messages[0]);\n        that.props.setAppLoading(false);\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  openRemoveWorkShiftAssignerConfirm(assinger) {\n    const that = this;\n    confirm({\n      title: `Bạn có muốn hủy phân công ${assinger.fullname} trong ca làm việc này?`,\n      icon: React.createElement(ExclamationCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }),\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n\n      async onOk() {\n        that.props.setAppLoading(true);\n        const {\n          selectedWorkShift,\n          selectedWorkDay,\n          selectedWorkSchedule,\n          workSchedules\n        } = that.state;\n        const {\n          workAssignments\n        } = selectedWorkShift;\n        const workAssignment = workAssignments.find(wa => wa.assigner._id === assinger._id);\n        const workAssignmentID = workAssignment._id;\n        const res = await (await fetch(API.Manager.WorkAssignment.removeWorkAssignment.replace('{workAssignmentID}', workAssignmentID), {\n          method: 'DELETE',\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': that.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: that.abortController.signal\n        })).json();\n\n        if (res.status !== 200) {\n          that.props.setAppLoading(false);\n          message.error(res.errors[0]);\n          return;\n        }\n\n        selectedWorkShift.workAssignments = selectedWorkShift.workAssignments.filter(wa => wa._id !== workAssignmentID);\n\n        for (let ws of selectedWorkDay.workShifts) {\n          if (ws._id === selectedWorkShift._id) {\n            ws.workAssignments = selectedWorkShift.workAssignments;\n            break;\n          }\n        }\n\n        for (const week of selectedWorkSchedule.workDays) {\n          for (let day of week) {\n            if (day.workDayInMonth === selectedWorkDay.workDayInMonth) {\n              day = selectedWorkDay;\n              break;\n            }\n          }\n        }\n\n        for (let wsc of workSchedules) {\n          if (wsc._id === selectedWorkSchedule._id) {\n            wsc = selectedWorkSchedule;\n            break;\n          }\n        }\n\n        that.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n        message.success(res.messages[0]);\n        that.props.setAppLoading(false);\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  handleSelectYear(year) {\n    this.setState({\n      selectedWorkYear: year\n    });\n    this.loadWorkSchedules(year);\n  }\n\n  render() {\n    let {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift,\n      listWorkYears,\n      selectedWorkYear,\n      listStaffs\n    } = this.state;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n    return React.createElement(\"div\", {\n      className: \"work-assignment animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"work-assignment__left-sidebar\",\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(BtnAddWorkSchedule, {\n      reloadWorkSchedules: selectedYear => this.loadWorkSchedules(selectedYear),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__year-selection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, \"N\\u0103m l\\xE0m vi\\u1EC7c\")), React.createElement(\"div\", {\n      style: {\n        minHeight: 37\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, (listWorkYears || []).length > 0 ? React.createElement(Select, {\n      className: \"animated fadeIn\",\n      defaultValue: selectedWorkYear,\n      onChange: e => this.handleSelectYear(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, listWorkYears.map((y, i) => React.createElement(Option, {\n      key: i,\n      value: y.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, y.text))) : React.createElement(Skeleton.Input, {\n      style: {\n        width: '100%',\n        height: 30,\n        borderRadius: 3,\n        background: 'rgba(0,0,0,0.15)'\n      },\n      active: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__list-tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, \"Th\\xE1ng l\\xE0m vi\\u1EC7c\")), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__list-tasks__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, React.createElement(List, {\n      size: \"small\",\n      dataSource: workSchedules,\n      renderItem: (item, index) => {\n        return React.createElement(List.Item, {\n          className: `work-assignment__left-sidebar__list-tasks__item animated fadeIn\n                          ${index === selectedWorkSchedule.index ? 'work-assignment__left-sidebar__list-tasks__item--selected' : ''}`,\n          onClick: () => this.handleSelectWorkSchedule(item, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598\n          },\n          __self: this\n        }, React.createElement(Row, {\n          style: {\n            width: '90%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 604\n          },\n          __self: this\n        }, React.createElement(Col, {\n          span: 22,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 605\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"work-assignment__left-sidebar__list-tasks__item__task-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 606\n          },\n          __self: this\n        }, \"Th\\xE1ng \", item.month)), React.createElement(Col, {\n          span: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: () => this.openRemoveWorkScheduleConfirm(item._id),\n          className: \"work-assignment__left-sidebar__list-tasks__item__btn-remove\",\n          type: \"link\",\n          icon: React.createElement(CloseCircleOutlined, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 613\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 609\n          },\n          __self: this\n        }))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      className: \"work-assignment__content\",\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel animated slideInRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? moment(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') : ''}`), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs work-assignment__content__task-work-day-panel__panel__main__list-work-shifts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, \"Ca l\\xE0m vi\\u1EC7c trong ng\\xE0y\")), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    }, React.createElement(BtnAddWorkShift, {\n      workSchedules: [...workSchedules],\n      selectedWorkSchedule: { ...selectedWorkSchedule\n      },\n      selectedWorkDay: { ...selectedWorkDay\n      },\n      selectedWorkShift: { ...selectedWorkShift\n      },\n      reloadWorkSchedules: (workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift) => {\n        this.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: selectedWorkDay.workShifts,\n      renderItem: (ws, index) => React.createElement(List.Item, {\n        onClick: () => this.handleSelectWorkShift(ws, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: `\n                                animated fadeIn\n                                ${index === selectedWorkShift.index ? 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item--selected' : 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item'}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, \"T\\u1EEB \", moment(ws.startTime).format('HH:mm'), \" \\u0111\\u1EBFn \", moment(ws.endTime).format('HH:mm'))), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-close\",\n        type: \"link\",\n        onClick: () => this.openRemoveWorkShiftConfirm(ws._id),\n        icon: React.createElement(CloseCircleOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 676\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }, \"Chi ti\\u1EBFt ca l\\xE0m vi\\u1EC7c\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691\n      },\n      __self: this\n    }, \"B\\u1EAFt \\u0111\\u1EA7u\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    }, \"K\\u1EBFt th\\xFAc\"))), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }, selectedWorkShift.startTime ? moment(selectedWorkShift.startTime).format('HH:mm') : ''), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }, selectedWorkShift.endTime ? moment(selectedWorkShift.endTime).format('HH:mm') : '')))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    }, \"Nh\\xE2n vi\\xEAn ph\\u1EE5 tr\\xE1ch (\", selectedWorkShift.workAssignments ? selectedWorkShift.workAssignments.length : 0, \")\")), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715\n      },\n      __self: this\n    }, React.createElement(BtnAddWorkShiftAssigner, {\n      workSchedules: [...workSchedules],\n      selectedWorkSchedule: { ...selectedWorkSchedule\n      },\n      selectedWorkDay: { ...selectedWorkDay\n      },\n      selectedWorkShift: { ...selectedWorkShift\n      },\n      staffs: listStaffs.filter(s => !(selectedWorkShift.workAssignments || []).find(wa => wa.assigner._id === s._id) && s.role !== USER_ROLE.MANAGER.type),\n      reloadWorkSchedules: (workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift) => {\n        this.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: selectedWorkShift.workAssignments,\n      renderItem: wa => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__staff animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: wa.assigner.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 743\n          },\n          __self: this\n        }),\n        title: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 744\n          },\n          __self: this\n        }, wa.assigner.fullname),\n        description: USER_ROLE[wa.assigner.role].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        placement: \"bottom\",\n        title: \"H\\u1EE7y ph\\xE2n c\\xF4ng\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-unassign\",\n        type: \"link\",\n        icon: React.createElement(LogoutOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 753\n          },\n          __self: this\n        }),\n        onClick: () => this.openRemoveWorkShiftAssignerConfirm(wa.assigner),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      })))))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"work-assignment__content__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__header__dark-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"work-assignment__content__header__task-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773\n      },\n      __self: this\n    }, \"Th\\xE1ng \", selectedWorkSchedule.month, \" n\\u0103m \", selectedWorkSchedule.year))), React.createElement(\"div\", {\n      className: \"work-assignment__content__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"1\",\n      tabBarGutter: 50,\n      className: \"work-assignment__content__body__tabs\",\n      onChange: e => console.log(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: \"L\\u1ECBch l\\xE0m vi\\u1EC7c\",\n      key: \"1\",\n      className: \"work-assignment__content__body__tabs__work-schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782\n      },\n      __self: this\n    }, selectedWorkSchedule.workDays.map((row, iRow) => React.createElement(Row, {\n      key: iRow + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784\n      },\n      __self: this\n    }, row.map((col, iCol) => React.createElement(Col, {\n      key: `${iRow + 1}_${iCol}`,\n      span: 2,\n      className: `\n                            animated fadeIn\n                            work-assignment__content__body__tabs__work-schedule__work-day \n                            ${col.workDayInMonth === selectedWorkDay.workDayInMonth ? 'work-assignment__content__body__tabs__work-schedule__work-day--selected' : ''}\n                          `,\n      onClick: () => this.handleSelectWorkDay(iRow, iCol),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: `\n                              work-assignment__content__body__tabs__work-schedule__work-day__day-in-month\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__day-in-month--sunday' : ''}\n                            `,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795\n      },\n      __self: this\n    }, col.workDayInMonth), React.createElement(\"span\", {\n      className: `\n                              work-assignment__content__body__tabs__work-schedule__work-day__week-day\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__week-day--sunday' : ''}\n                            `,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800\n      },\n      __self: this\n    }, col.workWeekDay), React.createElement(\"div\", {\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805\n      },\n      __self: this\n    }, col.staffs.slice(0, 2).map(staff => React.createElement(Tooltip, {\n      key: staff._id,\n      placement: \"bottom\",\n      title: staff.fullname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      key: staff._id,\n      size: 16,\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar\",\n      src: staff.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812\n      },\n      __self: this\n    }))), col.staffs.length > 2 ? React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: col.staffs.slice(2).map(staff => React.createElement(Row, {\n        gutter: 7,\n        key: staff._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        style: {\n          marginTop: -3\n        },\n        key: staff._id,\n        size: 16,\n        src: staff.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829\n        },\n        __self: this\n      }, staff.fullname)))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar--plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834\n      },\n      __self: this\n    }, \"+\", col.staffs.slice(2).length))) : React.createElement(React.Fragment, null))))))))))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(WorkAssignment));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/WorkAssignment.js"],"names":["React","Row","Col","Tabs","Select","List","Avatar","Button","Modal","message","Tooltip","Skeleton","CloseCircleOutlined","ExclamationCircleOutlined","LogoutOutlined","USER_ROLE","moment","_","WEEK_DAY","withCookies","connect","actions","API","COOKIE_NAMES","PageBase","BtnAddWorkSchedule","BtnAddWorkShift","BtnAddWorkShiftAssigner","TabPane","Option","confirm","WorkAssignment","constructor","props","loadStaffs","setAppLoading","res","fetch","Manager","StaffManagement","getListStaffs","method","headers","cookies","get","token","signal","abortController","json","status","users","data","setState","listStaffs","error","errors","loadWorkSchedules","workYear","refreshAllCurrenStates","url","WorkSchedule","getWorkSchedules","workSchedules","availableYears","listWorkYears","map","y","text","value","selectedWorkSchedule","state","selectedWorkYear","isWorkShiftFound","i","workDays","length","j","staffs","selectedWorkShift","selectedWorkDay","workShifts","index","componentDidMount","reloadWorkSchedules","toggleTaskWorkDayPanel","isTaskWorkDayPanelShown","filterWorkShiftsByDay","day","filter","ws","wsDay","Date","startTime","getDate","generateWorkDays","workSchedule","month","year","workDaysLength","daysInMonth","temp","assigners","filteredWorkShifts","wa","workAssignments","push","assigner","uniqBy","a","_id","workWeekDay","getWeekDay","workDayInMonth","workMonth","weekDayNumber","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","handleSelectWorkSchedule","handleSelectWorkDay","row","col","handleSelectWorkShift","workShift","openRemoveWorkShiftConfirm","workShiftID","that","title","icon","content","okText","okType","cancelText","onOk","WorkShift","removeWorkShift","replace","week","success","messages","onCancel","openRemoveWorkScheduleConfirm","workScheduleID","removeWorkSchedule","wsc","sort","b","openRemoveWorkShiftAssignerConfirm","assinger","fullname","workAssignment","find","workAssignmentID","removeWorkAssignment","handleSelectYear","render","selectedYear","minHeight","e","width","height","borderRadius","background","item","format","endTime","s","role","MANAGER","type","avatar","name","console","log","iRow","iCol","slice","staff","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col, Tabs, Select, List, Avatar, Button, Modal, message, Tooltip, Skeleton } from 'antd';\nimport { CloseCircleOutlined, ExclamationCircleOutlined, LogoutOutlined } from '@ant-design/icons';\nimport USER_ROLE from '../../../../constants/user-role.constant';\nimport './WorkAssignment.style.scss';\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport WEEK_DAY from '../../../../constants/week-day.constant';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport { API } from '../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nimport PageBase from '../../../utilities/PageBase/PageBase';\nimport BtnAddWorkSchedule from './BtnAddWorkSchedule/BtnAddWorkSchedule';\nimport BtnAddWorkShift from './BtnAddWorkShift/BtnAddWorkShift';\nimport BtnAddWorkShiftAssigner from './BtnAddWorkShiftAssigner/BtnAddWorkShiftAssigner';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nclass WorkAssignment extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      selectedWorkYear: null,\n      workSchedules: [],\n      listWorkYears: [],\n      listStaffs: []\n    }\n  }\n\n  componentDidMount() {\n    this.loadStaffs();\n    this.loadWorkSchedules(null);\n  }\n\n  loadStaffs = async () => {\n    this.props.setAppLoading(true);\n    const res = await (\n      await fetch(\n        API.Manager.StaffManagement.getListStaffs,\n        {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': this.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: this.abortController.signal\n        }\n      )\n    ).json();\n\n    if (res.status === 200) {\n      const { users } = res.data;\n      this.setState({ listStaffs: users });\n    } else {\n      message.error(res.errors[0]);\n    }\n\n    this.props.setAppLoading(false);\n  }\n\n  refreshAllCurrenStates() {\n    this.setState({\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      selectedWorkYear: null,\n      workSchedules: [],\n      listWorkYears: []\n    });\n  }\n\n  loadWorkSchedules = async (workYear) => {\n    this.props.setAppLoading(true);\n    this.refreshAllCurrenStates();\n\n    let url = API.Manager.WorkSchedule.getWorkSchedules;\n    if (workYear) {\n      url += `?year=${workYear}`;\n    }\n\n    const res = await (\n      await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        },\n        signal: this.abortController.signal\n      })\n    ).json();\n\n    this.props.setAppLoading(false);\n    const { workSchedules, availableYears } = res.data\n    const listWorkYears = availableYears.map(y => ({ text: 'Năm ' + y, value: y }));\n    let { selectedWorkSchedule } = this.state;\n    selectedWorkSchedule = { ...selectedWorkSchedule, ...workSchedules[0] };\n\n    this.setState({\n      selectedWorkSchedule,\n      workSchedules,\n      listWorkYears,\n      selectedWorkYear: workYear || listWorkYears[0].value\n    });\n\n    let isWorkShiftFound = false;\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let { selectedWorkShift } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n\n          selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n          isWorkShiftFound = true;\n\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n\n          break;\n        }\n      }\n    }\n\n    if (!isWorkShiftFound) {\n      const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n\n      let selectedWorkShift = selectedWorkDay.workShifts[0];\n      if (selectedWorkShift) {\n        selectedWorkShift.index = 0;\n      } else {\n        selectedWorkShift = { index: 0 }\n      }\n\n      this.setState({\n        selectedWorkDay,\n        selectedWorkShift\n      })\n    }\n  }\n\n  reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift) {\n    this.setState({\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift\n    })\n  }\n\n  toggleTaskWorkDayPanel() {\n    const { isTaskWorkDayPanelShown } = this.state;\n    this.setState({ isTaskWorkDayPanelShown: !isTaskWorkDayPanelShown });\n  }\n\n  filterWorkShiftsByDay(workShifts, day) {\n    return workShifts.filter(ws => {\n      const wsDay = new Date(ws.startTime).getDate();\n      return day === wsDay;\n    });\n  }\n\n  generateWorkDays(workSchedule) {\n    const { month, year, workShifts } = workSchedule;\n    const workDaysLength = moment(`${month}-${year}`, 'M-YYYY').daysInMonth();\n    let workDays = [];\n    let temp = [];\n    let assigners = [];\n\n    for (let i = 1; i <= workDaysLength; i++) {\n      assigners.length = 0;\n      assigners = [];\n\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments)\n          assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n\n      if (i % 7 === 0) {\n        workDays.push([...temp]);\n        temp.length = 0;\n      }\n    }\n\n    temp.length = 0;\n    temp = [];\n\n    for (let i = 29; i <= workDaysLength; i++) {\n      assigners = [];\n\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments)\n          assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n    }\n    workDays.push([...temp]);\n\n    return workDays;\n  }\n\n  getWeekDay(day, month, year) {\n    const weekDayNumber = moment(`${day}-${month}-${year}`, 'DD-MM-YYYY').day();\n    switch (weekDayNumber) {\n      case 1: return WEEK_DAY.MONDAY;\n      case 2: return WEEK_DAY.TUESDAY;\n      case 3: return WEEK_DAY.WEDNESDAY;\n      case 4: return WEEK_DAY.THURSDAY;\n      case 5: return WEEK_DAY.FRIDAY;\n      case 6: return WEEK_DAY.SATURDAY;\n      case 0: return WEEK_DAY.SUNDAY;\n      default: return null\n    }\n  }\n\n  handleSelectWorkSchedule(selectedWorkSchedule, index) {\n    selectedWorkSchedule.index = index;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n\n    let isWorkShiftFound = false;\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let { selectedWorkShift } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n\n          selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n          isWorkShiftFound = true;\n\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n\n          break;\n        }\n      }\n    }\n\n    if (!isWorkShiftFound) {\n      const selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n\n      let selectedWorkShift = selectedWorkDay.workShifts[0];\n      if (selectedWorkShift) {\n        selectedWorkShift.index = 0;\n      } else {\n        selectedWorkShift = { index: 0 }\n      }\n\n      this.setState({\n        selectedWorkDay,\n        selectedWorkShift\n      })\n    }\n\n    this.setState({ selectedWorkSchedule });\n  }\n\n  handleSelectWorkDay(row, col) {\n    const { selectedWorkSchedule } = this.state;\n    let { selectedWorkShift } = this.state;\n    const selectedWorkDay = selectedWorkSchedule.workDays[row][col];\n\n    if (selectedWorkDay.workShifts.length > 0) {\n      selectedWorkShift = selectedWorkDay.workShifts[0];\n      selectedWorkShift.index = 0;\n    } else {\n      selectedWorkShift = {}\n    }\n\n    this.setState({\n      selectedWorkDay,\n      selectedWorkShift\n    });\n  }\n\n  handleSelectWorkShift(workShift, index) {\n    workShift.index = index;\n    this.setState({ selectedWorkShift: workShift });\n  }\n\n  openRemoveWorkShiftConfirm(workShiftID) {\n    const that = this;\n    confirm({\n      title: 'Bạn có muốn hủy ca làm việc này?',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Ca làm việc chỉ có thể hủy khi không còn nhân viên nào được phân công.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n      async onOk() {\n        that.props.setAppLoading(true);\n        const res = await (\n          await fetch(\n            API.Manager.WorkShift.removeWorkShift.replace('{workShiftID}', workShiftID),\n            {\n              method: 'DELETE',\n              headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'token': that.props.cookies.get(COOKIE_NAMES.token)\n              },\n              signal: that.abortController.signal\n            }\n          )\n        ).json();\n\n        if (res.status !== 200) {\n          that.props.setAppLoading(false);\n          message.error(res.errors[0]);\n          return;\n        }\n\n        let { selectedWorkShift, selectedWorkDay, selectedWorkSchedule, workSchedules } = that.state;\n\n        selectedWorkDay.workShifts = selectedWorkDay.workShifts.filter(ws => ws._id !== workShiftID);\n        if (selectedWorkDay.workShifts.length > 0) {\n          selectedWorkShift = selectedWorkDay.workShifts[0];\n          selectedWorkShift.index = 0;\n        } else {\n          selectedWorkShift = { index: 0 }\n        }\n\n        for (const week of selectedWorkSchedule.workDays) {\n          for (let day of week) {\n            if (day.workDayInMonth === selectedWorkDay.workDayInMonth) {\n              day = selectedWorkDay;\n              break;\n            }\n          }\n        }\n        selectedWorkSchedule.workShifts = selectedWorkSchedule.workShifts.filter(ws => ws._id !== workShiftID);\n\n        for (let i = 0; i < workSchedules.length; i++) {\n          if (workSchedules[i]._id === selectedWorkSchedule._id) {\n            workSchedules[i] = selectedWorkSchedule;\n            break;\n          }\n        }\n\n        that.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n        message.success(res.messages[0]);\n        that.props.setAppLoading(false);\n      },\n      onCancel() { },\n    });\n  }\n\n  openRemoveWorkScheduleConfirm(workScheduleID) {\n    const that = this;\n    confirm({\n      title: 'Bạn có muốn hủy lịch làm việc này?',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Lịch làm việc chỉ có thể hủy khi tất cả các ngày trong tháng đều chưa có ca làm việc.',\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n      async onOk() {\n        that.props.setAppLoading(true);\n        const res = await (\n          await fetch(\n            API.Manager.WorkSchedule.removeWorkSchedule.replace('{workScheduleID}', workScheduleID),\n            {\n              method: 'DELETE',\n              headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'token': that.props.cookies.get(COOKIE_NAMES.token)\n              },\n              signal: that.abortController.signal\n            }\n          )\n        ).json();\n\n        if (res.status !== 200) {\n          that.props.setAppLoading(false);\n          message.error(res.errors[0]);\n          return;\n        }\n\n        let {\n          workSchedules,\n          selectedWorkSchedule,\n          selectedWorkDay,\n          selectedWorkShift\n        } = that.state;\n\n        workSchedules = workSchedules.filter(wsc => wsc._id !== workScheduleID);\n\n        if (workSchedules.length === 0) {\n          let { listWorkYears, selectedWorkYear } = that.state;\n          listWorkYears = listWorkYears.filter(y => y !== selectedWorkYear);\n          that.loadWorkSchedules(listWorkYears[0].value);\n          message.success(res.messages[0]);\n          return;\n        }\n\n        workSchedules.sort((a, b) => a.month - b.month);\n\n        selectedWorkSchedule = workSchedules[0];\n        selectedWorkSchedule.index = 0;\n        selectedWorkSchedule.workDays = that.generateWorkDays(selectedWorkSchedule);\n\n        let isWorkShiftFound = false;\n        for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n          for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n            if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n              selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n              selectedWorkShift = selectedWorkDay.workShifts[0];\n              selectedWorkShift.index = 0;\n              isWorkShiftFound = true;\n              break;\n            }\n          }\n        }\n\n        if (!isWorkShiftFound) {\n          selectedWorkDay = selectedWorkSchedule.workDays[0][0];\n          let selectedWorkShift = selectedWorkDay.workShifts[0];\n          if (selectedWorkShift) {\n            selectedWorkShift.index = 0;\n          } else {\n            selectedWorkShift = { index: 0 }\n          }\n        }\n\n        that.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n        message.success(res.messages[0]);\n        that.props.setAppLoading(false);\n      },\n      onCancel() { },\n    });\n  }\n\n  openRemoveWorkShiftAssignerConfirm(assinger) {\n    const that = this;\n    confirm({\n      title: `Bạn có muốn hủy phân công ${assinger.fullname} trong ca làm việc này?`,\n      icon: <ExclamationCircleOutlined />,\n      okText: 'Đồng ý',\n      okType: 'danger',\n      cancelText: 'Không, cảm ơn',\n      async onOk() {\n        that.props.setAppLoading(true);\n        const { selectedWorkShift, selectedWorkDay, selectedWorkSchedule, workSchedules } = that.state;\n        const { workAssignments } = selectedWorkShift;\n        const workAssignment = workAssignments.find(wa => wa.assigner._id === assinger._id);\n        const workAssignmentID = workAssignment._id;\n\n        const res = await (\n          await fetch(\n            API.Manager.WorkAssignment.removeWorkAssignment.replace('{workAssignmentID}', workAssignmentID),\n            {\n              method: 'DELETE',\n              headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'token': that.props.cookies.get(COOKIE_NAMES.token)\n              },\n              signal: that.abortController.signal\n            }\n          )\n        ).json();\n\n        if (res.status !== 200) {\n          that.props.setAppLoading(false);\n          message.error(res.errors[0]);\n          return;\n        }\n\n        selectedWorkShift.workAssignments = selectedWorkShift.workAssignments.filter(wa => wa._id !== workAssignmentID);\n\n        for (let ws of selectedWorkDay.workShifts) {\n          if (ws._id === selectedWorkShift._id) {\n            ws.workAssignments = selectedWorkShift.workAssignments;\n            break;\n          }\n        }\n\n        for (const week of selectedWorkSchedule.workDays) {\n          for (let day of week) {\n            if (day.workDayInMonth === selectedWorkDay.workDayInMonth) {\n              day = selectedWorkDay;\n              break;\n            }\n          }\n        }\n\n        for (let wsc of workSchedules) {\n          if (wsc._id === selectedWorkSchedule._id) {\n            wsc = selectedWorkSchedule;\n            break;\n          }\n        }\n\n        that.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n        message.success(res.messages[0]);\n        that.props.setAppLoading(false);\n      },\n      onCancel() { },\n    });\n  }\n\n  handleSelectYear(year) {\n    this.setState({ selectedWorkYear: year });\n    this.loadWorkSchedules(year);\n  }\n\n  render() {\n    let {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift,\n      listWorkYears,\n      selectedWorkYear,\n      listStaffs\n    } = this.state;\n\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n\n    return (\n      <div className=\"work-assignment animated fadeIn\">\n        <Row>\n          <Col className=\"work-assignment__left-sidebar\" span={4}>\n            <BtnAddWorkSchedule reloadWorkSchedules={selectedYear => this.loadWorkSchedules(selectedYear)} />\n\n            <div className=\"work-assignment__left-sidebar__year-selection\">\n              <div className=\"work-assignment__left-sidebar__title\">\n                <span>Năm làm việc</span>\n              </div>\n              <div style={{ minHeight: 37 }}>\n                {\n                  (listWorkYears || []).length > 0 ? (\n                    <Select\n                      className=\"animated fadeIn\"\n                      defaultValue={selectedWorkYear}\n                      onChange={e => this.handleSelectYear(e)}>\n                      {listWorkYears.map((y, i) => (\n                        <Option key={i} value={y.value}>{y.text}</Option>\n                      ))}\n                    </Select>\n                  ) : (\n                      <Skeleton.Input\n                        style={{ width: '100%', height: 30, borderRadius: 3, background: 'rgba(0,0,0,0.15)' }}\n                        active={true} size=\"small\"\n                      />\n                    )\n                }\n              </div>\n            </div>\n\n            <div className=\"work-assignment__left-sidebar__list-tasks\">\n\n              <div className=\"work-assignment__left-sidebar__title\">\n                <span>Tháng làm việc</span>\n              </div>\n\n              <div className=\"work-assignment__left-sidebar__list-tasks__wrapper\">\n                <List\n                  size=\"small\"\n                  dataSource={workSchedules}\n                  renderItem={(item, index) => {\n                    return (\n                      <List.Item\n                        className={\n                          `work-assignment__left-sidebar__list-tasks__item animated fadeIn\n                          ${index === selectedWorkSchedule.index ? 'work-assignment__left-sidebar__list-tasks__item--selected' : ''}`\n                        }\n                        onClick={() => this.handleSelectWorkSchedule(item, index)}>\n                        <Row style={{ width: '90%' }}>\n                          <Col span={22}>\n                            <span className=\"work-assignment__left-sidebar__list-tasks__item__task-name\">Tháng {item.month}</span>\n                          </Col>\n                          <Col span={2}>\n                            <Button\n                              onClick={() => this.openRemoveWorkScheduleConfirm(item._id)}\n                              className=\"work-assignment__left-sidebar__list-tasks__item__btn-remove\"\n                              type=\"link\"\n                              icon={<CloseCircleOutlined />} />\n                          </Col>\n                        </Row>\n                      </List.Item>\n                    )\n                  }}\n                />\n              </div>\n            </div>\n          </Col>\n          <Col className=\"work-assignment__content\" span={20}>\n            <div className=\"work-assignment__content__task-work-day-panel\">\n              <div className=\"work-assignment__content__task-work-day-panel__panel animated slideInRight\">\n\n                <div className=\"work-assignment__content__task-work-day-panel__panel__main\">\n                  <h3>{\n                    `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? moment(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') : ''}`\n                  }</h3>\n\n                  <div\n                    className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs work-assignment__content__task-work-day-panel__panel__main__list-work-shifts\">\n                    <Row>\n                      <Col span={21}>\n                        <span className=\"work-assignment__content__task-work-day-panel__panel__main__title\">\n                          Ca làm việc trong ngày</span>\n                      </Col>\n                      <Col span={3}>\n                        <BtnAddWorkShift\n                          workSchedules={[...workSchedules]}\n                          selectedWorkSchedule={{ ...selectedWorkSchedule }}\n                          selectedWorkDay={{ ...selectedWorkDay }}\n                          selectedWorkShift={{ ...selectedWorkShift }}\n                          reloadWorkSchedules={\n                            (workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift) => {\n                              this.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift)\n                            }\n                          }\n                        />\n                      </Col>\n                    </Row>\n                    <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__wrapper\">\n                      <List\n                        itemLayout=\"horizontal\"\n                        dataSource={selectedWorkDay.workShifts}\n                        renderItem={(ws, index) => (\n                          <List.Item onClick={() => this.handleSelectWorkShift(ws, index)}>\n                            <Row\n                              className={`\n                                animated fadeIn\n                                ${index === selectedWorkShift.index ?\n                                  'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item--selected'\n                                  : 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item'}`}\n                            >\n                              <Col span={22}>\n                                <span>\n                                  Từ {moment(ws.startTime).format('HH:mm')} đến {moment(ws.endTime).format('HH:mm')}\n                                </span>\n                              </Col>\n                              <Col span={2}>\n                                <Button\n                                  className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-close\"\n                                  type=\"link\"\n                                  onClick={() => this.openRemoveWorkShiftConfirm(ws._id)}\n                                  icon={<CloseCircleOutlined />} />\n                              </Col>\n                            </Row>\n                          </List.Item>\n                        )}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__details\">\n                    <h3>Chi tiết ca làm việc</h3>\n                    <Row>\n                      <Col span={8}>\n                        <ul\n                          className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--label\">\n                          <li>Bắt đầu</li>\n                          <li>Kết thúc</li>\n                        </ul>\n                      </Col>\n                      <Col span={16}>\n                        <ul\n                          className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--value\">\n                          <li>{\n                            selectedWorkShift.startTime ? moment(selectedWorkShift.startTime).format('HH:mm') : ''\n                          }</li>\n                          <li>{\n                            selectedWorkShift.endTime ? moment(selectedWorkShift.endTime).format('HH:mm') : ''\n                          }</li>\n                        </ul>\n                      </Col>\n                    </Row>\n                    <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs\">\n                      <Row>\n                        <Col span={21}>\n                          <span className=\"work-assignment__content__task-work-day-panel__panel__main__title\">\n                            Nhân viên phụ trách ({\n                              selectedWorkShift.workAssignments ? selectedWorkShift.workAssignments.length : 0\n                            })</span>\n                        </Col>\n                        <Col span={3}>\n                          <BtnAddWorkShiftAssigner\n                            workSchedules={[...workSchedules]}\n                            selectedWorkSchedule={{ ...selectedWorkSchedule }}\n                            selectedWorkDay={{ ...selectedWorkDay }}\n                            selectedWorkShift={{ ...selectedWorkShift }}\n                            staffs={listStaffs.filter(\n                              s => !(selectedWorkShift.workAssignments || []).find(wa => wa.assigner._id === s._id) && s.role !== USER_ROLE.MANAGER.type)\n                            }\n                            reloadWorkSchedules={\n                              (workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift) => {\n                                this.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift)\n                              }\n                            }\n                          />\n                        </Col>\n                      </Row>\n\n                      <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__wrapper\">\n                        <List\n                          itemLayout=\"horizontal\"\n                          dataSource={selectedWorkShift.workAssignments}\n                          renderItem={wa => (\n                            <List.Item>\n                              <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__staff animated fadeIn\">\n                                <Row style={{ width: '100%' }}>\n                                  <Col span={22}>\n                                    <List.Item.Meta\n                                      avatar={<Avatar src={wa.assigner.avatar} />}\n                                      title={<span>{wa.assigner.fullname}</span>}\n                                      description={USER_ROLE[wa.assigner.role].name}\n                                    />\n                                  </Col>\n                                  <Col span={2}>\n                                    <Tooltip placement=\"bottom\" title=\"Hủy phân công\">\n                                      <Button\n                                        className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-unassign\"\n                                        type=\"link\"\n                                        icon={<LogoutOutlined />}\n                                        onClick={() => this.openRemoveWorkShiftAssignerConfirm(wa.assigner)}\n                                      />\n                                    </Tooltip>\n                                  </Col>\n                                </Row>\n                              </div>\n                            </List.Item>\n                          )}\n                        />\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"work-assignment__content__header\">\n              <div className=\"work-assignment__content__header__dark-bg\"></div>\n              <div className=\"work-assignment__content__header__task-name\">\n                <h3>Tháng {selectedWorkSchedule.month} năm {selectedWorkSchedule.year}</h3>\n              </div>\n            </div>\n            <div className=\"work-assignment__content__body\">\n              <Tabs\n                defaultActiveKey=\"1\"\n                tabBarGutter={50}\n                className=\"work-assignment__content__body__tabs\"\n                onChange={e => console.log(e)}>\n                <TabPane tab=\"Lịch làm việc\" key=\"1\" className=\"work-assignment__content__body__tabs__work-schedule\">\n                  {selectedWorkSchedule.workDays.map((row, iRow) => (\n                    <Row key={iRow + 1}>\n                      {row.map((col, iCol) => (\n                        <Col key={`${iRow + 1}_${iCol}`} span={2}\n                          className={`\n                            animated fadeIn\n                            work-assignment__content__body__tabs__work-schedule__work-day \n                            ${col.workDayInMonth === selectedWorkDay.workDayInMonth ?\n                              'work-assignment__content__body__tabs__work-schedule__work-day--selected' : ''\n                            }\n                          `}\n                          onClick={() => this.handleSelectWorkDay(iRow, iCol)}>\n                          <span\n                            className={`\n                              work-assignment__content__body__tabs__work-schedule__work-day__day-in-month\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__day-in-month--sunday' : ''}\n                            `}>{col.workDayInMonth}</span>\n                          <span\n                            className={`\n                              work-assignment__content__body__tabs__work-schedule__work-day__week-day\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__week-day--sunday' : ''}\n                            `}>{col.workWeekDay}</span>\n                          <div className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs\">\n                            {col.staffs.slice(0, 2).map(staff => (\n                              <Tooltip\n                                key={staff._id}\n                                placement=\"bottom\"\n                                title={staff.fullname}\n                              >\n                                <Avatar\n                                  key={staff._id}\n                                  size={16}\n                                  className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar\"\n                                  src={staff.avatar} />\n                              </Tooltip>\n                            ))}\n                            {col.staffs.length > 2 ? (\n                              <Tooltip\n                                placement=\"bottom\"\n                                title={col.staffs.slice(2).map(staff => (\n                                  <Row gutter={7} key={staff._id}>\n                                    <Col><Avatar\n                                      style={{ marginTop: -3 }}\n                                      key={staff._id}\n                                      size={16}\n                                      src={staff.avatar} /></Col>\n                                    <Col><span>{staff.fullname}</span></Col>\n                                  </Row>\n                                ))}\n                              >\n                                <div className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar--plus\">\n                                  <span>+{col.staffs.slice(2).length}</span>\n                                </div>\n                              </Tooltip>\n                            ) : <></>}\n                          </div>\n                        </Col>\n                      ))}\n                    </Row>\n                  ))}\n                </TabPane>\n              </Tabs>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(WorkAssignment));\n"]},"metadata":{},"sourceType":"module"}