{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/layout/Sidebar/Sidebar.js\";\nimport React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Sidebar.style.scss';\nimport UserInfo from './UserInfo/UserInfo';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../redux/actions';\nimport links from '../../../constants/sidebar.constant';\nimport USER_ROLE from '../../../constants/user-role.constant';\nconst {\n  Sider\n} = Layout;\n\nclass Sidebar extends Component {\n  componentWillMount() {\n    const {\n      pagesByUserRole\n    } = this.props;\n    const href = window.location.href.split('?')[0];\n    const position = href.split('/');\n    const currentPath = position[position.length - 1];\n    pagesByUserRole.forEach((page, index) => {\n      if (page.path === `/${currentPath}`) {\n        this.pageIndex = index.toString();\n        const currentPage = pagesByUserRole[this.pageIndex];\n        this.props.setCurrentPageTitle(currentPage.title, currentPage.icon);\n        if (!this.isCommonPage(page.path)) this.props.setSidebarSelection(true);\n      }\n    });\n\n    if (!this.pageIndex) {\n      this.pageIndex = '0';\n      const {\n        title,\n        icon,\n        path\n      } = pagesByUserRole[this.pageIndex];\n      this.props.history.push(path);\n      this.props.setCurrentPageTitle(title, icon);\n    }\n  }\n\n  isCommonPage(path) {\n    const page = links.find(link => link.role === USER_ROLE.USER.role).pages.find(page => page.path === path);\n    if (page) return true;\n    return false;\n  }\n\n  render() {\n    const {\n      user,\n      pagesByUserRole\n    } = this.props;\n    const {\n      isSidebarSelected\n    } = this.props.app;\n    return React.createElement(Sider, {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(UserInfo, {\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      theme: \"light\",\n      mode: \"inline\",\n      defaultSelectedKeys: [this.pageIndex],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, pagesByUserRole.map((page, pageIndex) => {\n      const Page = {\n        Icon: page.icon\n      };\n      if (!this.isCommonPage(page.path)) return React.createElement(Menu.Item, {\n        key: pageIndex,\n        className: \"animated slideInLeft\",\n        onClick: () => {\n          this.props.setCurrentPageTitle(page.title, page.icon);\n          this.props.setSidebarSelection(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Page.Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"nav-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, page.title), React.createElement(Link, {\n        to: page.path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n      return null;\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  app: state.app\n});\n\nexport default connect(mapStateToProps, actions)(withRouter(Sidebar));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/layout/Sidebar/Sidebar.js"],"names":["React","Component","Layout","Menu","Link","withRouter","UserInfo","connect","actions","links","USER_ROLE","Sider","Sidebar","componentWillMount","pagesByUserRole","props","href","window","location","split","position","currentPath","length","forEach","page","index","path","pageIndex","toString","currentPage","setCurrentPageTitle","title","icon","isCommonPage","setSidebarSelection","history","push","find","link","role","USER","pages","render","user","isSidebarSelected","app","map","Page","Icon","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Sidebar.style.scss';\nimport UserInfo from './UserInfo/UserInfo';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../redux/actions';\nimport links from '../../../constants/sidebar.constant';\nimport USER_ROLE from '../../../constants/user-role.constant';\n\nconst { Sider } = Layout;\n\nclass Sidebar extends Component {\n  pageIndex;\n\n  componentWillMount() {\n    const { pagesByUserRole } = this.props;\n    const href = window.location.href.split('?')[0];\n    const position = href.split('/');\n    const currentPath = position[position.length - 1];\n\n    pagesByUserRole.forEach((page, index) => {\n      if (page.path === `/${currentPath}`) {\n        this.pageIndex = index.toString();\n        const currentPage = pagesByUserRole[this.pageIndex];\n        this.props.setCurrentPageTitle(currentPage.title, currentPage.icon);\n\n        if(!this.isCommonPage(page.path))\n          this.props.setSidebarSelection(true);\n      }\n    });\n\n    if (!this.pageIndex) {\n      this.pageIndex = '0';\n      const { title, icon, path } = pagesByUserRole[this.pageIndex];\n      this.props.history.push(path);\n      this.props.setCurrentPageTitle(title, icon);\n    }\n  }\n\n  isCommonPage(path) {\n    const page = links.find(link => link.role === USER_ROLE.USER.role).pages.find(page => page.path === path);\n    if (page)\n      return true;\n    return false;\n  }\n\n  render() {\n    const { user, pagesByUserRole } = this.props;\n    const { isSidebarSelected } = this.props.app;\n\n    return (\n      <Sider className=\"sidebar\">\n        <UserInfo user={user} />\n        <Menu theme='light' mode='inline' defaultSelectedKeys={[this.pageIndex]}>\n          {pagesByUserRole.map((page, pageIndex) => {\n            const Page = { Icon: page.icon };\n            if (!this.isCommonPage(page.path))\n              return (\n                <Menu.Item key={pageIndex} className=\"animated slideInLeft\"\n                  onClick={() => {\n                    this.props.setCurrentPageTitle(page.title, page.icon);\n                    this.props.setSidebarSelection(true);\n                  }}>\n                  <Page.Icon />\n                  <span className='nav-text'>{page.title}</span>\n                  <Link to={page.path} />\n                </Menu.Item>\n              )\n            return null;\n          })}\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  app: state.app\n});\n\nexport default connect(mapStateToProps, actions)(withRouter(Sidebar));"]},"metadata":{},"sourceType":"module"}