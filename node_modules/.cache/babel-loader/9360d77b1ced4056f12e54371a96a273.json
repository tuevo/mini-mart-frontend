{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/AddProductDialog/AddProductDialog.js\";\nimport React from 'react';\nimport './AddProductDialog.style.scss';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../../redux/actions';\nimport { Button, Modal, Form, Input, InputNumber, message, Select, Tooltip } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport ImageUploader from '../../../../utilities/ImageUploader/ImageUploader';\nimport { API } from '../../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n};\n\nclass AddProductDialog extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    if (this.formRef.current) {\n      this.formRef.current.resetFields();\n    }\n\n    this.setState({\n      isVisible\n    });\n  }\n\n  async onOK() {\n    document.getElementById('product-management-add-product-dialog-btn-submit').click();\n  }\n\n  async onFinish(values) {\n    this.props.setAppLoading(true);\n    const res = await (await fetch(API.Importer.ProductManagement.addSupplier, {\n      method: 'POST',\n      body: JSON.stringify(values),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        'token': this.props.cookies.get(COOKIE_NAMES.token)\n      },\n      signal: this.abortController.signal\n    })).json();\n    this.props.setAppLoading(false);\n\n    if (res.status !== 200) {\n      message.error(res.errors[0]);\n      return;\n    }\n\n    const {\n      product\n    } = res.data;\n    this.setDialogVisible(false);\n    this.props.addToListProducts({ ...product\n    });\n    message.success(res.messages[0]);\n  }\n\n  render() {\n    const {\n      selectedCategory\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"product-management__add-product-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Th\\xEAm s\\u1EA3n ph\\u1EA9m v\\xE0o danh m\\u1EE5c\",\n      placement: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Button, {\n      shape: \"circle\",\n      icon: React.createElement(PlusOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }),\n      className: \"product-management__add-product-dialog__btn-open animated bounceIn\",\n      onClick: () => this.setDialogVisible(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      title: React.createElement(\"span\", {\n        style: {\n          color: '#ff8220',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, `Danh mục: ${selectedCategory.name} | Sản phẩm mới`),\n      visible: this.state.isVisible,\n      onOk: () => this.onOK(),\n      onCancel: () => this.setDialogVisible(false),\n      okText: \"Th\\xEAm\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      okButtonProps: {\n        style: {\n          background: '#ff8220',\n          border: 0\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__add-product-dialog__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-management__add-product-dialog__content__img-uploading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(ImageUploader, {\n      width: 150,\n      height: 150,\n      tooltipTitle: \"Nh\\u1EA5n \\u0111\\u1EC3 thay \\u0111\\u1ED5i \\u1EA3nh\",\n      tooltipPlacement: \"bottom\",\n      onFinish: imageUrl => this.formRef.current.setFieldsValue({\n        image: imageUrl\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(Form, Object.assign({}, layout, {\n      ref: current => {\n        this.formRef.current = current;\n\n        if (this.formRef.current) {\n          this.formRef.current.setFieldsValue({\n            supplier: this.props.suppliers[0]._id\n          });\n        }\n      },\n      className: \"product-management__add-product-dialog__content__form\",\n      onFinish: values => this.onFinish(values),\n      onFinishFailed: () => message.error('Thông tin sản phẩm chưa đầy đủ, vui lòng kiểm tra lại.'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      name: \"image\",\n      rules: [{\n        required: true\n      }],\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"product-management-add-product-dialog-btn-submit\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"name\",\n      label: \"T\\xEAn s\\u1EA3n ph\\u1EA9m\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập tên sản phẩm'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"T\\u1ED1i \\u0111a 50 k\\xED t\\u1EF1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"supplier\",\n      label: \"Nh\\xE0 cung c\\u1EA5p\",\n      rules: [{\n        required: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Select, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.props.suppliers.map(s => React.createElement(Select.Option, {\n      value: s._id,\n      key: s._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, s.name)))), React.createElement(Form.Item, {\n      name: \"price\",\n      label: \"Gi\\xE1 b\\xE1n (VN\\u0110)\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập giá bán'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      placeholder: \"T\\u1ED1i thi\\u1EC3u l\\xE0 0\",\n      formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n      parser: value => value.replace(/\\$\\s?|(,*)/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      name: \"availableQuantity\",\n      label: \"S\\u1ED1 l\\u01B0\\u1EE3ng hi\\u1EC7n c\\xF3\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập số lượng hiện có'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(InputNumber, {\n      placeholder: \"T\\u1ED1i thi\\u1EC3u l\\xE0 0\",\n      formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n      parser: value => value.replace(/\\$\\s?|(,*)/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(AddProductDialog));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Importer/ProductManagment/AddProductDialog/AddProductDialog.js"],"names":["React","withCookies","connect","actions","Button","Modal","Form","Input","InputNumber","message","Select","Tooltip","PlusOutlined","ImageUploader","API","COOKIE_NAMES","PageBase","layout","labelCol","span","wrapperCol","AddProductDialog","constructor","props","state","isVisible","formRef","createRef","setDialogVisible","current","resetFields","setState","onOK","document","getElementById","click","onFinish","values","setAppLoading","res","fetch","Importer","ProductManagement","addSupplier","method","body","JSON","stringify","headers","cookies","get","token","signal","abortController","json","status","error","errors","product","data","addToListProducts","success","messages","render","selectedCategory","color","fontWeight","name","style","background","border","imageUrl","setFieldsValue","image","supplier","suppliers","_id","required","display","map","s","value","replace"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './AddProductDialog.style.scss';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../../redux/actions';\nimport { Button, Modal, Form, Input, InputNumber, message, Select, Tooltip } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport ImageUploader from '../../../../utilities/ImageUploader/ImageUploader';\nimport { API } from '../../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../../constants/cookie-name.constant';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\n\nclass AddProductDialog extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    }\n\n    this.formRef = React.createRef();\n  }\n\n  setDialogVisible(isVisible) {\n    if (this.formRef.current) {\n      this.formRef.current.resetFields();\n    }\n    this.setState({ isVisible });\n  }\n\n  async onOK() {\n    document.getElementById('product-management-add-product-dialog-btn-submit').click();\n  }\n\n  async onFinish(values) {\n    this.props.setAppLoading(true);\n    const res = await (\n      await fetch(\n        API.Importer.ProductManagement.addSupplier,\n        {\n          method: 'POST',\n          body: JSON.stringify(values),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            'token': this.props.cookies.get(COOKIE_NAMES.token)\n          },\n          signal: this.abortController.signal\n        }\n      )\n    ).json();\n\n    this.props.setAppLoading(false);\n    if (res.status !== 200) {\n      message.error(res.errors[0]);\n      return;\n    }\n\n    const { product } = res.data;\n    this.setDialogVisible(false);\n    this.props.addToListProducts({ ...product });\n    message.success(res.messages[0]);\n  }\n\n  render() {\n    const { selectedCategory } = this.props;\n    return (\n      <div className=\"product-management__add-product-dialog\">\n        <Tooltip title=\"Thêm sản phẩm vào danh mục\" placement=\"left\">\n          <Button\n            shape=\"circle\"\n            icon={<PlusOutlined />}\n            className=\"product-management__add-product-dialog__btn-open animated bounceIn\"\n            onClick={() => this.setDialogVisible(true)}\n          />\n        </Tooltip>\n\n        <Modal\n          title={<span style={{ color: '#ff8220', fontWeight: 'bold' }}>{`Danh mục: ${selectedCategory.name} | Sản phẩm mới`}</span>}\n          visible={this.state.isVisible}\n          onOk={() => this.onOK()}\n          onCancel={() => this.setDialogVisible(false)}\n          okText=\"Thêm\"\n          cancelText=\"Hủy bỏ\"\n          okButtonProps={{ style: { background: '#ff8220', border: 0 } }}\n        >\n          <div className=\"product-management__add-product-dialog__content\">\n            <div className=\"product-management__add-product-dialog__content__img-uploading\">\n              <ImageUploader\n                width={150}\n                height={150}\n                tooltipTitle=\"Nhấn để thay đổi ảnh\"\n                tooltipPlacement=\"bottom\"\n                onFinish={imageUrl => this.formRef.current.setFieldsValue({ image: imageUrl })}\n              />\n            </div>\n            <Form\n              {...layout}\n              ref={current => {\n                this.formRef.current = current;\n                if (this.formRef.current) {\n                  this.formRef.current.setFieldsValue({ supplier: this.props.suppliers[0]._id })\n                }\n              }}\n              className=\"product-management__add-product-dialog__content__form\"\n              onFinish={values => this.onFinish(values)}\n              onFinishFailed={() => message.error('Thông tin sản phẩm chưa đầy đủ, vui lòng kiểm tra lại.')}\n            >\n              <Form.Item name=\"image\" rules={[{ required: true }]} style={{ display: 'none' }}>\n                <Input />\n              </Form.Item>\n\n              <Form.Item style={{ display: 'none' }}>\n                <Button id=\"product-management-add-product-dialog-btn-submit\" htmlType=\"submit\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"name\"\n                label=\"Tên sản phẩm\"\n                rules={[{ required: true, message: 'Vui lòng nhập tên sản phẩm' }]}\n              >\n                <Input placeholder=\"Tối đa 50 kí tự\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"supplier\"\n                label=\"Nhà cung cấp\"\n                rules={[{ required: true }]}\n              >\n                <Select>\n                  {this.props.suppliers.map(s => (\n                    <Select.Option value={s._id} key={s._id}>{s.name}</Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"price\"\n                label=\"Giá bán (VNĐ)\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Vui lòng nhập giá bán'\n                  }\n                ]}\n              >\n                <InputNumber\n                  placeholder=\"Tối thiểu là 0\"\n                  formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                  parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"availableQuantity\"\n                label=\"Số lượng hiện có\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Vui lòng nhập số lượng hiện có'\n                  }\n                ]}\n              >\n                <InputNumber\n                  placeholder=\"Tối thiểu là 0\"\n                  formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                  parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                />\n              </Form.Item>\n\n            </Form>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(AddProductDialog));\n\n\n"]},"metadata":{},"sourceType":"module"}