{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/BtnAddWorkShiftAssigner/BtnAddWorkShiftAssigner.js\";\nimport React from 'react';\nimport { UsergroupAddOutlined } from '@ant-design/icons';\nimport { Button, Modal, Tooltip, message, List, Avatar, Row, Col, Checkbox } from 'antd';\nimport './BtnAddWorkShiftAssigner.style.scss';\nimport { withCookies } from 'react-cookie';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\nimport USER_ROLES from '../../../../../constants/user-role.constant';\nimport moment from 'moment';\nimport * as _ from 'lodash';\n\nclass BtnAddWorkShiftAssigner extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false,\n      assigners: [],\n      isAllStaffsChecked: false,\n      selectedWorkShift: {}\n    };\n  }\n\n  isWorkShiftAssigner(selectedWorkShift, staff) {\n    const assigner = (selectedWorkShift.workAssignments || []).find(wa => wa.assigner._id === staff._id);\n    return assigner;\n  }\n\n  setModalVisible(isVisible) {\n    this.setState({\n      isVisible\n    });\n  }\n\n  onOK() {\n    // const { assigners } = this.state;\n    // if (assigners.length === 0) {\n    //   message.error('Vui lòng chọn nhân viên cần phân công');\n    //   return;\n    // }\n    const {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift\n    } = this.props;\n    const workAssignments = [{\n      \"description\": \"Được phép nghỉ sớm 15 phút\",\n      \"_id\": \"5e7236b3af071d55bbb38dc1\",\n      \"assigner\": \"5e71d63e9e24116b1210d5d8\",\n      \"manager\": \"5e6a530e9a59e035dc5e4e08\",\n      \"workShift\": {\n        \"_id\": \"5e72224d14b6be3c7daa163c\",\n        \"workSchedule\": {\n          \"_id\": \"5e7221ed14b6be3c7daa163b\",\n          \"month\": 4,\n          \"year\": 2020,\n          \"createdAt\": \"2020-03-18T13:28:13.880Z\",\n          \"updatedAt\": \"2020-03-18T13:30:34.714Z\",\n          \"__v\": 2\n        },\n        \"startTime\": \"2020-04-01T00:00:00.000Z\",\n        \"endTime\": \"2020-04-01T04:00:00.000Z\",\n        \"createdAt\": \"2020-03-18T13:29:49.714Z\",\n        \"updatedAt\": \"2020-03-18T13:29:49.714Z\",\n        \"__v\": 0\n      },\n      \"createdAt\": \"2020-03-18T14:56:51.798Z\",\n      \"updatedAt\": \"2020-03-18T14:56:51.798Z\",\n      \"__v\": 0\n    }, {\n      \"description\": \"Được phép nghỉ sớm 15 phút\",\n      \"_id\": \"5e742b90f18a3c2866bdfe35\",\n      \"assigner\": \"5e71d63e9e24116b1210d5d8\",\n      \"manager\": \"5e6a530e9a59e035dc5e4e08\",\n      \"workShift\": {\n        \"_id\": \"5e720d3587b1a126d54a2f38\",\n        \"workSchedule\": {\n          \"_id\": \"5e720d1787b1a126d54a2f37\",\n          \"month\": 3,\n          \"year\": 2020,\n          \"createdAt\": \"2020-03-18T11:59:19.234Z\",\n          \"updatedAt\": \"2020-03-22T16:19:39.644Z\",\n          \"__v\": 4\n        },\n        \"startTime\": \"2020-03-20T00:00:00.000Z\",\n        \"endTime\": \"2020-03-20T04:00:00.000Z\",\n        \"createdAt\": \"2020-03-18T11:59:49.781Z\",\n        \"updatedAt\": \"2020-03-20T02:33:52.126Z\",\n        \"__v\": 1\n      },\n      \"createdAt\": \"2020-03-20T02:33:52.018Z\",\n      \"updatedAt\": \"2020-03-20T02:33:52.018Z\",\n      \"__v\": 0\n    }];\n    selectedWorkShift.workAssignments = workAssignments;\n\n    for (let ws of selectedWorkDay.workShifts) {\n      if (ws._id === selectedWorkShift._id) {\n        ws = selectedWorkShift;\n        break;\n      }\n    }\n\n    for (let wsc of workSchedules) {\n      if (wsc._id === selectedWorkSchedule._id) {\n        const workShift = wsc.workShifts.find(ws => ws._id === selectedWorkShift._id);\n        workShift.workAssignments = workAssignments;\n\n        for (let wd of wsc.workDays) {\n          if (wd.workDayInMonth === selectedWorkDay.workDayInMonth) {\n            wd = selectedWorkDay;\n          }\n        }\n      }\n    }\n  }\n\n  onCancel() {\n    this.setModalVisible(false);\n  }\n\n  onCheckStaff(checked, staffID) {\n    const {\n      staffs\n    } = this.props;\n    let {\n      assigners\n    } = this.state;\n\n    if (checked) {\n      assigners.push(staffID);\n    } else {\n      assigners = assigners.filter(id => id !== staffID);\n    }\n\n    if (assigners.length === staffs.length) {\n      this.setState({\n        isAllStaffsChecked: true\n      });\n    } else {\n      this.setState({\n        isAllStaffsChecked: false\n      });\n    }\n\n    this.setState({\n      assigners\n    });\n  }\n\n  onCheckAllStaffs(checked) {\n    const {\n      staffs\n    } = this.props;\n    let {\n      assigners\n    } = this.state;\n\n    if (checked) {\n      assigners = staffs.map(staff => staff._id);\n    } else {\n      assigners = [];\n    }\n\n    this.setState({\n      assigners,\n      isAllStaffsChecked: checked\n    });\n  }\n\n  render() {\n    const {\n      selectedWorkShift,\n      selectedWorkDay,\n      staffs\n    } = this.props;\n    let {\n      assigners\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"add-work-shift-assigner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm nh\\xE2n vi\\xEAn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setModalVisible(true),\n      className: \"add-work-shift-assigner__btn-open\",\n      type: \"link\",\n      icon: React.createElement(UsergroupAddOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }),\n      disabled: this.props.isBtnOpenDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      title: `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? moment(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') + ' (' + moment(selectedWorkShift.startTime).format('HH:mm') + ' - ' + moment(selectedWorkShift.endTime).format('HH:mm') + ') | Phân công' : ''}`,\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOK(),\n      onCancel: () => this.onCancel(),\n      okText: \"Ph\\xE2n c\\xF4ng\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add-work-shift-assigner__list-staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"add-work-shift-assigner__list-staffs__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      className: \"add-work-shift-assigner__list-staffs__header__col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Ch\\u01B0a \\u0111\\u01B0\\u1EE3c ph\\xE2n c\\xF4ng (\", staffs.length, \")\")), React.createElement(Col, {\n      span: 3,\n      className: \"add-work-shift-assigner__list-staffs__header__col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, staffs.length > 0 ? React.createElement(Checkbox, {\n      onChange: e => this.onCheckAllStaffs(e.target.checked),\n      checked: this.state.isAllStaffsChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null))), React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: staffs,\n      renderItem: staff => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          width: '100%'\n        },\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 21,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: staff.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }),\n        title: staff.fullname,\n        description: USER_ROLES[staff.role].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 3,\n        className: \"add-work-shift-assigner__list-staffs__checkbox-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onChange: e => this.onCheckStaff(e.target.checked, staff._id),\n        checked: assigners.find(id => id === staff._id) ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withCookies(BtnAddWorkShiftAssigner);","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/BtnAddWorkShiftAssigner/BtnAddWorkShiftAssigner.js"],"names":["React","UsergroupAddOutlined","Button","Modal","Tooltip","message","List","Avatar","Row","Col","Checkbox","withCookies","PageBase","USER_ROLES","moment","_","BtnAddWorkShiftAssigner","constructor","props","state","isVisible","assigners","isAllStaffsChecked","selectedWorkShift","isWorkShiftAssigner","staff","assigner","workAssignments","find","wa","_id","setModalVisible","setState","onOK","workSchedules","selectedWorkSchedule","selectedWorkDay","ws","workShifts","wsc","workShift","wd","workDays","workDayInMonth","onCancel","onCheckStaff","checked","staffID","staffs","push","filter","id","length","onCheckAllStaffs","map","render","isBtnOpenDisabled","workWeekDay","workYear","Date","workMonth","format","startTime","endTime","e","target","width","avatar","fullname","role","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { UsergroupAddOutlined } from '@ant-design/icons';\nimport { Button, Modal, Tooltip, message, List, Avatar, Row, Col, Checkbox } from 'antd';\nimport './BtnAddWorkShiftAssigner.style.scss';\nimport { withCookies } from 'react-cookie';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\nimport USER_ROLES from '../../../../../constants/user-role.constant';\nimport moment from 'moment';\nimport * as _ from 'lodash';\n\nclass BtnAddWorkShiftAssigner extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false,\n      assigners: [],\n      isAllStaffsChecked: false,\n      selectedWorkShift: {}\n    }\n  }\n\n  isWorkShiftAssigner(selectedWorkShift, staff) {\n    const assigner = (selectedWorkShift.workAssignments || []).find(wa => wa.assigner._id === staff._id);\n    return assigner;\n  }\n\n  setModalVisible(isVisible) {\n    this.setState({ isVisible });\n  }\n\n  onOK() {\n    // const { assigners } = this.state;\n    // if (assigners.length === 0) {\n    //   message.error('Vui lòng chọn nhân viên cần phân công');\n    //   return;\n    // }\n\n    const {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift\n    } = this.props;\n\n    const workAssignments = [\n      {\n        \"description\": \"Được phép nghỉ sớm 15 phút\",\n        \"_id\": \"5e7236b3af071d55bbb38dc1\",\n        \"assigner\": \"5e71d63e9e24116b1210d5d8\",\n        \"manager\": \"5e6a530e9a59e035dc5e4e08\",\n        \"workShift\": {\n          \"_id\": \"5e72224d14b6be3c7daa163c\",\n          \"workSchedule\": {\n            \"_id\": \"5e7221ed14b6be3c7daa163b\",\n            \"month\": 4,\n            \"year\": 2020,\n            \"createdAt\": \"2020-03-18T13:28:13.880Z\",\n            \"updatedAt\": \"2020-03-18T13:30:34.714Z\",\n            \"__v\": 2\n          },\n          \"startTime\": \"2020-04-01T00:00:00.000Z\",\n          \"endTime\": \"2020-04-01T04:00:00.000Z\",\n          \"createdAt\": \"2020-03-18T13:29:49.714Z\",\n          \"updatedAt\": \"2020-03-18T13:29:49.714Z\",\n          \"__v\": 0\n        },\n        \"createdAt\": \"2020-03-18T14:56:51.798Z\",\n        \"updatedAt\": \"2020-03-18T14:56:51.798Z\",\n        \"__v\": 0\n      },\n      {\n        \"description\": \"Được phép nghỉ sớm 15 phút\",\n        \"_id\": \"5e742b90f18a3c2866bdfe35\",\n        \"assigner\": \"5e71d63e9e24116b1210d5d8\",\n        \"manager\": \"5e6a530e9a59e035dc5e4e08\",\n        \"workShift\": {\n          \"_id\": \"5e720d3587b1a126d54a2f38\",\n          \"workSchedule\": {\n            \"_id\": \"5e720d1787b1a126d54a2f37\",\n            \"month\": 3,\n            \"year\": 2020,\n            \"createdAt\": \"2020-03-18T11:59:19.234Z\",\n            \"updatedAt\": \"2020-03-22T16:19:39.644Z\",\n            \"__v\": 4\n          },\n          \"startTime\": \"2020-03-20T00:00:00.000Z\",\n          \"endTime\": \"2020-03-20T04:00:00.000Z\",\n          \"createdAt\": \"2020-03-18T11:59:49.781Z\",\n          \"updatedAt\": \"2020-03-20T02:33:52.126Z\",\n          \"__v\": 1\n        },\n        \"createdAt\": \"2020-03-20T02:33:52.018Z\",\n        \"updatedAt\": \"2020-03-20T02:33:52.018Z\",\n        \"__v\": 0\n      }\n    ];\n\n    selectedWorkShift.workAssignments = workAssignments;\n\n    for (let ws of selectedWorkDay.workShifts) {\n      if (ws._id === selectedWorkShift._id) {\n        ws = selectedWorkShift;\n        break;\n      }\n    }\n\n    for (let wsc of workSchedules) {\n      if (wsc._id === selectedWorkSchedule._id) {\n        const workShift = wsc.workShifts.find(ws => ws._id === selectedWorkShift._id);\n        workShift.workAssignments = workAssignments;\n\n        for (let wd of wsc.workDays) {\n          if (wd.workDayInMonth === selectedWorkDay.workDayInMonth) {\n            wd = selectedWorkDay;\n          }\n        }\n      }\n    }\n    \n  }\n\n  onCancel() {\n    this.setModalVisible(false);\n  }\n\n  onCheckStaff(checked, staffID) {\n    const { staffs } = this.props;\n    let { assigners } = this.state;\n\n    if (checked) {\n      assigners.push(staffID);\n    } else {\n      assigners = assigners.filter(id => id !== staffID);\n    }\n\n    if (assigners.length === staffs.length) {\n      this.setState({ isAllStaffsChecked: true });\n    } else {\n      this.setState({ isAllStaffsChecked: false });\n    }\n\n    this.setState({ assigners });\n  }\n\n  onCheckAllStaffs(checked) {\n    const { staffs } = this.props;\n\n    let { assigners } = this.state;\n    if (checked) {\n      assigners = staffs.map(staff => staff._id);\n    } else {\n      assigners = [];\n    }\n\n    this.setState({ assigners, isAllStaffsChecked: checked });\n  }\n\n  render() {\n    const { selectedWorkShift, selectedWorkDay, staffs } = this.props;\n    let { assigners } = this.state;\n\n    return (\n      <div className=\"add-work-shift-assigner\">\n        <Tooltip placement=\"bottom\" title=\"Thêm nhân viên\">\n          <Button\n            onClick={() => this.setModalVisible(true)}\n            className=\"add-work-shift-assigner__btn-open\"\n            type=\"link\"\n            icon={<UsergroupAddOutlined />}\n            disabled={this.props.isBtnOpenDisabled}\n          />\n        </Tooltip>\n        <Modal\n          title={`${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? moment(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') + ' (' + moment(selectedWorkShift.startTime).format('HH:mm') + ' - ' + moment(selectedWorkShift.endTime).format('HH:mm') + ') | Phân công' : ''}`}\n          centered\n          visible={this.state.isVisible}\n          onOk={() => this.onOK()}\n          onCancel={() => this.onCancel()}\n          okText=\"Phân công\"\n          cancelText=\"Hủy bỏ\"\n        >\n\n          <div className=\"add-work-shift-assigner__list-staffs\">\n            <Row className=\"add-work-shift-assigner__list-staffs__header\">\n              <Col span={21} className=\"add-work-shift-assigner__list-staffs__header__col-1\">\n                <span>Chưa được phân công ({staffs.length})</span>\n              </Col>\n              <Col span={3} className=\"add-work-shift-assigner__list-staffs__header__col-2\">\n                {staffs.length > 0 ? (\n                  <Checkbox\n                    onChange={e => this.onCheckAllStaffs(e.target.checked)}\n                    checked={this.state.isAllStaffsChecked} />\n                ) : <></>}\n              </Col>\n            </Row>\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={staffs}\n              renderItem={staff => (\n                <List.Item>\n                  <Row style={{ width: '100%' }} className=\"animated fadeIn\">\n                    <Col span={21}>\n                      <List.Item.Meta\n                        avatar={<Avatar src={staff.avatar} />}\n                        title={staff.fullname}\n                        description={USER_ROLES[staff.role].name}\n                      />\n                    </Col>\n                    <Col span={3} className=\"add-work-shift-assigner__list-staffs__checkbox-wrapper\">\n                      <Checkbox\n                        onChange={e => this.onCheckStaff(e.target.checked, staff._id)}\n                        checked={assigners.find(id => id === staff._id) ? true : false} />\n                    </Col>\n                  </Row>\n                </List.Item>\n              )}\n            />\n          </div>\n\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default withCookies(BtnAddWorkShiftAssigner);"]},"metadata":{},"sourceType":"module"}