{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/WorkAssignment.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Tabs, Select, List, Avatar, Button, Tooltip } from 'antd';\nimport { PlusCircleOutlined, UsergroupAddOutlined, MoreOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport USER_ROLE from '../../../../constants/user-role.constant';\nimport './WorkAssignment.style.scss';\nimport * as monent from 'moment';\nimport * as _ from 'lodash';\nimport WEEK_DAY from '../../../../constants/week-day.constant';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport { API } from '../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Option\n} = Select;\n\nclass WorkAssignment extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.loadWorkSchedules = async () => {\n      this.props.setAppLoading(true);\n      const res = await (await fetch(API.Manager.getWorkSchedules, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        }\n      })).json();\n      this.props.setAppLoading(false);\n      const _workSchedules = res.data.workSchedules;\n      let {\n        selectedWorkSchedule,\n        workSchedules\n      } = this.state;\n      selectedWorkSchedule = { ...selectedWorkSchedule,\n        ..._workSchedules[0]\n      };\n      workSchedules = [..._workSchedules];\n      this.setState({\n        selectedWorkSchedule,\n        workSchedules\n      });\n    };\n\n    this.state = {\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      workSchedules: []\n    };\n  }\n\n  componentWillMount() {\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    //this._isMounted = true;\n    if (this._isMounted) {\n      this.loadWorkSchedules();\n    }\n  }\n\n  toggleTaskWorkDayPanel() {\n    const {\n      isTaskWorkDayPanelShown\n    } = this.state;\n    this.setState({\n      isTaskWorkDayPanelShown: !isTaskWorkDayPanelShown\n    });\n  }\n\n  filterWorkShiftsByDay(workShifts, day) {\n    return workShifts.filter(ws => {\n      const wsDay = new Date(ws.startTime).getDate();\n      return day === wsDay;\n    });\n  }\n\n  generateWorkDays(workSchedule) {\n    const {\n      month,\n      year,\n      workShifts\n    } = workSchedule;\n    const workDaysLength = monent(`${month}-${year}`, 'M-YYYY').daysInMonth();\n    let workDays = [];\n    let temp = [];\n    let assigners = [];\n\n    for (let i = 1; i <= workDaysLength; i++) {\n      assigners.length = 0;\n      assigners = [];\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments) assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n\n      if (i % 7 === 0) {\n        workDays.push([...temp]);\n        temp.length = 0;\n      }\n    }\n\n    temp.length = 0;\n    temp = [];\n\n    for (let i = 29; i <= workDaysLength; i++) {\n      assigners = [];\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments) assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n    }\n\n    workDays.push([...temp]);\n    return workDays;\n  }\n\n  getWeekDay(day, month, year) {\n    const weekDayNumber = monent(`${day}-${month}-${year}`, 'DD-MM-YYYY').day();\n\n    switch (weekDayNumber) {\n      case 1:\n        return WEEK_DAY.MONDAY;\n\n      case 2:\n        return WEEK_DAY.TUESDAY;\n\n      case 3:\n        return WEEK_DAY.WEDNESDAY;\n\n      case 4:\n        return WEEK_DAY.THURSDAY;\n\n      case 5:\n        return WEEK_DAY.FRIDAY;\n\n      case 6:\n        return WEEK_DAY.SATURDAY;\n\n      case 0:\n        return WEEK_DAY.SUNDAY;\n\n      default:\n        return null;\n    }\n  }\n\n  getListMonths() {\n    let months = [];\n\n    for (let i = 1; i <= 12; i++) months.push({\n      text: 'Tháng ' + i,\n      value: i\n    });\n\n    return months;\n  }\n\n  getListYears() {\n    const {\n      workSchedules\n    } = this.state;\n    return _.uniqBy(workSchedules, w => w.year).map(w => ({\n      text: 'Năm ' + w.year,\n      value: w.year\n    }));\n  }\n\n  handleSelectWorkSchedule(selectedWorkSchedule, index) {\n    selectedWorkSchedule.index = index;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let {\n            selectedWorkShift\n          } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n\n          if (selectedWorkDay.workShifts.length > 0) {\n            selectedWorkShift = selectedWorkDay.workShifts[0];\n            selectedWorkShift.index = 0;\n          } else {\n            selectedWorkShift = {};\n          }\n\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n          break;\n        }\n      }\n    }\n\n    this.setState({\n      selectedWorkSchedule\n    });\n  }\n\n  handleSelectWorkDay(row, col) {\n    const {\n      selectedWorkSchedule\n    } = this.state;\n    let {\n      selectedWorkShift\n    } = this.state;\n    const selectedWorkDay = selectedWorkSchedule.workDays[row][col];\n\n    if (selectedWorkDay.workShifts.length > 0) {\n      selectedWorkShift = selectedWorkDay.workShifts[0];\n      selectedWorkShift.index = 0;\n    } else {\n      selectedWorkShift = {};\n    }\n\n    this.setState({\n      selectedWorkDay,\n      selectedWorkShift\n    });\n  }\n\n  handleSelectWorkShift(workShift, index) {\n    workShift.index = index;\n    this.setState({\n      selectedWorkShift: workShift\n    });\n  }\n\n  render() {\n    let {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift\n    } = this.state;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n    const listYears = this.getListYears();\n\n    if (Object.keys(selectedWorkDay).length === 0) {\n      for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n        for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n          if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n            selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n            selectedWorkShift = selectedWorkDay.workShifts[0];\n            selectedWorkShift.index = 0;\n            break;\n          }\n        }\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"work-assignment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"work-assignment__left-sidebar\",\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"animated slideInLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"work-assignment__left-sidebar__btn-add-work-schedule\",\n      icon: React.createElement(PlusCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Th\\xEAm l\\u1ECBch l\\xE0m vi\\u1EC7c\"), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"N\\u0103m l\\xE0m vi\\u1EC7c\")), (listYears || []).length > 0 ? React.createElement(Select, {\n      defaultValue: listYears[0].value,\n      onChange: e => console.log(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, listYears.map((y, i) => React.createElement(Option, {\n      key: i,\n      value: y.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, y.text))) : React.createElement(React.Fragment, null), React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__list-tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__left-sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Th\\xE1ng l\\xE0m vi\\u1EC7c\")), React.createElement(List, {\n      size: \"small\",\n      dataSource: workSchedules,\n      renderItem: (item, index) => {\n        return React.createElement(List.Item, {\n          className: `work-assignment__left-sidebar__list-tasks__item \n                          ${index === selectedWorkSchedule.index ? 'work-assignment__left-sidebar__list-tasks__item--selected' : ''}`,\n          onClick: () => this.handleSelectWorkSchedule(item, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(Col, {\n          span: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"work-assignment__left-sidebar__list-tasks__item__task-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, \"Th\\xE1ng \", item.month))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      className: \"work-assignment__content animated fadeIn\",\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel animated slideInRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, `${selectedWorkDay.workWeekDay}, ${monent(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY')}`), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs work-assignment__content__task-work-day-panel__panel__main__list-work-shifts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Ca l\\xE0m vi\\u1EC7c trong ng\\xE0y\")), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm ca l\\xE0m vi\\u1EC7c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\",\n      type: \"link\",\n      icon: React.createElement(PlusCircleOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: selectedWorkDay.workShifts,\n      renderItem: (ws, index) => React.createElement(List.Item, {\n        onClick: () => this.handleSelectWorkShift(ws, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: `${index === selectedWorkShift.index ? 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item--selected' : 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item'}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"T\\u1EEB \", monent(ws.startTime).format('HH:mm'), \" \\u0111\\u1EBFn \", monent(ws.endTime).format('HH:mm'))), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-close\",\n        type: \"link\",\n        icon: React.createElement(CloseCircleOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Chi ti\\u1EBFt ca l\\xE0m vi\\u1EC7c\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"B\\u1EAFt \\u0111\\u1EA7u\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"K\\u1EBFt th\\xFAc\"))), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, selectedWorkShift.startTime ? monent(selectedWorkShift.startTime).format('HH:mm') : ''), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, selectedWorkShift.endTime ? monent(selectedWorkShift.endTime).format('HH:mm') : '')))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Nh\\xE2n vi\\xEAn ph\\u1EE5 tr\\xE1ch (\", selectedWorkShift.workAssignments ? selectedWorkShift.workAssignments.length : 0, \")\")), React.createElement(Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm nh\\xE2n vi\\xEAn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\",\n      type: \"link\",\n      icon: React.createElement(UsergroupAddOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: selectedWorkShift.workAssignments,\n      renderItem: wa => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__staff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: wa.assigner.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395\n          },\n          __self: this\n        }),\n        title: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396\n          },\n          __self: this\n        }, wa.assigner.fullname),\n        description: USER_ROLE[wa.assigner.role].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-more\",\n        type: \"link\",\n        icon: React.createElement(MoreOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        className: \"work-assignment__content__task-work-day-panel__panel__main__list-staffs__note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, wa.description))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"work-assignment__content__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"work-assignment__content__header__dark-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"work-assignment__content__header__task-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Th\\xE1ng \", selectedWorkSchedule.month, \" n\\u0103m \", selectedWorkSchedule.year))), React.createElement(\"div\", {\n      className: \"work-assignment__content__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"1\",\n      tabBarGutter: 50,\n      className: \"work-assignment__content__body__tabs\",\n      onChange: e => console.log(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: \"L\\u1ECBch l\\xE0m vi\\u1EC7c\",\n      key: \"1\",\n      className: \"work-assignment__content__body__tabs__work-schedule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, selectedWorkSchedule.workDays.map((row, iRow) => React.createElement(Row, {\n      key: iRow + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, row.map((col, iCol) => React.createElement(Col, {\n      key: `${iRow + 1}_${iCol}`,\n      span: 2,\n      className: `\n                            work-assignment__content__body__tabs__work-schedule__work-day animated fadeIn \n                            ${col.workDayInMonth === selectedWorkDay.workDayInMonth ? 'work-assignment__content__body__tabs__work-schedule__work-day--selected' : ''}\n                          `,\n      onClick: () => this.handleSelectWorkDay(iRow, iCol),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: `\n                              work-assignment__content__body__tabs__work-schedule__work-day__day-in-month\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__day-in-month--sunday' : ''}\n                            `,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, col.workDayInMonth), React.createElement(\"span\", {\n      className: `\n                              work-assignment__content__body__tabs__work-schedule__work-day__week-day\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__week-day--sunday' : ''}\n                            `,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, col.workWeekDay), React.createElement(\"div\", {\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, col.staffs.slice(0, 2).map(staff => React.createElement(Avatar, {\n      key: staff._id,\n      size: 16,\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar\",\n      src: staff.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    })), col.staffs.length > 2 ? React.createElement(\"div\", {\n      className: \"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar--plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, \"+\", col.staffs.slice(2).length)) : React.createElement(React.Fragment, null))))))), React.createElement(TabPane, {\n      tab: \"\\u0110\\xE3 ph\\xE2n c\\xF4ng (3)\",\n      key: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, \"Content of Tab Pane 2\"))))));\n  }\n\n}\n\nexport default connect(null, actions)(withCookies(WorkAssignment));","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/WorkAssignment.js"],"names":["React","Component","Row","Col","Tabs","Select","List","Avatar","Button","Tooltip","PlusCircleOutlined","UsergroupAddOutlined","MoreOutlined","CloseCircleOutlined","USER_ROLE","monent","_","WEEK_DAY","withCookies","connect","actions","API","COOKIE_NAMES","TabPane","Option","WorkAssignment","constructor","props","_isMounted","loadWorkSchedules","setAppLoading","res","fetch","Manager","getWorkSchedules","method","headers","cookies","get","token","json","_workSchedules","data","workSchedules","selectedWorkSchedule","state","setState","index","workDays","selectedWorkDay","selectedWorkShift","componentWillMount","componentDidMount","toggleTaskWorkDayPanel","isTaskWorkDayPanelShown","filterWorkShiftsByDay","workShifts","day","filter","ws","wsDay","Date","startTime","getDate","generateWorkDays","workSchedule","month","year","workDaysLength","daysInMonth","temp","assigners","i","length","filteredWorkShifts","wa","workAssignments","push","assigner","uniqBy","a","_id","workWeekDay","getWeekDay","workDayInMonth","workMonth","workYear","staffs","weekDayNumber","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","getListMonths","months","text","value","getListYears","w","map","handleSelectWorkSchedule","j","handleSelectWorkDay","row","col","handleSelectWorkShift","workShift","render","listYears","Object","keys","e","console","log","y","item","format","endTime","width","avatar","fullname","role","name","description","iRow","iCol","slice","staff"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,MAAvC,EAA+CC,MAA/C,EAAuDC,OAAvD,QAAsE,MAAtE;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,EAAmDC,YAAnD,EAAiEC,mBAAjE,QAA4F,mBAA5F;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AACA,OAAO,6BAAP;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,yCAArB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,GAAT,QAAoB,oCAApB;AACA,SAASC,YAAT,QAA6B,4CAA7B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcnB,IAApB;AACA,MAAM;AAAEoB,EAAAA;AAAF,IAAanB,MAAnB;;AAEA,MAAMoB,cAAN,SAA6BxB,SAA7B,CAAuC;AAGrCyB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFnBC,UAEmB,GAFN,KAEM;;AAAA,SAwBnBC,iBAxBmB,GAwBC,YAAY;AAC9B,WAAKF,KAAL,CAAWG,aAAX,CAAyB,IAAzB;AACA,YAAMC,GAAG,GAAG,MAAM,CAAC,MAAMC,KAAK,CAC5BX,GAAG,CAACY,OAAJ,CAAYC,gBADgB,EAE5B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB,iCADT;AAEP,mBAAS,KAAKT,KAAL,CAAWU,OAAX,CAAmBC,GAAnB,CAAuBhB,YAAY,CAACiB,KAApC;AAFF;AAFX,OAF4B,CAAZ,EASfC,IATe,EAAlB;AAWA,WAAKb,KAAL,CAAWG,aAAX,CAAyB,KAAzB;AACA,YAAMW,cAAc,GAAGV,GAAG,CAACW,IAAJ,CAASC,aAAhC;AACA,UAAI;AAAEC,QAAAA,oBAAF;AAAwBD,QAAAA;AAAxB,UAA0C,KAAKE,KAAnD;AACAD,MAAAA,oBAAoB,GAAG,EAAE,GAAGA,oBAAL;AAA2B,WAAGH,cAAc,CAAC,CAAD;AAA5C,OAAvB;AACAE,MAAAA,aAAa,GAAG,CAAC,GAAGF,cAAJ,CAAhB;AAEA,WAAKK,QAAL,CAAc;AAAEF,QAAAA,oBAAF;AAAwBD,QAAAA;AAAxB,OAAd;AACD,KA5CkB;;AAEjB,SAAKE,KAAL,GAAa;AACXD,MAAAA,oBAAoB,EAAE;AACpBG,QAAAA,KAAK,EAAE,CADa;AAEpBC,QAAAA,QAAQ,EAAE;AAFU,OADX;AAKXC,MAAAA,eAAe,EAAE,EALN;AAMXC,MAAAA,iBAAiB,EAAE,EANR;AAOXP,MAAAA,aAAa,EAAE;AAPJ,KAAb;AASD;;AAEDQ,EAAAA,kBAAkB,GAAG;AACnB,SAAKvB,UAAL,GAAkB,KAAlB;AACD;;AAEDwB,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAI,KAAKxB,UAAT,EAAqB;AACnB,WAAKC,iBAAL;AACD;AACF;;AAwBDwB,EAAAA,sBAAsB,GAAG;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAA8B,KAAKT,KAAzC;AACA,SAAKC,QAAL,CAAc;AAAEQ,MAAAA,uBAAuB,EAAE,CAACA;AAA5B,KAAd;AACD;;AAEDC,EAAAA,qBAAqB,CAACC,UAAD,EAAaC,GAAb,EAAkB;AACrC,WAAOD,UAAU,CAACE,MAAX,CAAkBC,EAAE,IAAI;AAC7B,YAAMC,KAAK,GAAG,IAAIC,IAAJ,CAASF,EAAE,CAACG,SAAZ,EAAuBC,OAAvB,EAAd;AACA,aAAON,GAAG,KAAKG,KAAf;AACD,KAHM,CAAP;AAID;;AAEDI,EAAAA,gBAAgB,CAACC,YAAD,EAAe;AAC7B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeX,MAAAA;AAAf,QAA8BS,YAApC;AACA,UAAMG,cAAc,GAAGrD,MAAM,CAAE,GAAEmD,KAAM,IAAGC,IAAK,EAAlB,EAAqB,QAArB,CAAN,CAAqCE,WAArC,EAAvB;AACA,QAAIrB,QAAQ,GAAG,EAAf;AACA,QAAIsB,IAAI,GAAG,EAAX;AACA,QAAIC,SAAS,GAAG,EAAhB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,cAArB,EAAqCI,CAAC,EAAtC,EAA0C;AACxCD,MAAAA,SAAS,CAACE,MAAV,GAAmB,CAAnB;AACAF,MAAAA,SAAS,GAAG,EAAZ;AAEA,YAAMG,kBAAkB,GAAG,KAAKnB,qBAAL,CAA2BC,UAA3B,EAAuCgB,CAAvC,CAA3B;;AACA,WAAK,MAAMb,EAAX,IAAiBe,kBAAjB,EAAqC;AACnC,aAAK,MAAMC,EAAX,IAAiBhB,EAAE,CAACiB,eAApB,EACEL,SAAS,CAACM,IAAV,CAAeF,EAAE,CAACG,QAAlB;AACH;;AAEDP,MAAAA,SAAS,GAAGvD,CAAC,CAAC+D,MAAF,CAASR,SAAT,EAAoBS,CAAC,IAAIA,CAAC,CAACC,GAA3B,CAAZ;AACAX,MAAAA,IAAI,CAACO,IAAL,CAAU;AACRK,QAAAA,WAAW,EAAE,KAAKC,UAAL,CAAgBX,CAAhB,EAAmBN,KAAnB,EAA0BC,IAA1B,CADL;AAERiB,QAAAA,cAAc,EAAEZ,CAFR;AAGRa,QAAAA,SAAS,EAAEnB,KAHH;AAIRoB,QAAAA,QAAQ,EAAEnB,IAJF;AAKRoB,QAAAA,MAAM,EAAE,CAAC,GAAGhB,SAAJ,CALA;AAMRf,QAAAA,UAAU,EAAE,CAAC,GAAGkB,kBAAJ;AANJ,OAAV;;AASA,UAAIF,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACfxB,QAAAA,QAAQ,CAAC6B,IAAT,CAAc,CAAC,GAAGP,IAAJ,CAAd;AACAA,QAAAA,IAAI,CAACG,MAAL,GAAc,CAAd;AACD;AACF;;AAEDH,IAAAA,IAAI,CAACG,MAAL,GAAc,CAAd;AACAH,IAAAA,IAAI,GAAG,EAAP;;AAEA,SAAK,IAAIE,CAAC,GAAG,EAAb,EAAiBA,CAAC,IAAIJ,cAAtB,EAAsCI,CAAC,EAAvC,EAA2C;AACzCD,MAAAA,SAAS,GAAG,EAAZ;AAEA,YAAMG,kBAAkB,GAAG,KAAKnB,qBAAL,CAA2BC,UAA3B,EAAuCgB,CAAvC,CAA3B;;AACA,WAAK,MAAMb,EAAX,IAAiBe,kBAAjB,EAAqC;AACnC,aAAK,MAAMC,EAAX,IAAiBhB,EAAE,CAACiB,eAApB,EACEL,SAAS,CAACM,IAAV,CAAeF,EAAE,CAACG,QAAlB;AACH;;AAEDP,MAAAA,SAAS,GAAGvD,CAAC,CAAC+D,MAAF,CAASR,SAAT,EAAoBS,CAAC,IAAIA,CAAC,CAACC,GAA3B,CAAZ;AACAX,MAAAA,IAAI,CAACO,IAAL,CAAU;AACRK,QAAAA,WAAW,EAAE,KAAKC,UAAL,CAAgBX,CAAhB,EAAmBN,KAAnB,EAA0BC,IAA1B,CADL;AAERiB,QAAAA,cAAc,EAAEZ,CAFR;AAGRa,QAAAA,SAAS,EAAEnB,KAHH;AAIRoB,QAAAA,QAAQ,EAAEnB,IAJF;AAKRoB,QAAAA,MAAM,EAAE,CAAC,GAAGhB,SAAJ,CALA;AAMRf,QAAAA,UAAU,EAAE,CAAC,GAAGkB,kBAAJ;AANJ,OAAV;AAQD;;AACD1B,IAAAA,QAAQ,CAAC6B,IAAT,CAAc,CAAC,GAAGP,IAAJ,CAAd;AAEA,WAAOtB,QAAP;AACD;;AAEDmC,EAAAA,UAAU,CAAC1B,GAAD,EAAMS,KAAN,EAAaC,IAAb,EAAmB;AAC3B,UAAMqB,aAAa,GAAGzE,MAAM,CAAE,GAAE0C,GAAI,IAAGS,KAAM,IAAGC,IAAK,EAAzB,EAA4B,YAA5B,CAAN,CAAgDV,GAAhD,EAAtB;;AACA,YAAQ+B,aAAR;AACE,WAAK,CAAL;AAAQ,eAAOvE,QAAQ,CAACwE,MAAhB;;AACR,WAAK,CAAL;AAAQ,eAAOxE,QAAQ,CAACyE,OAAhB;;AACR,WAAK,CAAL;AAAQ,eAAOzE,QAAQ,CAAC0E,SAAhB;;AACR,WAAK,CAAL;AAAQ,eAAO1E,QAAQ,CAAC2E,QAAhB;;AACR,WAAK,CAAL;AAAQ,eAAO3E,QAAQ,CAAC4E,MAAhB;;AACR,WAAK,CAAL;AAAQ,eAAO5E,QAAQ,CAAC6E,QAAhB;;AACR,WAAK,CAAL;AAAQ,eAAO7E,QAAQ,CAAC8E,MAAhB;;AACR;AAAS,eAAO,IAAP;AARX;AAUD;;AAEDC,EAAAA,aAAa,GAAG;AACd,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EACEyB,MAAM,CAACpB,IAAP,CAAY;AACVqB,MAAAA,IAAI,EAAE,WAAW1B,CADP;AAEV2B,MAAAA,KAAK,EAAE3B;AAFG,KAAZ;;AAIF,WAAOyB,MAAP;AACD;;AAEDG,EAAAA,YAAY,GAAG;AACb,UAAM;AAAEzD,MAAAA;AAAF,QAAoB,KAAKE,KAA/B;AACA,WAAO7B,CAAC,CAAC+D,MAAF,CAASpC,aAAT,EAAwB0D,CAAC,IAAIA,CAAC,CAAClC,IAA/B,EAAqCmC,GAArC,CAAyCD,CAAC,KAAK;AAAEH,MAAAA,IAAI,EAAE,SAASG,CAAC,CAAClC,IAAnB;AAAyBgC,MAAAA,KAAK,EAAEE,CAAC,CAAClC;AAAlC,KAAL,CAA1C,CAAP;AACD;;AAEDoC,EAAAA,wBAAwB,CAAC3D,oBAAD,EAAuBG,KAAvB,EAA8B;AACpDH,IAAAA,oBAAoB,CAACG,KAArB,GAA6BA,KAA7B;AACAH,IAAAA,oBAAoB,CAACI,QAArB,GAAgC,KAAKgB,gBAAL,CAAsBpB,oBAAtB,CAAhC;;AAEA,SAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,oBAAoB,CAACI,QAArB,CAA8ByB,MAAlD,EAA0DD,CAAC,EAA3D,EAA+D;AAC7D,WAAK,IAAIgC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5D,oBAAoB,CAACI,QAArB,CAA8BwB,CAA9B,EAAiCC,MAArD,EAA6D+B,CAAC,EAA9D,EAAkE;AAChE,YAAI5D,oBAAoB,CAACI,QAArB,CAA8BwB,CAA9B,EAAiCgC,CAAjC,EAAoCjB,MAApC,CAA2Cd,MAA3C,GAAoD,CAAxD,EAA2D;AACzD,cAAI;AAAEvB,YAAAA;AAAF,cAAwB,KAAKL,KAAjC;AACA,gBAAMI,eAAe,GAAGL,oBAAoB,CAACI,QAArB,CAA8BwB,CAA9B,EAAiCgC,CAAjC,CAAxB;;AAEA,cAAIvD,eAAe,CAACO,UAAhB,CAA2BiB,MAA3B,GAAoC,CAAxC,EAA2C;AACzCvB,YAAAA,iBAAiB,GAAGD,eAAe,CAACO,UAAhB,CAA2B,CAA3B,CAApB;AACAN,YAAAA,iBAAiB,CAACH,KAAlB,GAA0B,CAA1B;AACD,WAHD,MAGO;AACLG,YAAAA,iBAAiB,GAAG,EAApB;AACD;;AAED,eAAKJ,QAAL,CAAc;AACZG,YAAAA,eADY;AAEZC,YAAAA;AAFY,WAAd;AAKA;AACD;AACF;AACF;;AAED,SAAKJ,QAAL,CAAc;AAAEF,MAAAA;AAAF,KAAd;AACD;;AAED6D,EAAAA,mBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAW;AAC5B,UAAM;AAAE/D,MAAAA;AAAF,QAA2B,KAAKC,KAAtC;AACA,QAAI;AAAEK,MAAAA;AAAF,QAAwB,KAAKL,KAAjC;AACA,UAAMI,eAAe,GAAGL,oBAAoB,CAACI,QAArB,CAA8B0D,GAA9B,EAAmCC,GAAnC,CAAxB;;AAEA,QAAI1D,eAAe,CAACO,UAAhB,CAA2BiB,MAA3B,GAAoC,CAAxC,EAA2C;AACzCvB,MAAAA,iBAAiB,GAAGD,eAAe,CAACO,UAAhB,CAA2B,CAA3B,CAApB;AACAN,MAAAA,iBAAiB,CAACH,KAAlB,GAA0B,CAA1B;AACD,KAHD,MAGO;AACLG,MAAAA,iBAAiB,GAAG,EAApB;AACD;;AAED,SAAKJ,QAAL,CAAc;AACZG,MAAAA,eADY;AAEZC,MAAAA;AAFY,KAAd;AAID;;AAED0D,EAAAA,qBAAqB,CAACC,SAAD,EAAY9D,KAAZ,EAAmB;AACtC8D,IAAAA,SAAS,CAAC9D,KAAV,GAAkBA,KAAlB;AACA,SAAKD,QAAL,CAAc;AAAEI,MAAAA,iBAAiB,EAAE2D;AAArB,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEnE,MAAAA,aAAF;AAAiBC,MAAAA,oBAAjB;AAAuCK,MAAAA,eAAvC;AAAwDC,MAAAA;AAAxD,QAA8E,KAAKL,KAAvF;AACAD,IAAAA,oBAAoB,CAACI,QAArB,GAAgC,KAAKgB,gBAAL,CAAsBpB,oBAAtB,CAAhC;AACA,UAAMmE,SAAS,GAAG,KAAKX,YAAL,EAAlB;;AAEA,QAAIY,MAAM,CAACC,IAAP,CAAYhE,eAAZ,EAA6BwB,MAA7B,KAAwC,CAA5C,EAA+C;AAC7C,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,oBAAoB,CAACI,QAArB,CAA8ByB,MAAlD,EAA0DD,CAAC,EAA3D,EAA+D;AAC7D,aAAK,IAAIgC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5D,oBAAoB,CAACI,QAArB,CAA8BwB,CAA9B,EAAiCC,MAArD,EAA6D+B,CAAC,EAA9D,EAAkE;AAChE,cAAI5D,oBAAoB,CAACI,QAArB,CAA8BwB,CAA9B,EAAiCgC,CAAjC,EAAoCjB,MAApC,CAA2Cd,MAA3C,GAAoD,CAAxD,EAA2D;AACzDxB,YAAAA,eAAe,GAAGL,oBAAoB,CAACI,QAArB,CAA8BwB,CAA9B,EAAiCgC,CAAjC,CAAlB;AACAtD,YAAAA,iBAAiB,GAAGD,eAAe,CAACO,UAAhB,CAA2B,CAA3B,CAApB;AACAN,YAAAA,iBAAiB,CAACH,KAAlB,GAA0B,CAA1B;AACA;AACD;AACF;AACF;AACF;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,+BAAf;AAA+C,MAAA,IAAI,EAAE,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,sDADZ;AAEE,MAAA,IAAI,EAAE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAKE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CALF,EAUI,CAACgE,SAAS,IAAI,EAAd,EAAkBtC,MAAlB,GAA2B,CAA3B,GACE,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAEsC,SAAS,CAAC,CAAD,CAAT,CAAaZ,KAAnC;AAA0C,MAAA,QAAQ,EAAEe,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,SAAS,CAACT,GAAV,CAAc,CAACe,CAAD,EAAI7C,CAAJ,KACb,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAE6C,CAAC,CAAClB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCkB,CAAC,CAACnB,IAAnC,CADD,CADH,CADF,GAMI,yCAhBR,EAmBE;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CAFF,EAME,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,UAAU,EAAEvD,aAFd;AAGE,MAAA,UAAU,EAAE,CAAC2E,IAAD,EAAOvE,KAAP,KAAiB;AAC3B,eACE,oBAAC,IAAD,CAAM,IAAN;AACE,UAAA,SAAS,EACN;4BACCA,KAAK,KAAKH,oBAAoB,CAACG,KAA/B,GAAuC,2DAAvC,GAAqG,EAAG,EAH9G;AAKE,UAAA,OAAO,EAAE,MAAM,KAAKwD,wBAAL,CAA8Be,IAA9B,EAAoCvE,KAApC,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,SAAS,EAAC,4DAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoFuE,IAAI,CAACpD,KAAzF,CADF,CADF,CANF,CADF;AAcD,OAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAnBF,CADF,CADF,EAkDE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,0CAAf;AAA0D,MAAA,IAAI,EAAE,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,4EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GAAEjB,eAAe,CAACiC,WAAY,KAAInE,MAAM,CAAC,IAAI8C,IAAJ,CAASZ,eAAe,CAACqC,QAAzB,EAAmCrC,eAAe,CAACoC,SAAhB,GAA4B,CAA/D,EAAkEpC,eAAe,CAACmC,cAAlF,CAAD,CAAN,CAA0GmC,MAA1G,CAAiH,YAAjH,CAA+H,EADpK,CADF,EAKE;AACE,MAAA,SAAS,EAAC,sJADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,mEAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,CADF,EAKE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,KAAK,EAAC,6BAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,4EADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CALF,CAFF,EAgBE;AAAK,MAAA,SAAS,EAAC,uFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,UAAU,EAAC,YADb;AAEE,MAAA,UAAU,EAAEtE,eAAe,CAACO,UAF9B;AAGE,MAAA,UAAU,EAAE,CAACG,EAAD,EAAKZ,KAAL,KACV,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,OAAO,EAAE,MAAM,KAAK6D,qBAAL,CAA2BjD,EAA3B,EAA+BZ,KAA/B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AACE,QAAA,SAAS,EAAG,GAAEA,KAAK,KAAKG,iBAAiB,CAACH,KAA5B,GACZ,8FADY,GAEV,oFAAqF,EAH3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMhC,MAAM,CAAC4C,EAAE,CAACG,SAAJ,CAAN,CAAqByD,MAArB,CAA4B,OAA5B,CADN,qBACiDxG,MAAM,CAAC4C,EAAE,CAAC6D,OAAJ,CAAN,CAAmBD,MAAnB,CAA0B,OAA1B,CADjD,CADF,CALF,EAUE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,oFADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,CADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,CALF,EAkDE;AAAK,MAAA,SAAS,EAAC,uFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,2FADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,CADF,CADF,EAQE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,2FADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACErE,iBAAiB,CAACY,SAAlB,GAA8B/C,MAAM,CAACmC,iBAAiB,CAACY,SAAnB,CAAN,CAAoCyD,MAApC,CAA2C,OAA3C,CAA9B,GAAoF,EADtF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACErE,iBAAiB,CAACsE,OAAlB,GAA4BzG,MAAM,CAACmC,iBAAiB,CAACsE,OAAnB,CAAN,CAAkCD,MAAlC,CAAyC,OAAzC,CAA5B,GAAgF,EADlF,CALF,CADF,CARF,CAFF,EAsBE;AAAK,MAAA,SAAS,EAAC,yEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,mEAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEIrE,iBAAiB,CAAC0B,eAAlB,GAAoC1B,iBAAiB,CAAC0B,eAAlB,CAAkCH,MAAtE,GAA+E,CAFnF,MADF,CADF,EAOE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,KAAK,EAAC,yBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,4EADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAPF,CADF,EAkBE;AAAK,MAAA,SAAS,EAAC,kFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,UAAU,EAAC,YADb;AAEE,MAAA,UAAU,EAAEvB,iBAAiB,CAAC0B,eAFhC;AAGE,MAAA,UAAU,EAAED,EAAE,IACZ,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAE8C,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,QAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAE9C,EAAE,CAACG,QAAH,CAAY4C,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADV;AAEE,QAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO/C,EAAE,CAACG,QAAH,CAAY6C,QAAnB,CAFT;AAGE,QAAA,WAAW,EAAE7G,SAAS,CAAC6D,EAAE,CAACG,QAAH,CAAY8C,IAAb,CAAT,CAA4BC,IAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAQE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,mFADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,CADF,EAgBE;AAAG,QAAA,SAAS,EAAC,+EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGlD,EAAE,CAACmD,WADN,CAhBF,CADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBF,CAtBF,CAlDF,CAFF,CADF,CADF,EAkIE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWlF,oBAAoB,CAACsB,KAAhC,gBAA4CtB,oBAAoB,CAACuB,IAAjE,CADF,CAFF,CAlIF,EAwIE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,gBAAgB,EAAC,GADnB;AAEE,MAAA,YAAY,EAAE,EAFhB;AAGE,MAAA,SAAS,EAAC,sCAHZ;AAIE,MAAA,QAAQ,EAAE+C,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,4BAAb;AAA6B,MAAA,GAAG,EAAC,GAAjC;AAAqC,MAAA,SAAS,EAAC,qDAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtE,oBAAoB,CAACI,QAArB,CAA8BsD,GAA9B,CAAkC,CAACI,GAAD,EAAMqB,IAAN,KACjC,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,IAAI,GAAG,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGrB,GAAG,CAACJ,GAAJ,CAAQ,CAACK,GAAD,EAAMqB,IAAN,KACP,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAG,GAAED,IAAI,GAAG,CAAE,IAAGC,IAAK,EAA9B;AAAiC,MAAA,IAAI,EAAE,CAAvC;AACE,MAAA,SAAS,EAAG;;8BAERrB,GAAG,CAACvB,cAAJ,KAAuBnC,eAAe,CAACmC,cAAvC,GACA,yEADA,GAC4E,EAC7E;2BALL;AAOE,MAAA,OAAO,EAAE,MAAM,KAAKqB,mBAAL,CAAyBsB,IAAzB,EAA+BC,IAA/B,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AACE,MAAA,SAAS,EAAG;;gCAERrB,GAAG,CAACzB,WAAJ,KAAoBjE,QAAQ,CAAC8E,MAA7B,GAAsC,qFAAtC,GAA8H,EAAG;6BAHvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIMY,GAAG,CAACvB,cAJV,CARF,EAaE;AACE,MAAA,SAAS,EAAG;;gCAERuB,GAAG,CAACzB,WAAJ,KAAoBjE,QAAQ,CAAC8E,MAA7B,GAAsC,iFAAtC,GAA0H,EAAG;6BAHnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIMY,GAAG,CAACzB,WAJV,CAbF,EAkBE;AAAK,MAAA,SAAS,EAAC,uEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGyB,GAAG,CAACpB,MAAJ,CAAW0C,KAAX,CAAiB,CAAjB,EAAoB,CAApB,EAAuB3B,GAAvB,CAA2B4B,KAAK,IAC/B,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACjD,GADb;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,SAAS,EAAC,+EAHZ;AAIE,MAAA,GAAG,EAAEiD,KAAK,CAACR,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,EAOGf,GAAG,CAACpB,MAAJ,CAAWd,MAAX,GAAoB,CAApB,GACC;AAAK,MAAA,SAAS,EAAC,qFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQkC,GAAG,CAACpB,MAAJ,CAAW0C,KAAX,CAAiB,CAAjB,EAAoBxD,MAA5B,CADF,CADD,GAIG,yCAXN,CAlBF,CADD,CADH,CADD,CADH,CALF,EA6CE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,gCAAb;AAAgC,MAAA,GAAG,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BA7CF,CADF,CAxIF,CAlDF,CADF,CADF;AAmPD;;AAhdoC;;AAkdvC,eAAetD,OAAO,CAAC,IAAD,EAAOC,OAAP,CAAP,CAAuBF,WAAW,CAACO,cAAD,CAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Tabs, Select, List, Avatar, Button, Tooltip } from 'antd';\nimport { PlusCircleOutlined, UsergroupAddOutlined, MoreOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport USER_ROLE from '../../../../constants/user-role.constant';\nimport './WorkAssignment.style.scss';\nimport * as monent from 'moment';\nimport * as _ from 'lodash';\nimport WEEK_DAY from '../../../../constants/week-day.constant';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../redux/actions';\nimport { API } from '../../../../constants/api.constant';\nimport { COOKIE_NAMES } from '../../../../constants/cookie-name.constant';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nclass WorkAssignment extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedWorkSchedule: {\n        index: 0,\n        workDays: []\n      },\n      selectedWorkDay: {},\n      selectedWorkShift: {},\n      workSchedules: []\n    }\n  }\n\n  componentWillMount() {\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    //this._isMounted = true;\n    if (this._isMounted) {\n      this.loadWorkSchedules();\n    }\n  }\n\n  loadWorkSchedules = async () => {\n    this.props.setAppLoading(true);\n    const res = await (await fetch(\n      API.Manager.getWorkSchedules,\n      {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n          'token': this.props.cookies.get(COOKIE_NAMES.token)\n        }\n      }\n    )).json();\n\n    this.props.setAppLoading(false);\n    const _workSchedules = res.data.workSchedules;\n    let { selectedWorkSchedule, workSchedules } = this.state;\n    selectedWorkSchedule = { ...selectedWorkSchedule, ..._workSchedules[0] };\n    workSchedules = [..._workSchedules];\n\n    this.setState({ selectedWorkSchedule, workSchedules });\n  }\n\n  toggleTaskWorkDayPanel() {\n    const { isTaskWorkDayPanelShown } = this.state;\n    this.setState({ isTaskWorkDayPanelShown: !isTaskWorkDayPanelShown });\n  }\n\n  filterWorkShiftsByDay(workShifts, day) {\n    return workShifts.filter(ws => {\n      const wsDay = new Date(ws.startTime).getDate();\n      return day === wsDay;\n    });\n  }\n\n  generateWorkDays(workSchedule) {\n    const { month, year, workShifts } = workSchedule;\n    const workDaysLength = monent(`${month}-${year}`, 'M-YYYY').daysInMonth();\n    let workDays = [];\n    let temp = [];\n    let assigners = [];\n\n    for (let i = 1; i <= workDaysLength; i++) {\n      assigners.length = 0;\n      assigners = [];\n\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments)\n          assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n\n      if (i % 7 === 0) {\n        workDays.push([...temp]);\n        temp.length = 0;\n      }\n    }\n\n    temp.length = 0;\n    temp = [];\n\n    for (let i = 29; i <= workDaysLength; i++) {\n      assigners = [];\n\n      const filteredWorkShifts = this.filterWorkShiftsByDay(workShifts, i);\n      for (const ws of filteredWorkShifts) {\n        for (const wa of ws.workAssignments)\n          assigners.push(wa.assigner);\n      }\n\n      assigners = _.uniqBy(assigners, a => a._id);\n      temp.push({\n        workWeekDay: this.getWeekDay(i, month, year),\n        workDayInMonth: i,\n        workMonth: month,\n        workYear: year,\n        staffs: [...assigners],\n        workShifts: [...filteredWorkShifts]\n      });\n    }\n    workDays.push([...temp]);\n\n    return workDays;\n  }\n\n  getWeekDay(day, month, year) {\n    const weekDayNumber = monent(`${day}-${month}-${year}`, 'DD-MM-YYYY').day();\n    switch (weekDayNumber) {\n      case 1: return WEEK_DAY.MONDAY;\n      case 2: return WEEK_DAY.TUESDAY;\n      case 3: return WEEK_DAY.WEDNESDAY;\n      case 4: return WEEK_DAY.THURSDAY;\n      case 5: return WEEK_DAY.FRIDAY;\n      case 6: return WEEK_DAY.SATURDAY;\n      case 0: return WEEK_DAY.SUNDAY;\n      default: return null\n    }\n  }\n\n  getListMonths() {\n    let months = [];\n    for (let i = 1; i <= 12; i++)\n      months.push({\n        text: 'Tháng ' + i,\n        value: i\n      });\n    return months;\n  }\n\n  getListYears() {\n    const { workSchedules } = this.state;\n    return _.uniqBy(workSchedules, w => w.year).map(w => ({ text: 'Năm ' + w.year, value: w.year }));\n  }\n\n  handleSelectWorkSchedule(selectedWorkSchedule, index) {\n    selectedWorkSchedule.index = index;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n\n    for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n      for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n        if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n          let { selectedWorkShift } = this.state;\n          const selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n\n          if (selectedWorkDay.workShifts.length > 0) {\n            selectedWorkShift = selectedWorkDay.workShifts[0];\n            selectedWorkShift.index = 0;\n          } else {\n            selectedWorkShift = {}\n          }\n\n          this.setState({\n            selectedWorkDay,\n            selectedWorkShift\n          });\n\n          break;\n        }\n      }\n    }\n\n    this.setState({ selectedWorkSchedule });\n  }\n\n  handleSelectWorkDay(row, col) {\n    const { selectedWorkSchedule } = this.state;\n    let { selectedWorkShift } = this.state;\n    const selectedWorkDay = selectedWorkSchedule.workDays[row][col];\n\n    if (selectedWorkDay.workShifts.length > 0) {\n      selectedWorkShift = selectedWorkDay.workShifts[0];\n      selectedWorkShift.index = 0;\n    } else {\n      selectedWorkShift = {}\n    }\n\n    this.setState({\n      selectedWorkDay,\n      selectedWorkShift\n    });\n  }\n\n  handleSelectWorkShift(workShift, index) {\n    workShift.index = index;\n    this.setState({ selectedWorkShift: workShift });\n  }\n\n  render() {\n    let { workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift } = this.state;\n    selectedWorkSchedule.workDays = this.generateWorkDays(selectedWorkSchedule);\n    const listYears = this.getListYears();\n\n    if (Object.keys(selectedWorkDay).length === 0) {\n      for (let i = 0; i < selectedWorkSchedule.workDays.length; i++) {\n        for (let j = 0; j < selectedWorkSchedule.workDays[i].length; j++) {\n          if (selectedWorkSchedule.workDays[i][j].staffs.length > 0) {\n            selectedWorkDay = selectedWorkSchedule.workDays[i][j];\n            selectedWorkShift = selectedWorkDay.workShifts[0];\n            selectedWorkShift.index = 0;\n            break;\n          }\n        }\n      }\n    }\n\n    return (\n      <div className=\"work-assignment\">\n        <Row>\n          <Col className=\"work-assignment__left-sidebar\" span={4}>\n            <div className=\"animated slideInLeft\">\n              <Button\n                className=\"work-assignment__left-sidebar__btn-add-work-schedule\"\n                icon={<PlusCircleOutlined />}>Thêm lịch làm việc</Button>\n\n              <div className=\"work-assignment__left-sidebar__title\">\n                <span>Năm làm việc</span>\n              </div>\n\n              {\n                (listYears || []).length > 0 ? (\n                  <Select defaultValue={listYears[0].value} onChange={e => console.log(e)}>\n                    {listYears.map((y, i) => (\n                      <Option key={i} value={y.value}>{y.text}</Option>\n                    ))}\n                  </Select>\n                ) : <></>\n              }\n\n              <div className=\"work-assignment__left-sidebar__list-tasks\">\n\n                <div className=\"work-assignment__left-sidebar__title\">\n                  <span>Tháng làm việc</span>\n                </div>\n\n                <List\n                  size=\"small\"\n                  dataSource={workSchedules}\n                  renderItem={(item, index) => {\n                    return (\n                      <List.Item\n                        className={\n                          `work-assignment__left-sidebar__list-tasks__item \n                          ${index === selectedWorkSchedule.index ? 'work-assignment__left-sidebar__list-tasks__item--selected' : ''}`\n                        }\n                        onClick={() => this.handleSelectWorkSchedule(item, index)}>\n                        <Row>\n                          <Col span={24}>\n                            <span className=\"work-assignment__left-sidebar__list-tasks__item__task-name\">Tháng {item.month}</span>\n                          </Col>\n                        </Row>\n                      </List.Item>\n                    )\n                  }}\n                />\n              </div>\n            </div>\n          </Col>\n          <Col className=\"work-assignment__content animated fadeIn\" span={20}>\n            <div className=\"work-assignment__content__task-work-day-panel\">\n              <div className=\"work-assignment__content__task-work-day-panel__panel animated slideInRight\">\n\n                <div className=\"work-assignment__content__task-work-day-panel__panel__main\">\n                  <h3>{\n                    `${selectedWorkDay.workWeekDay}, ${monent(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY')}`\n                  }</h3>\n\n                  <div\n                    className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs work-assignment__content__task-work-day-panel__panel__main__list-work-shifts\">\n                    <Row>\n                      <Col span={21}>\n                        <span className=\"work-assignment__content__task-work-day-panel__panel__main__title\">\n                          Ca làm việc trong ngày</span>\n                      </Col>\n                      <Col span={3}>\n                        <Tooltip placement=\"bottom\" title=\"Thêm ca làm việc\">\n                          <Button\n                            className=\"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\"\n                            type=\"link\"\n                            icon={<PlusCircleOutlined />} />\n                        </Tooltip>\n                      </Col>\n                    </Row>\n                    <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__wrapper\">\n                      <List\n                        itemLayout=\"horizontal\"\n                        dataSource={selectedWorkDay.workShifts}\n                        renderItem={(ws, index) => (\n                          <List.Item onClick={() => this.handleSelectWorkShift(ws, index)}>\n                            <Row\n                              className={`${index === selectedWorkShift.index ?\n                                'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item--selected'\n                                : 'work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__item'}`}\n                            >\n                              <Col span={22}>\n                                <span>\n                                  Từ {monent(ws.startTime).format('HH:mm')} đến {monent(ws.endTime).format('HH:mm')}\n                                </span>\n                              </Col>\n                              <Col span={2}>\n                                <Button\n                                  className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-close\"\n                                  type=\"link\"\n                                  icon={<CloseCircleOutlined />} />\n                              </Col>\n                            </Row>\n                          </List.Item>\n                        )}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__details\">\n                    <h3>Chi tiết ca làm việc</h3>\n                    <Row>\n                      <Col span={8}>\n                        <ul\n                          className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--label\">\n                          <li>Bắt đầu</li>\n                          <li>Kết thúc</li>\n                        </ul>\n                      </Col>\n                      <Col span={16}>\n                        <ul\n                          className=\"work-assignment__content__task-work-day-panel__panel__main__list-work-shifts__time--value\">\n                          <li>{\n                            selectedWorkShift.startTime ? monent(selectedWorkShift.startTime).format('HH:mm') : ''\n                          }</li>\n                          <li>{\n                            selectedWorkShift.endTime ? monent(selectedWorkShift.endTime).format('HH:mm') : ''\n                          }</li>\n                        </ul>\n                      </Col>\n                    </Row>\n                    <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs\">\n                      <Row>\n                        <Col span={21}>\n                          <span className=\"work-assignment__content__task-work-day-panel__panel__main__title\">\n                            Nhân viên phụ trách ({\n                              selectedWorkShift.workAssignments ? selectedWorkShift.workAssignments.length : 0\n                            })</span>\n                        </Col>\n                        <Col span={3}>\n                          <Tooltip placement=\"bottom\" title=\"Thêm nhân viên\">\n                            <Button\n                              className=\"work-assignment__content__task-work-day-panel__panel__btn-open-list-staffs\"\n                              type=\"link\"\n                              icon={<UsergroupAddOutlined />} />\n                          </Tooltip>\n                        </Col>\n                      </Row>\n\n                      <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__wrapper\">\n                        <List\n                          itemLayout=\"horizontal\"\n                          dataSource={selectedWorkShift.workAssignments}\n                          renderItem={wa => (\n                            <List.Item>\n                              <div className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__staff\">\n                                <Row style={{ width: '100%' }}>\n                                  <Col span={22}>\n                                    <List.Item.Meta\n                                      avatar={<Avatar src={wa.assigner.avatar} />}\n                                      title={<span>{wa.assigner.fullname}</span>}\n                                      description={USER_ROLE[wa.assigner.role].name}\n                                    />\n                                  </Col>\n                                  <Col span={2}>\n                                    <Button\n                                      className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__btn-more\"\n                                      type=\"link\"\n                                      icon={<MoreOutlined />} />\n                                  </Col>\n                                </Row>\n                                <p className=\"work-assignment__content__task-work-day-panel__panel__main__list-staffs__note\">\n                                  {wa.description}\n                                </p>\n                              </div>\n                            </List.Item>\n                          )}\n                        />\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"work-assignment__content__header\">\n              <div className=\"work-assignment__content__header__dark-bg\"></div>\n              <div className=\"work-assignment__content__header__task-name\">\n                <h3>Tháng {selectedWorkSchedule.month} năm {selectedWorkSchedule.year}</h3>\n              </div>\n            </div>\n            <div className=\"work-assignment__content__body\">\n              <Tabs\n                defaultActiveKey=\"1\"\n                tabBarGutter={50}\n                className=\"work-assignment__content__body__tabs\"\n                onChange={e => console.log(e)}>\n                <TabPane tab=\"Lịch làm việc\" key=\"1\" className=\"work-assignment__content__body__tabs__work-schedule\">\n                  {selectedWorkSchedule.workDays.map((row, iRow) => (\n                    <Row key={iRow + 1}>\n                      {row.map((col, iCol) => (\n                        <Col key={`${iRow + 1}_${iCol}`} span={2}\n                          className={`\n                            work-assignment__content__body__tabs__work-schedule__work-day animated fadeIn \n                            ${col.workDayInMonth === selectedWorkDay.workDayInMonth ?\n                              'work-assignment__content__body__tabs__work-schedule__work-day--selected' : ''\n                            }\n                          `}\n                          onClick={() => this.handleSelectWorkDay(iRow, iCol)}>\n                          <span\n                            className={`\n                              work-assignment__content__body__tabs__work-schedule__work-day__day-in-month\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__day-in-month--sunday' : ''}\n                            `}>{col.workDayInMonth}</span>\n                          <span\n                            className={`\n                              work-assignment__content__body__tabs__work-schedule__work-day__week-day\n                              ${col.workWeekDay === WEEK_DAY.SUNDAY ? 'work-assignment__content__body__tabs__work-schedule__work-day__week-day--sunday' : ''}\n                            `}>{col.workWeekDay}</span>\n                          <div className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs\">\n                            {col.staffs.slice(0, 2).map(staff => (\n                              <Avatar\n                                key={staff._id}\n                                size={16}\n                                className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar\"\n                                src={staff.avatar} />))}\n                            {col.staffs.length > 2 ? (\n                              <div className=\"work-assignment__content__body__tabs__work-schedule__work-day__staffs__avatar--plus\">\n                                <span>+{col.staffs.slice(2).length}</span>\n                              </div>\n                            ) : <></>}\n                          </div>\n                        </Col>\n                      ))}\n                    </Row>\n                  ))}\n                </TabPane>\n                <TabPane tab=\"Đã phân công (3)\" key=\"2\">\n                  Content of Tab Pane 2\n                </TabPane>\n              </Tabs>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\nexport default connect(null, actions)(withCookies(WorkAssignment));\n"]},"metadata":{},"sourceType":"module"}