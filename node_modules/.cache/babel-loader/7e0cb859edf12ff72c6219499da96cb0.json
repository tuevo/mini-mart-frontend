{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/BtnAddWorkShiftAssigner/BtnAddWorkShiftAssigner.js\";\nimport React from 'react';\nimport { UsergroupAddOutlined } from '@ant-design/icons';\nimport { Button, Modal, Tooltip, message, List, Avatar, Row, Col, Checkbox } from 'antd';\nimport './BtnAddWorkShiftAssigner.style.scss';\nimport { withCookies } from 'react-cookie';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\nimport USER_ROLES from '../../../../../constants/user-role.constant';\nimport moment from 'moment';\n\nclass BtnAddWorkShiftAssigner extends PageBase {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false,\n      assigners: [],\n      isAllStaffsChecked: false,\n      selectedWorkShift: {}\n    };\n  }\n\n  isWorkShiftAssigner(selectedWorkShift, staff) {\n    const assigner = (selectedWorkShift.workAssignments || []).find(wa => wa.assigner._id === staff._id);\n    return assigner;\n  }\n\n  setModalVisible(isVisible) {\n    this.setState({\n      isVisible\n    });\n  }\n\n  onOK() {\n    // const { assigners } = this.state;\n    // if (assigners.length === 0) {\n    //   message.error('Vui lòng chọn nhân viên cần phân công');\n    //   return;\n    // }\n    const {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift\n    } = this.props;\n    const workAssignments = [{\n      \"description\": null,\n      \"_id\": \"5e785ae1f5048556161460f0\",\n      \"assigner\": {\n        \"role\": \"CASHIER\",\n        \"fullname\": \"Dung Pham\",\n        \"email\": \"dung@gmail.com\",\n        \"phone\": \"0999999999\",\n        \"address\": \"Vietnam\",\n        \"dateOfBirth\": \"04-08-1998\",\n        \"avatar\": \"https://scontent.fsgn6-1.fna.fbcdn.net/v/t1.0-9/28168054_2064772783757318_4194417013391662777_n.jpg?_nc_cat=104&_nc_sid=85a577&_nc_ohc=jcO8fsJWo3AAX9oynQ8&_nc_ht=scontent.fsgn6-1.fna&oh=cbaab9a75f62cdc618cbf562007c22a8&oe=5E9E9B4A\",\n        \"salaryRate\": 1,\n        \"_id\": \"5e785a93f5048556161460ee\",\n        \"sex\": \"Nam\",\n        \"createdAt\": \"2020-03-23T06:43:31.527Z\",\n        \"updatedAt\": \"2020-03-23T06:43:31.527Z\",\n        \"__v\": 0\n      },\n      \"manager\": \"5e6a530e9a59e035dc5e4e08\",\n      \"workShift\": \"5e720d3587b1a126d54a2f38\",\n      \"createdAt\": \"2020-03-23T06:44:49.926Z\",\n      \"updatedAt\": \"2020-03-23T06:44:49.926Z\",\n      \"__v\": 0\n    }, {\n      \"description\": null,\n      \"_id\": \"5e785ae1f5048556161460f1\",\n      \"assigner\": {\n        \"role\": \"CASHIER\",\n        \"fullname\": \"Binh Nguyen\",\n        \"email\": \"binh@gmail.com\",\n        \"phone\": \"0999999999\",\n        \"address\": \"Vietnam\",\n        \"dateOfBirth\": \"04-08-1998\",\n        \"avatar\": \"https://scontent.fsgn6-1.fna.fbcdn.net/v/t1.0-1/25660132_393324611118090_8035775677168632988_n.jpg?_nc_cat=110&_nc_sid=dbb9e7&_nc_ohc=lDYPntp6dMYAX-S1I78&_nc_ht=scontent.fsgn6-1.fna&oh=cb35b9611cc5cca80293ad4174a67491&oe=5E9E279C\",\n        \"salaryRate\": 1,\n        \"_id\": \"5e785abdf5048556161460ef\",\n        \"sex\": \"Nam\",\n        \"createdAt\": \"2020-03-23T06:44:13.928Z\",\n        \"updatedAt\": \"2020-03-23T06:44:13.928Z\",\n        \"__v\": 0\n      },\n      \"manager\": \"5e6a530e9a59e035dc5e4e08\",\n      \"workShift\": \"5e720d3587b1a126d54a2f38\",\n      \"createdAt\": \"2020-03-23T06:44:49.927Z\",\n      \"updatedAt\": \"2020-03-23T06:44:49.927Z\",\n      \"__v\": 0\n    }];\n    selectedWorkShift.workAssignments = workAssignments;\n\n    for (let ws of selectedWorkDay.workShifts) {\n      if (ws._id === selectedWorkShift._id) {\n        ws = selectedWorkShift;\n        break;\n      }\n    }\n\n    for (let wsc of workSchedules) {\n      if (wsc._id === selectedWorkSchedule._id) {\n        const workShift = wsc.workShifts.find(ws => ws._id === selectedWorkShift._id);\n        workShift.workAssignments = workAssignments;\n\n        for (let wd of wsc.workDays) {\n          if (wd.workDayInMonth === selectedWorkDay.workDayInMonth) {\n            wd = selectedWorkDay;\n          }\n        }\n      }\n    }\n\n    this.props.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n    message.success('SUCCESS');\n    this.setModalVisible(false);\n  }\n\n  onCancel() {\n    this.setModalVisible(false);\n  }\n\n  onCheckStaff(checked, staffID) {\n    const {\n      staffs\n    } = this.props;\n    let {\n      assigners\n    } = this.state;\n\n    if (checked) {\n      assigners.push(staffID);\n    } else {\n      assigners = assigners.filter(id => id !== staffID);\n    }\n\n    if (assigners.length === staffs.length) {\n      this.setState({\n        isAllStaffsChecked: true\n      });\n    } else {\n      this.setState({\n        isAllStaffsChecked: false\n      });\n    }\n\n    this.setState({\n      assigners\n    });\n  }\n\n  onCheckAllStaffs(checked) {\n    const {\n      staffs\n    } = this.props;\n    let {\n      assigners\n    } = this.state;\n\n    if (checked) {\n      assigners = staffs.map(staff => staff._id);\n    } else {\n      assigners = [];\n    }\n\n    this.setState({\n      assigners,\n      isAllStaffsChecked: checked\n    });\n  }\n\n  render() {\n    const {\n      selectedWorkShift,\n      selectedWorkDay,\n      staffs,\n      isBtnOpenDisabled\n    } = this.props;\n    let {\n      assigners\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"add-work-shift-assigner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"bottom\",\n      title: \"Th\\xEAm nh\\xE2n vi\\xEAn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setModalVisible(true),\n      className: \"add-work-shift-assigner__btn-open\",\n      type: \"link\",\n      icon: React.createElement(UsergroupAddOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }),\n      disabled: this.props.isBtnOpenDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      title: React.createElement(\"span\", {\n        style: {\n          color: '#ff8220'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, `${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? moment(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') + ' (' + moment(selectedWorkShift.startTime).format('HH:mm') + ' - ' + moment(selectedWorkShift.endTime).format('HH:mm') + ') | Phân ca làm việc' : ''}`),\n      centered: true,\n      visible: this.state.isVisible,\n      onOk: () => this.onOK(),\n      onCancel: () => this.onCancel(),\n      okText: \"Ph\\xE2n c\\xF4ng\",\n      cancelText: \"H\\u1EE7y b\\u1ECF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Nh\\xE2n vi\\xEAn ch\\u01B0a ph\\xE2n c\\xF4ng (\", staffs.length, \")\"), React.createElement(\"div\", {\n      className: \"add-work-shift-assigner__list-staffs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"add-work-shift-assigner__list-staffs__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 21,\n      className: \"add-work-shift-assigner__list-staffs__header__col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Ch\\u1ECDn t\\u1EA5t c\\u1EA3\")), React.createElement(Col, {\n      span: 3,\n      className: \"add-work-shift-assigner__list-staffs__header__col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, staffs.length > 0 ? React.createElement(Checkbox, {\n      onChange: e => this.onCheckAllStaffs(e.target.checked),\n      checked: this.state.isAllStaffsChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null))), React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: staffs,\n      renderItem: staff => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          width: '100%'\n        },\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 21,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: staff.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }),\n        title: staff.fullname,\n        description: USER_ROLES[staff.role].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 3,\n        className: \"add-work-shift-assigner__list-staffs__checkbox-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onChange: e => this.onCheckStaff(e.target.checked, staff._id),\n        checked: assigners.find(id => id === staff._id) ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withCookies(BtnAddWorkShiftAssigner);","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/pages/Manager/WorkAssignment/BtnAddWorkShiftAssigner/BtnAddWorkShiftAssigner.js"],"names":["React","UsergroupAddOutlined","Button","Modal","Tooltip","message","List","Avatar","Row","Col","Checkbox","withCookies","PageBase","USER_ROLES","moment","BtnAddWorkShiftAssigner","constructor","props","state","isVisible","assigners","isAllStaffsChecked","selectedWorkShift","isWorkShiftAssigner","staff","assigner","workAssignments","find","wa","_id","setModalVisible","setState","onOK","workSchedules","selectedWorkSchedule","selectedWorkDay","ws","workShifts","wsc","workShift","wd","workDays","workDayInMonth","reloadWorkSchedules","success","onCancel","onCheckStaff","checked","staffID","staffs","push","filter","id","length","onCheckAllStaffs","map","render","isBtnOpenDisabled","color","workWeekDay","workYear","Date","workMonth","format","startTime","endTime","e","target","width","avatar","fullname","role","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAgDC,MAAhD,EAAwDC,GAAxD,EAA6DC,GAA7D,EAAkEC,QAAlE,QAAkF,MAAlF;AACA,OAAO,sCAAP;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,QAAP,MAAqB,yCAArB;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,uBAAN,SAAsCH,QAAtC,CAA+C;AAC7CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,kBAAkB,EAAE,KAHT;AAIXC,MAAAA,iBAAiB,EAAE;AAJR,KAAb;AAMD;;AAEDC,EAAAA,mBAAmB,CAACD,iBAAD,EAAoBE,KAApB,EAA2B;AAC5C,UAAMC,QAAQ,GAAG,CAACH,iBAAiB,CAACI,eAAlB,IAAqC,EAAtC,EAA0CC,IAA1C,CAA+CC,EAAE,IAAIA,EAAE,CAACH,QAAH,CAAYI,GAAZ,KAAoBL,KAAK,CAACK,GAA/E,CAAjB;AACA,WAAOJ,QAAP;AACD;;AAEDK,EAAAA,eAAe,CAACX,SAAD,EAAY;AACzB,SAAKY,QAAL,CAAc;AAAEZ,MAAAA;AAAF,KAAd;AACD;;AAEDa,EAAAA,IAAI,GAAG;AACL;AACA;AACA;AACA;AACA;AAEA,UAAM;AACJC,MAAAA,aADI;AAEJC,MAAAA,oBAFI;AAGJC,MAAAA,eAHI;AAIJb,MAAAA;AAJI,QAKF,KAAKL,KALT;AAOA,UAAMS,eAAe,GAAG,CACtB;AACE,qBAAe,IADjB;AAEE,aAAO,0BAFT;AAGE,kBAAY;AACV,gBAAQ,SADE;AAEV,oBAAY,WAFF;AAGV,iBAAS,gBAHC;AAIV,iBAAS,YAJC;AAKV,mBAAW,SALD;AAMV,uBAAe,YANL;AAOV,kBAAU,wOAPA;AAQV,sBAAc,CARJ;AASV,eAAO,0BATG;AAUV,eAAO,KAVG;AAWV,qBAAa,0BAXH;AAYV,qBAAa,0BAZH;AAaV,eAAO;AAbG,OAHd;AAkBE,iBAAW,0BAlBb;AAmBE,mBAAa,0BAnBf;AAoBE,mBAAa,0BApBf;AAqBE,mBAAa,0BArBf;AAsBE,aAAO;AAtBT,KADsB,EAyBtB;AACE,qBAAe,IADjB;AAEE,aAAO,0BAFT;AAGE,kBAAY;AACV,gBAAQ,SADE;AAEV,oBAAY,aAFF;AAGV,iBAAS,gBAHC;AAIV,iBAAS,YAJC;AAKV,mBAAW,SALD;AAMV,uBAAe,YANL;AAOV,kBAAU,uOAPA;AAQV,sBAAc,CARJ;AASV,eAAO,0BATG;AAUV,eAAO,KAVG;AAWV,qBAAa,0BAXH;AAYV,qBAAa,0BAZH;AAaV,eAAO;AAbG,OAHd;AAkBE,iBAAW,0BAlBb;AAmBE,mBAAa,0BAnBf;AAoBE,mBAAa,0BApBf;AAqBE,mBAAa,0BArBf;AAsBE,aAAO;AAtBT,KAzBsB,CAAxB;AAmDAJ,IAAAA,iBAAiB,CAACI,eAAlB,GAAoCA,eAApC;;AAEA,SAAK,IAAIU,EAAT,IAAeD,eAAe,CAACE,UAA/B,EAA2C;AACzC,UAAID,EAAE,CAACP,GAAH,KAAWP,iBAAiB,CAACO,GAAjC,EAAsC;AACpCO,QAAAA,EAAE,GAAGd,iBAAL;AACA;AACD;AACF;;AAED,SAAK,IAAIgB,GAAT,IAAgBL,aAAhB,EAA+B;AAC7B,UAAIK,GAAG,CAACT,GAAJ,KAAYK,oBAAoB,CAACL,GAArC,EAA0C;AACxC,cAAMU,SAAS,GAAGD,GAAG,CAACD,UAAJ,CAAeV,IAAf,CAAoBS,EAAE,IAAIA,EAAE,CAACP,GAAH,KAAWP,iBAAiB,CAACO,GAAvD,CAAlB;AACAU,QAAAA,SAAS,CAACb,eAAV,GAA4BA,eAA5B;;AAEA,aAAK,IAAIc,EAAT,IAAeF,GAAG,CAACG,QAAnB,EAA6B;AAC3B,cAAID,EAAE,CAACE,cAAH,KAAsBP,eAAe,CAACO,cAA1C,EAA0D;AACxDF,YAAAA,EAAE,GAAGL,eAAL;AACD;AACF;AACF;AACF;;AAED,SAAKlB,KAAL,CAAW0B,mBAAX,CAA+BV,aAA/B,EAA8CC,oBAA9C,EAAoEC,eAApE,EAAqFb,iBAArF;AACAjB,IAAAA,OAAO,CAACuC,OAAR,CAAgB,SAAhB;AACA,SAAKd,eAAL,CAAqB,KAArB;AACD;;AAEDe,EAAAA,QAAQ,GAAG;AACT,SAAKf,eAAL,CAAqB,KAArB;AACD;;AAEDgB,EAAAA,YAAY,CAACC,OAAD,EAAUC,OAAV,EAAmB;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKhC,KAAxB;AACA,QAAI;AAAEG,MAAAA;AAAF,QAAgB,KAAKF,KAAzB;;AAEA,QAAI6B,OAAJ,EAAa;AACX3B,MAAAA,SAAS,CAAC8B,IAAV,CAAeF,OAAf;AACD,KAFD,MAEO;AACL5B,MAAAA,SAAS,GAAGA,SAAS,CAAC+B,MAAV,CAAiBC,EAAE,IAAIA,EAAE,KAAKJ,OAA9B,CAAZ;AACD;;AAED,QAAI5B,SAAS,CAACiC,MAAV,KAAqBJ,MAAM,CAACI,MAAhC,EAAwC;AACtC,WAAKtB,QAAL,CAAc;AAAEV,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACD,KAFD,MAEO;AACL,WAAKU,QAAL,CAAc;AAAEV,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACD;;AAED,SAAKU,QAAL,CAAc;AAAEX,MAAAA;AAAF,KAAd;AACD;;AAEDkC,EAAAA,gBAAgB,CAACP,OAAD,EAAU;AACxB,UAAM;AAAEE,MAAAA;AAAF,QAAa,KAAKhC,KAAxB;AAEA,QAAI;AAAEG,MAAAA;AAAF,QAAgB,KAAKF,KAAzB;;AACA,QAAI6B,OAAJ,EAAa;AACX3B,MAAAA,SAAS,GAAG6B,MAAM,CAACM,GAAP,CAAW/B,KAAK,IAAIA,KAAK,CAACK,GAA1B,CAAZ;AACD,KAFD,MAEO;AACLT,MAAAA,SAAS,GAAG,EAAZ;AACD;;AAED,SAAKW,QAAL,CAAc;AAAEX,MAAAA,SAAF;AAAaC,MAAAA,kBAAkB,EAAE0B;AAAjC,KAAd;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElC,MAAAA,iBAAF;AAAqBa,MAAAA,eAArB;AAAsCc,MAAAA,MAAtC;AAA8CQ,MAAAA;AAA9C,QAAoE,KAAKxC,KAA/E;AACA,QAAI;AAAEG,MAAAA;AAAF,QAAgB,KAAKF,KAAzB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,KAAK,EAAC,yBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKY,eAAL,CAAqB,IAArB,CADjB;AAEE,MAAA,SAAS,EAAC,mCAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAKE,MAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWwC,iBALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAUE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,GAAEvB,eAAe,CAACwB,WAAhB,GAA8BxB,eAAe,CAACwB,WAAhB,GAA8B,IAA5D,GAAmE,EAAG,IAAGxB,eAAe,CAACyB,QAAhB,GAA2B9C,MAAM,CAAC,IAAI+C,IAAJ,CAAS1B,eAAe,CAACyB,QAAzB,EAAmCzB,eAAe,CAAC2B,SAAhB,GAA4B,CAA/D,EAAkE3B,eAAe,CAACO,cAAlF,CAAD,CAAN,CAA0GqB,MAA1G,CAAiH,YAAjH,IAAiI,IAAjI,GAAwIjD,MAAM,CAACQ,iBAAiB,CAAC0C,SAAnB,CAAN,CAAoCD,MAApC,CAA2C,OAA3C,CAAxI,GAA8L,KAA9L,GAAsMjD,MAAM,CAACQ,iBAAiB,CAAC2C,OAAnB,CAAN,CAAkCF,MAAlC,CAAyC,OAAzC,CAAtM,GAA0P,sBAArR,GAA8S,EAAG,EAAja,CADT;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,OAAO,EAAE,KAAK7C,KAAL,CAAWC,SAHtB;AAIE,MAAA,IAAI,EAAE,MAAM,KAAKa,IAAL,EAJd;AAKE,MAAA,QAAQ,EAAE,MAAM,KAAKa,QAAL,EALlB;AAME,MAAA,MAAM,EAAC,iBANT;AAOE,MAAA,UAAU,EAAC,kBAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAA+BI,MAAM,CAACI,MAAtC,MATF,EAWE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,SAAS,EAAC,qDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF,EAIE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,SAAS,EAAC,qDAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,MAAM,CAACI,MAAP,GAAgB,CAAhB,GACC,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAEa,CAAC,IAAI,KAAKZ,gBAAL,CAAsBY,CAAC,CAACC,MAAF,CAASpB,OAA/B,CADjB;AAEE,MAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWG,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAIG,yCALN,CAJF,CADF,EAaE,oBAAC,IAAD;AACE,MAAA,UAAU,EAAC,YADb;AAEE,MAAA,UAAU,EAAE4B,MAFd;AAGE,MAAA,UAAU,EAAEzB,KAAK,IACf,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAE4C,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAA+B,QAAA,SAAS,EAAC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,QAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAE5C,KAAK,CAAC6C,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADV;AAEE,QAAA,KAAK,EAAE7C,KAAK,CAAC8C,QAFf;AAGE,QAAA,WAAW,EAAEzD,UAAU,CAACW,KAAK,CAAC+C,IAAP,CAAV,CAAuBC,IAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAQE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAc,QAAA,SAAS,EAAC,wDAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAEN,CAAC,IAAI,KAAKpB,YAAL,CAAkBoB,CAAC,CAACC,MAAF,CAASpB,OAA3B,EAAoCvB,KAAK,CAACK,GAA1C,CADjB;AAEE,QAAA,OAAO,EAAET,SAAS,CAACO,IAAV,CAAeyB,EAAE,IAAIA,EAAE,KAAK5B,KAAK,CAACK,GAAlC,IAAyC,IAAzC,GAAgD,KAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,CADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CAXF,CAVF,CADF;AA8DD;;AAvN4C;;AAyN/C,eAAelB,WAAW,CAACI,uBAAD,CAA1B","sourcesContent":["import React from 'react';\nimport { UsergroupAddOutlined } from '@ant-design/icons';\nimport { Button, Modal, Tooltip, message, List, Avatar, Row, Col, Checkbox } from 'antd';\nimport './BtnAddWorkShiftAssigner.style.scss';\nimport { withCookies } from 'react-cookie';\nimport PageBase from '../../../../utilities/PageBase/PageBase';\nimport USER_ROLES from '../../../../../constants/user-role.constant';\nimport moment from 'moment';\n\nclass BtnAddWorkShiftAssigner extends PageBase {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false,\n      assigners: [],\n      isAllStaffsChecked: false,\n      selectedWorkShift: {}\n    }\n  }\n\n  isWorkShiftAssigner(selectedWorkShift, staff) {\n    const assigner = (selectedWorkShift.workAssignments || []).find(wa => wa.assigner._id === staff._id);\n    return assigner;\n  }\n\n  setModalVisible(isVisible) {\n    this.setState({ isVisible });\n  }\n\n  onOK() {\n    // const { assigners } = this.state;\n    // if (assigners.length === 0) {\n    //   message.error('Vui lòng chọn nhân viên cần phân công');\n    //   return;\n    // }\n\n    const {\n      workSchedules,\n      selectedWorkSchedule,\n      selectedWorkDay,\n      selectedWorkShift\n    } = this.props;\n\n    const workAssignments = [\n      {\n        \"description\": null,\n        \"_id\": \"5e785ae1f5048556161460f0\",\n        \"assigner\": {\n          \"role\": \"CASHIER\",\n          \"fullname\": \"Dung Pham\",\n          \"email\": \"dung@gmail.com\",\n          \"phone\": \"0999999999\",\n          \"address\": \"Vietnam\",\n          \"dateOfBirth\": \"04-08-1998\",\n          \"avatar\": \"https://scontent.fsgn6-1.fna.fbcdn.net/v/t1.0-9/28168054_2064772783757318_4194417013391662777_n.jpg?_nc_cat=104&_nc_sid=85a577&_nc_ohc=jcO8fsJWo3AAX9oynQ8&_nc_ht=scontent.fsgn6-1.fna&oh=cbaab9a75f62cdc618cbf562007c22a8&oe=5E9E9B4A\",\n          \"salaryRate\": 1,\n          \"_id\": \"5e785a93f5048556161460ee\",\n          \"sex\": \"Nam\",\n          \"createdAt\": \"2020-03-23T06:43:31.527Z\",\n          \"updatedAt\": \"2020-03-23T06:43:31.527Z\",\n          \"__v\": 0\n        },\n        \"manager\": \"5e6a530e9a59e035dc5e4e08\",\n        \"workShift\": \"5e720d3587b1a126d54a2f38\",\n        \"createdAt\": \"2020-03-23T06:44:49.926Z\",\n        \"updatedAt\": \"2020-03-23T06:44:49.926Z\",\n        \"__v\": 0\n      },\n      {\n        \"description\": null,\n        \"_id\": \"5e785ae1f5048556161460f1\",\n        \"assigner\": {\n          \"role\": \"CASHIER\",\n          \"fullname\": \"Binh Nguyen\",\n          \"email\": \"binh@gmail.com\",\n          \"phone\": \"0999999999\",\n          \"address\": \"Vietnam\",\n          \"dateOfBirth\": \"04-08-1998\",\n          \"avatar\": \"https://scontent.fsgn6-1.fna.fbcdn.net/v/t1.0-1/25660132_393324611118090_8035775677168632988_n.jpg?_nc_cat=110&_nc_sid=dbb9e7&_nc_ohc=lDYPntp6dMYAX-S1I78&_nc_ht=scontent.fsgn6-1.fna&oh=cb35b9611cc5cca80293ad4174a67491&oe=5E9E279C\",\n          \"salaryRate\": 1,\n          \"_id\": \"5e785abdf5048556161460ef\",\n          \"sex\": \"Nam\",\n          \"createdAt\": \"2020-03-23T06:44:13.928Z\",\n          \"updatedAt\": \"2020-03-23T06:44:13.928Z\",\n          \"__v\": 0\n        },\n        \"manager\": \"5e6a530e9a59e035dc5e4e08\",\n        \"workShift\": \"5e720d3587b1a126d54a2f38\",\n        \"createdAt\": \"2020-03-23T06:44:49.927Z\",\n        \"updatedAt\": \"2020-03-23T06:44:49.927Z\",\n        \"__v\": 0\n      }\n    ];\n\n    selectedWorkShift.workAssignments = workAssignments;\n\n    for (let ws of selectedWorkDay.workShifts) {\n      if (ws._id === selectedWorkShift._id) {\n        ws = selectedWorkShift;\n        break;\n      }\n    }\n\n    for (let wsc of workSchedules) {\n      if (wsc._id === selectedWorkSchedule._id) {\n        const workShift = wsc.workShifts.find(ws => ws._id === selectedWorkShift._id);\n        workShift.workAssignments = workAssignments;\n\n        for (let wd of wsc.workDays) {\n          if (wd.workDayInMonth === selectedWorkDay.workDayInMonth) {\n            wd = selectedWorkDay;\n          }\n        }\n      }\n    }\n\n    this.props.reloadWorkSchedules(workSchedules, selectedWorkSchedule, selectedWorkDay, selectedWorkShift);\n    message.success('SUCCESS');\n    this.setModalVisible(false);\n  }\n\n  onCancel() {\n    this.setModalVisible(false);\n  }\n\n  onCheckStaff(checked, staffID) {\n    const { staffs } = this.props;\n    let { assigners } = this.state;\n\n    if (checked) {\n      assigners.push(staffID);\n    } else {\n      assigners = assigners.filter(id => id !== staffID);\n    }\n\n    if (assigners.length === staffs.length) {\n      this.setState({ isAllStaffsChecked: true });\n    } else {\n      this.setState({ isAllStaffsChecked: false });\n    }\n\n    this.setState({ assigners });\n  }\n\n  onCheckAllStaffs(checked) {\n    const { staffs } = this.props;\n\n    let { assigners } = this.state;\n    if (checked) {\n      assigners = staffs.map(staff => staff._id);\n    } else {\n      assigners = [];\n    }\n\n    this.setState({ assigners, isAllStaffsChecked: checked });\n  }\n\n  render() {\n    const { selectedWorkShift, selectedWorkDay, staffs, isBtnOpenDisabled } = this.props;\n    let { assigners } = this.state;\n\n    return (\n      <div className=\"add-work-shift-assigner\">\n        <Tooltip placement=\"bottom\" title=\"Thêm nhân viên\">\n          <Button\n            onClick={() => this.setModalVisible(true)}\n            className=\"add-work-shift-assigner__btn-open\"\n            type=\"link\"\n            icon={<UsergroupAddOutlined />}\n            disabled={this.props.isBtnOpenDisabled}\n          />\n        </Tooltip>\n        <Modal\n          title={<span style={{ color: '#ff8220' }}>{`${selectedWorkDay.workWeekDay ? selectedWorkDay.workWeekDay + ', ' : ''} ${selectedWorkDay.workYear ? moment(new Date(selectedWorkDay.workYear, selectedWorkDay.workMonth - 1, selectedWorkDay.workDayInMonth)).format('DD/MM/YYYY') + ' (' + moment(selectedWorkShift.startTime).format('HH:mm') + ' - ' + moment(selectedWorkShift.endTime).format('HH:mm') + ') | Phân ca làm việc' : ''}`}</span>}\n          centered\n          visible={this.state.isVisible}\n          onOk={() => this.onOK()}\n          onCancel={() => this.onCancel()}\n          okText=\"Phân công\"\n          cancelText=\"Hủy bỏ\"\n        >\n          <h3>Nhân viên chưa phân công ({staffs.length})</h3>\n\n          <div className=\"add-work-shift-assigner__list-staffs\">\n            <Row className=\"add-work-shift-assigner__list-staffs__header\">\n              <Col span={21} className=\"add-work-shift-assigner__list-staffs__header__col-1\">\n                <span>Chọn tất cả</span>\n              </Col>\n              <Col span={3} className=\"add-work-shift-assigner__list-staffs__header__col-2\">\n                {staffs.length > 0 ? (\n                  <Checkbox\n                    onChange={e => this.onCheckAllStaffs(e.target.checked)}\n                    checked={this.state.isAllStaffsChecked} />\n                ) : <></>}\n              </Col>\n            </Row>\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={staffs}\n              renderItem={staff => (\n                <List.Item>\n                  <Row style={{ width: '100%' }} className=\"animated fadeIn\">\n                    <Col span={21}>\n                      <List.Item.Meta\n                        avatar={<Avatar src={staff.avatar} />}\n                        title={staff.fullname}\n                        description={USER_ROLES[staff.role].name}\n                      />\n                    </Col>\n                    <Col span={3} className=\"add-work-shift-assigner__list-staffs__checkbox-wrapper\">\n                      <Checkbox\n                        onChange={e => this.onCheckStaff(e.target.checked, staff._id)}\n                        checked={assigners.find(id => id === staff._id) ? true : false} />\n                    </Col>\n                  </Row>\n                </List.Item>\n              )}\n            />\n          </div>\n\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default withCookies(BtnAddWorkShiftAssigner);"]},"metadata":{},"sourceType":"module"}