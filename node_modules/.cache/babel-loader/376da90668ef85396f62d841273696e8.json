{"ast":null,"code":"var _jsxFileName = \"/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/ImageUploader/ImageUploader.js\";\nimport React, { Component } from 'react';\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, UploadOutlined } from '@ant-design/icons';\nimport './ImageUploader.style.scss';\nexport default class ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.getBase64(info.file.originFileObj, imageUrl => {\n          this.setState({\n            imageUrl,\n            loading: false\n          });\n        });\n      }\n    };\n\n    this.state = {\n      loading: false,\n      imageUrl: '',\n      isHovered: false\n    };\n  }\n\n  getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n\n    const isLt2M = file.size / 1024 / 1024 < 2;\n\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    return isJpgOrPng && isLt2M;\n  }\n\n  setHover(isHovered) {\n    this.setState({\n      isHovered\n    });\n  }\n\n  render() {\n    const {\n      defaultImageUrl\n    } = this.props;\n    const {\n      imageUrl\n    } = this.state;\n    const uploadButton = React.createElement(\"div\", {\n      className: \"image-uploader__btn-upload\",\n      onMouseOver: () => this.setHover(true),\n      onMouseOut: () => this.setHover(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      className: \"image-uploader__loading-bg animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(LoadingOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"image-uploader__loading-bg__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\u0110ang t\\u1EA3i\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.isHovered ? React.createElement(\"div\", {\n      className: \"image-uploader__upload-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(UploadOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"image-uploader__upload-bg__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"\\u0110\\u0103ng \\u1EA3nh\")) : React.createElement(React.Fragment, null), React.createElement(\"img\", {\n      src: defaultImageUrl,\n      alt: \"default\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      className: \"image-uploader\",\n      style: {\n        width: 150,\n        height: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      beforeUpload: e => this.beforeUpload(e),\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, imageUrl ? React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"uploaded\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }) : uploadButton));\n  }\n\n}","map":{"version":3,"sources":["/home/viettran/Desktop/cnpm-19hc-group04/final-project/front-end/src/components/utilities/ImageUploader/ImageUploader.js"],"names":["React","Component","Upload","message","LoadingOutlined","UploadOutlined","ImageUpload","constructor","props","handleChange","info","file","status","setState","loading","getBase64","originFileObj","imageUrl","state","isHovered","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","isJpgOrPng","type","error","isLt2M","size","setHover","render","defaultImageUrl","uploadButton","width","height","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, UploadOutlined } from '@ant-design/icons';\nimport './ImageUploader.style.scss';\n\nexport default class ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      imageUrl: '',\n      isHovered: false\n    }\n  }\n\n  getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n  }\n\n  handleChange = info => {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl => {\n        this.setState({\n          imageUrl,\n          loading: false\n        });\n      });\n    }\n  };\n\n  setHover(isHovered) {\n    this.setState({ isHovered });\n  }\n\n  render() {\n    const { defaultImageUrl } = this.props;\n    const { imageUrl } = this.state;\n    const uploadButton = (\n      <div className=\"image-uploader__btn-upload\"\n        onMouseOver={() => this.setHover(true)}\n        onMouseOut={() => this.setHover(false)}\n      >\n        {this.state.loading ? (\n          <div className=\"image-uploader__loading-bg animated fadeIn\">\n            <LoadingOutlined />\n            <span className=\"image-uploader__loading-bg__text\">Đang tải</span>\n          </div>\n        )\n          : (\n            <div>\n              {this.state.isHovered ? (\n                <div className=\"image-uploader__upload-bg\">\n                  <UploadOutlined />\n                  <span className=\"image-uploader__upload-bg__text\">Đăng ảnh</span>\n                </div>\n              ) : <></>}\n              <img src={defaultImageUrl} alt=\"default\" style={{ width: '100%' }} />\n            </div>\n          )}\n      </div>\n    );\n\n    return (\n      <div className=\"image-uploader\" style={{ width: 150, height: 150 }}>\n        <Upload\n          name=\"avatar\"\n          listType=\"picture-card\"\n          showUploadList={false}\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n          beforeUpload={e => this.beforeUpload(e)}\n          onChange={e => this.handleChange(e)}\n        >\n          {imageUrl ? <img src={imageUrl} alt=\"uploaded\" style={{ width: '100%' }} /> : uploadButton}\n        </Upload>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}